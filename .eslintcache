[{"/Users/oheunchong/Documents/GitHub/pebble-client/src/index.js":"1","/Users/oheunchong/Documents/GitHub/pebble-client/src/main.js":"2","/Users/oheunchong/Documents/GitHub/pebble-client/src/comp.js":"3","/Users/oheunchong/Documents/GitHub/pebble-client/src/uploadhandler.js":"4","/Users/oheunchong/Documents/GitHub/pebble-client/src/pfphandler.js":"5","/Users/oheunchong/Documents/GitHub/pebble-client/src/createlink.js":"6","/Users/oheunchong/Documents/GitHub/pebble-client/src/newviewfile.js":"7"},{"size":6635,"mtime":1630075160269,"results":"8","hashOfConfig":"9"},{"size":31183,"mtime":1630075160269,"results":"10","hashOfConfig":"9"},{"size":30334,"mtime":1630075160269,"results":"11","hashOfConfig":"9"},{"size":15475,"mtime":1630075160269,"results":"12","hashOfConfig":"9"},{"size":6212,"mtime":1630075160269,"results":"13","hashOfConfig":"9"},{"size":9491,"mtime":1630075160269,"results":"14","hashOfConfig":"9"},{"size":8916,"mtime":1630075160269,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"114he95",{"filePath":"20","messages":"21","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":2,"source":"28","usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"31","usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"19"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/Users/oheunchong/Documents/GitHub/pebble-client/src/index.js",["38","39","40","41","42"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Mobilenew, Lbtnclick,Alignicon,Dir} from \"./comp\";\nimport {openleftbar, getShared, mainMenu} from './main'\n\nReactDOM.render(\n  <React.StrictMode>\n  </React.StrictMode>,\n  document.querySelector('#rt')\n);\n\nclass Leftmenubar extends React.Component {\n  constructor(props) {\n    super(props)\n    this.stle = {stroke: \"#fff\", fill: \"#fff\", color: \"#fff\"}\n\n    this.state ={files: this.stle, recent: {}, trash: {}, share: {}}\n  }\n  makeactive(ctx) {\n    this.setState({files: {}, recent: {}, trash: {}, share: {} })\n    if(ctx == \"files\") {\n      this.setState({files: this.stle})\n      mainMenu()\n    }else if(ctx == \"recent\") {\n      this.setState({recent: this.stle})\n    }else if(ctx == \"trash\") {\n      this.setState({trash: this.stle})\n    }else if(ctx == \"share\") {\n      this.setState({share: this.stle})\n      getShared()\n    }\n  }\n  render() {\n    return(\n      <>\n      <div className=\"leftmenubar\">\n      <div className=\"logocont\" onClick={openleftbar}>\n                <svg version=\"1.1\" id=\"desktop-logo\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\">\n                    <path id=\"logo-svg-path\" d=\"M584.1,307.5c0-1.4,0.1-2.8,0.1-4.2c0-68.5-55.5-124.1-124.1-124.1c-32.4,0-61.9,12.5-84,32.8\n                        c-22.7-26.1-56.2-42.7-93.6-42.7c-68.5,0-124.1,55.5-124.1,124.1c0,4.8,0.3,9.5,0.8,14.1c-2.5-0.2-5-0.3-7.6-0.3\n                        c-62.9,0-113.9,49.3-113.9,110.2c0,60.9,51,110.2,113.9,110.2h425.7c58.5,0,105.9-49.3,105.9-110.2\n                        C683.3,359,639.4,311.2,584.1,307.5z\" />\n                    <g>\n                        </g>\n                    <g>\n                        </g>\n                    <g>\n                        </g>\n                    <g>\n                        </g>\n                </svg>\n            </div>\n\n        \n        <div className=\"leftmenubtn\" id=\"mpagecont\" onClick={()=>this.makeactive(\"files\")} style={this.state.files}>\n                <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\"> \n                    <path id=\"default-black-svg-path\" style={this.state.files} d=\"M518,208.6H348.8c-10.1-24.9-34.6-42.6-63-42.6\n                        h-47.7c-37.3,0-67.9,30.6-67.9,67.9v24.7v23V441c0,27.5,22.5,50,50,50H518c27.5,0,50-22.5,50-50V258.6\n                        C568,231.1,545.5,208.6,518,208.6z\" />\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                </svg>\n                <b className=\"exparea\" id=\"folderico\">Files</b>\n            </div>\n            <div className=\"leftmenubtn\" onClick={()=>this.makeactive(\"recent\")} style={this.state.recent}>          \n                <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\">\n                    <circle id=\"default-black-svg-path\" style={this.state.recent} cx=\"392.9\" cy=\"261.9\" r=\"99.8\"/>\n                    <path id=\"default-black-svg-path\" style={this.state.recent} d=\"M393.5,361.8c-77.1,0-141.6,72.7-158.2,170.2\n                        h316.3C535.1,434.5,470.6,361.8,393.5,361.8z\"/>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                </svg>  \n                <b className=\"exparea\" id=\"gico\">Recent</b>\n            </div>\n            <div className=\"leftmenubtn\" onClick={()=>this.makeactive(\"trash\")} style={this.state.trash}>\n                <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" x=\"0px\"\n                    y=\"0px\" viewBox=\"0 0 720 720\">\n                    <path style={this.state.trash} id=\"default-black-svg-path\" d=\"M478.9,523.4h-215c-2.8,0-5-2.2-5-5V247.7\n                        c0-2.8,2.2-5,5-5h215c2.8,0,5,2.2,5,5v270.7C483.9,521.1,481.6,523.4,478.9,523.4z\"/>\n                    <line style={this.state.trash} id=\"default-black-svg-path\" x1=\"368.8\" y1=\"245.5\" x2=\"370.5\" y2=\"526.2\"/>\n                    <path style={this.state.trash} id=\"default-black-svg-path\" d=\"M527.9,219.4H211.4c-3,0-5.4-2.4-5.4-5.4v0\n                        c0-3,2.4-5.4,5.4-5.4h316.5c3,0,5.4,2.4,5.4,5.4v0C533.3,217,530.9,219.4,527.9,219.4z\"/>\n                    <path style={this.state.trash} id=\"default-black-svg-path\" d=\"M396.5,186.4H348c-2.8,0-5-2.2-5-5v-20.7\n                        c0-2.8,2.2-5,5-5h48.5c2.8,0,5,2.2,5,5v20.7C401.5,184.2,399.2,186.4,396.5,186.4z\"/>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                </svg>\n            <b className=\"exparea\" id=\"trashico\">Trash</b>\n        </div>\n        <div className=\"leftmenubtn\" onClick={()=>this.makeactive(\"share\")} style={this.state.share}>\n            <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" x=\"0px\"\n                 y=\"0px\" viewBox=\"0 0 720 720\">\n            <circle style={this.state.share} id=\"default-black-svg-path\" cx=\"243.6\" cy=\"338.7\" r=\"53.7\"/>\n            <line style={this.state.share} id=\"default-black-svg-path\" x1=\"280.4\" y1=\"298.2\" x2=\"394.1\" y2=\"229.8\"/>\n            <line style={this.state.share} id=\"default-black-svg-path\" x1=\"282.9\" y1=\"375.3\" x2=\"378.9\" y2=\"443.8\"/>\n            <circle style={this.state.share} id=\"default-black-svg-path\" cx=\"427\" cy=\"209.9\" r=\"53.7\"/>\n            <circle style={this.state.share} id=\"default-black-svg-path\" cx=\"413.1\" cy=\"468.2\" r=\"53.7\"/>\n            <g>\n            </g>\n            <g>\n            </g>\n            <g>\n            </g>\n            <g>\n            </g>\n            </svg>\n            <b className=\"exparea\" id=\"share\">Share</b>\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nexport function eclickdetector(aa, bb) {\n  if(aa === true) {\n    var instances = ['View', 'Delete', 'Share', 'Download', 'Change View', 'New'];\n  }else {\n    var instances = ['Change View', 'New'];\n  }\n  ReactDOM.render (\n    <Lbtnclick blank_instances={instances} id={bb}/>,\n    document.querySelector('#rbtn')\n  );\n}\nReactDOM.render (\n  <Alignicon />,\n  document.querySelector(\".aligniconArea\")\n)\nReactDOM.render (\n  [<Dir />],\n  document.querySelector('.dirArea')\n)\nexport async function mobilenew(prop, size, id, name) {\n  ReactDOM.render (\n    <Mobilenew propp={prop} size={size} id={id} name={name}/>,\n    document.querySelector('#mbtn')\n  )\n}\nReactDOM.render (\n  <Leftmenubar />,\n  document.querySelector('#rt')\n);",["43","44"],"/Users/oheunchong/Documents/GitHub/pebble-client/src/main.js",["45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75"],"//(c) 2021 xdwhat\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {eclickdetector} from './index'\nimport {processpfp} from './pfphandler'\nimport {mobilenew} from './index'\nimport {Filecont, Overlay, Arrangebar, Dir, Alignicon, Mobilemenubtn, Group, Button, Searchico, Pfp, Lpfpmenu} from './comp'\nimport { encode, decode } from 'base64-arraybuffer';\nimport localforage from 'localforage';\nimport {uploadworker} from './uploadhandler.js'\nimport timeZoneConverter from 'time-zone-converter'\n\nfunction convert_timezone(time) {\n    var offset = new Date().getTimezoneOffset();\n    var f = timeZoneConverter(time, offset/60, -2, 'YYYY/MM/DD HH:mm')\n    return f\n}\nexport function pfpmenu() {\n    document.querySelector('.lpfpmenu').classList.toggle('active');\n}\nif(!(localStorage.getItem('arrange') == 1)) {\n    localStorage.setItem('arrange', 0)\n}\nlocalStorage.removeItem(\"tk\")\n\nexport function rclick(e) {\n    e.stopPropagation();\n    var main = document.querySelectorAll('.filecont');\n    if(window.innerWidth < 760) {\n        document.querySelector('.rclickmenu').classList.remove('hidden');\n        eclickdetector()\n        ReactDOM.render(\n            <Overlay show={true}/>,\n            document.querySelector('#olay')\n        )\n        main.forEach(element => {\n        var clickelem = element.contains(e.target);\n        if(clickelem) {\n            eclickdetector(true, element.id)\n            if(document.querySelector(\".leftclicked\") != undefined) {\n                for(var i=0;i<document.querySelectorAll(\".leftclicked\").length;i++) {\n                    document.querySelectorAll(\".leftclicked\")[i].classList.remove(\"leftclicked\")\n                }\n            }\n            element.classList.add(\"leftclicked\")\n        }else if(clickelem === false) {\n            document.querySelector('.rclickmenu').style=\"\";\n            if(document.querySelector(\".leftclicked\") != undefined) {\n                for(var i=0;i<document.querySelectorAll(\".leftclicked\").length;i++) {\n                    document.querySelectorAll(\".leftclicked\")[i].classList.remove(\"leftclicked\")\n                }\n            }\n        }\n        });\n    }else if(window.innerWidth > 760){\n        eclickdetector()\n        main.forEach(element => {\n        var clickelem = element.contains(e.target);\n        if(clickelem) {\n            eclickdetector(true, element.id)\n            if(document.querySelector(\".leftclicked\") != undefined) {\n                for(var i=0;i<document.querySelectorAll(\".leftclicked\").length;i++) {\n                    document.querySelectorAll(\".leftclicked\")[i].classList.remove(\"leftclicked\")\n                }\n            }\n            element.classList.add(\"leftclicked\")\n        }\n\n        })\n        if(e.pageX+ 155 > cont.offsetWidth) {\n            document.querySelector('.rclickmenu').style='top:'+e.pageY+'px;left:'+(cont.offsetWidth-165)+'px;';\n            document.querySelector('.rclickmenu').classList.remove('hidden');\n        }\n        if(e.pageY-45 > cont.scrollHeight) {\n            document.querySelector('.rclickmenu').style='top:'+(cont.scrollHeight+45)+'px;left:'+e.pageX+'px;';\n            document.querySelector('.rclickmenu').classList.remove('hidden');\n        }\n        if(e.pageY-45 > cont.scrollHeight && e.pageX+ 100 > cont.offsetWidth) {\n            document.querySelector('.rclickmenu').style='top:'+(cont.scrollHeight+45)+'px;left:'+(cont.offsetWidth-165)+'px;';\n            document.querySelector('.rclickmenu').classList.remove('hidden');\n        }\n        else if(e.pageX+ 155 < cont.offsetWidth && e.pageY-45 < cont.scrollHeight) {\n            document.querySelector('.rclickmenu').style='top:'+e.pageY+'px;left:'+e.pageX+'px;';\n            document.querySelector('.rclickmenu').classList.remove('hidden');\n        }\n    }\n}\nexport function showfilelabel() {\n    document.querySelector('.fileoptions-pc').classList.toggle('hide');\n}\nexport function hideoverlaycont() {\n        document.querySelector('.overlayarea').classList.add('hide')\n    \n}\n\nexport function calcsize(length) {\n    var fs\n    if(typeof length == \"number\") {\n        if(1024 >= length) {\n            fs = Math.round(length) + \"B\"\n    \n        }else if(length > 1024 && length < 1024*1024) {\n            fs = Math.round(length/1024) + \"KB\"\n    \n        }else if(length >= 1024*1024 && length < 1024*1024*1024) {\n            fs = Math.round(length/(1024*1024)) + \"MB\"\n    \n        }else if(length >= 1024*1024*1024 && length < 1024*1024*1024*1024) {\n            fs = Math.round(length/(1024*1024*1024)) + \"GB\"\n            \n        }\n    }else {\n        fs = \"Unknown\"\n    }\n    return fs\n}\n\n//fix pls pls\nexport function openleftbar() {\n    document.querySelector('.leftmenubar').classList.remove('act');\n    document.querySelector('.leftmenubar').classList.toggle('opened');\n    document.querySelector('#folderico').classList.toggle('show');\n    document.querySelector('#trashico').classList.toggle('show');\n    document.querySelector('#share').classList.toggle('show');\n    document.querySelector('#gico').classList.toggle('show');\n}\n\nexport function arrange() {\n\n    ReactDOM.render (\n        <Alignicon />,\n        document.querySelector(\".aligniconArea\")\n    )\n    var state;\n    var elem2=[]\n    if(localStorage.getItem(\"arrange\") == 1) {\n        localStorage.setItem(\"arrange\", 0);\n        state=\"\"\n    }else if(localStorage.getItem(\"arrange\") == 0) {\n        localStorage.setItem(\"arrange\", 1);\n        state = \"row\"\n        elem2.unshift(<Arrangebar />)\n    }\n    var target = curdir\n    for(var i=0;i<elem.length;i++) {\n        var ea2 = elem[i]\n        elem[i].state = state\n        if(ea2.dir == target) {\n            elem2.push(<Filecont name={ifempty(ea2.name)} size={ifempty(calcsize(ea2.size))} mime={ifempty(ea2.mime)} date={ea2.date} id={ea2.id} state={state} typ={ea2.typ} src={ea2.src}/>)\n        }\n    }\n    ReactDOM.render(\n        elem2,\n        document.querySelector(\".mainarea\")\n    )\n    \n}\n\n    \n    export async function getud() {\n        var storedToken = await localforage.getItem(\"tk\")\n        if(storedToken == null) {\n            document.location.href=\"https://petadrop.com/\";\n        }else {\n            var resp = await fetch(\"https://petadrop.com/api/udfetch\", {method: 'POST', headers:{'Authorization': storedToken.slice(0, 200), 'X-XWC-act': 'ludf'}})\n            if(!resp.ok) {\n                console.error(resp.status)\n            }\n            var json = await resp.json()\n            callback(json);\n        }\n\n    }\n    \n    var curdir = \"/ 0\"\n    \n    export {curdir}\n    \n    getud()\n    \n    var curtime\n    function sortResults(prop, asc) {\n        elem.sort(function(a, b) {\n            if (asc) {\n                return (a[prop] > b[prop]) ? 1 : ((a[prop] < b[prop]) ? -1 : 0);\n            } else {\n                return (b[prop] > a[prop]) ? 1 : ((b[prop] < a[prop]) ? -1 : 0);\n            }\n        });\n    }\n    \n    export function alignby(a, b) {\n        sortResults(a, b)\n        rerender()\n    }\n    export function ifempty(string) {\n        if(string.length == 0) {\n            return \"unknown\"\n        }else {\n            return string\n        }\n    }\n    var cont = document.querySelector('body');\n    cont.addEventListener('contextmenu', e => {\n        e.preventDefault();\n    });\n    var area = document.querySelector('.mainarea');\n    area.addEventListener('contextmenu', e => {\n        e.preventDefault();\n        rclick(e);\n    });\n    [document.querySelector(\".mainarea\"), document.querySelector(\".mainheader\")].forEach(itm =>{\n        itm.addEventListener(\"click\",function(){\n            for(var i=0;i<document.querySelectorAll(\".leftclicked\").length;i++) {\n                document.querySelectorAll(\".leftclicked\")[i].classList.remove(\"leftclicked\")\n            }\n        \n        \n            document.querySelector('.rclickmenu').classList.add('hidden');\n        });\n    })\n    window.addEventListener(\"resize\", function(){\n        document.querySelector('.rclickmenu').classList.add('hidden');\n        document.querySelector('.rclickmenu').style=\"\";\n    });\n\n    var elem = []\n    var state;\n\n    //pw: string, iv: arraybuffer, salt: arraybuffer, data: arraybuffer\n    export async function decryptFromPw(pw, iv, salt, data) {\n        var encodedpw = new TextEncoder().encode(pw)\n        var importedKey = await crypto.subtle.importKey(\"raw\", encodedpw, \"PBKDF2\", false, [\"deriveKey\", \"deriveBits\"])\n        var derivedKey = await crypto.subtle.deriveKey({\"name\": \"PBKDF2\", salt: salt, \"iterations\": 100000, \"hash\": \"SHA-256\"}, importedKey, { \"name\": \"AES-CBC\", \"length\": 256}, false, [ \"encrypt\", \"decrypt\" ])\n        try {\n            var decData = await crypto.subtle.decrypt({name: 'AES-CBC', iv: iv}, derivedKey, data)\n            return decData\n        }\n        catch(decryptionErr) {\n            console.error(decryptionErr)\n        }\n    }\n\n    async function callback(dta) {\n        var storedToken = await localforage.getItem(\"tk\")\n        var percentage\n        if(window.localStorage.getItem(\"arrange\") == 1) {\n            state = \"row\";\n            document.querySelector('#grid').classList.toggle('transparent');\n            document.querySelector('#row').classList.toggle('transparent');\n        }\n        else {\n            state = \"\";\n        }\n            elem = []\n            var res = dta;\n            if (res.hasOwnProperty(\"Pfp\")) {\n            var val = res.Pfp.toString();\n            if(val == \"\") {\n                var l = document.querySelectorAll('.pfpimg');\n                for(var i=0;i<l.length;i++) {\n                l[i].src = \"https://cdn.xdwhat.tech/pfp.png\"\n                }\n            }else {\n                var sarray = val.split(\"|\");\n                processpfp(sarray[0], sarray[1], sarray[2]);\n            }\n            if(res.Username == \"\") {\n                console.error(\"no username\")\n            }\n            ReactDOM.render(\n                <>\n                    <>\n                    <div className=\"headerleft\">\n                    <div className=\"fileoptions-pc\">\n                        <label htmlFor=\"fileinput\" className=\"fileoptbutton\">Upload file</label>\n                        <input id=\"fileinput\" type=\"file\" onChange={() => uploadworker()} multiple/>\n                        <div className=\"fileoptbutton\">Upload folder</div>\n                        <div className=\"fileoptbutton\"onClick={createfolder}>Create folder</div >\n                    </div>\n                    <Mobilemenubtn />\n                    <Group />\n                    <Button />\n                    <Searchico />\n                    </div>\n                    </>\n                    <div className=\"headerright\">\n                    <Pfp/>\n                    </div>\n                <Lpfpmenu userid={res.Username.split(\"@\")[0]}/>\n                </>,\n                document.querySelector('.header')\n            )\n            curtime = res.Timestamp\n            if(res.Folder != null) {\n                var pww = storedToken.slice(200)\n                decfolder(0)\n                async function decfolder(nth) {\n                    var folders = JSON.parse(res.Folder[nth])\n                    var encryptedname = decode(folders.Name)\n                    var salt = new Uint8Array(encryptedname.slice(0, 16))\n                    var iv = new Uint8Array(encryptedname.slice(16, 32))\n                    var realdata2 = new Uint8Array(encryptedname.slice(32))\n                    try {\n                        var decdata = await decryptFromPw(pww, iv, salt, realdata2)\n                        var dec = new TextDecoder();\n                        elem.push({name : dec.decode(decdata), size : folders.Size, mime : \"N/A\", date : convert_timezone(folders.Date), id : folders.Fid + \" \" +folders.Index.split(\" \")[1], state : state, typ: \"folder\", dir : folders.Index}) \n                        if(res.File != null) {\n                            percentage = elem.length/(res.File.length + res.Folder.length)\n                        }else {\n                            percentage = elem.length/(res.Folder.length)\n                        }\n                        document.querySelector(\".loadinglabel\").innerText = \"Decrypting, \"+Math.round(percentage*100)+\"% Done\"\n                        document.querySelector(\"#loadwrapperloading\").style=\"stroke-dashoffset:\"+(1850 - (1850*(percentage)))+\";fill:none;\"\n                        if(nth < res.Folder.length -1) {\n                            decfolder(nth+1)\n                        }else {\n                            if(res.File == null) {\n                                rerender()\n                                mobilenew(\"bsc\")\n                                document.querySelector(\".loadwrapper\").classList.add(\"loadwrapperhide\")\n                            }\n                        }\n                    }\n                    catch(decryptionErr) {\n                        console.error(decryptionErr)\n                    } \n    \n                }\n            }\n            if(res.File != null) {\n                var tk = await localforage.getItem(\"tk\")\n                    var xhr = new XMLHttpRequest();\n                    xhr.open(\"POST\", \"https://petadrop.com/api/thumbhandle/\")\n                    xhr.setRequestHeader(\"Authorization\", tk.slice(0, 200))           \n                    xhr.setRequestHeader(\"x-xwc-act\", \"get\") \n                    xhr.onreadystatechange = function() {\n                        if (xhr.readyState === xhr.DONE) {\n                            if (xhr.status === 200) {\n                                    if(JSON.parse(xhr.response).Finaldta != null) {\n                                        tmbloop(0)\n                                        async function tmbloop(i) {\n                                            var fid = JSON.parse(JSON.parse(xhr.response).Finaldta[i]).Id\n                                            var raw = decode(JSON.parse(JSON.parse(xhr.response).Finaldta[i]).Thumb)\n                                            var iv=raw.slice(0, 16);\n                                            var salt=raw.slice(16, 32);\n                                            var storedToken = await localforage.getItem(\"tk\")\n                                            var fle = raw.slice(32)\n                                            var decrypted = await decryptFromPw(storedToken.slice(200), iv, salt, fle)\n                                            var url = URL.createObjectURL(new Blob([decrypted], {type: \"image/jpeg\"}))\n                                            var v = elem.findIndex(function(item) {return item.id === fid})\n                                            if (v != -1 ) {\n                                                elem[v].src= url\n                                            }\n                                            if(i == (JSON.parse(xhr.response).Finaldta).length -1) {\n                                                rerender()\n                                            }else {\n                                                tmbloop(i+1)\n                                            }\n                                        }\n                                    }\n                                \n                            }\n                        }\n                    }\n                    xhr.send()\n                var enc = new TextEncoder();\n                var decer = new TextDecoder();\n                decdata(0)\n                async function decdata(datadecnth) {\n                    var finalfiledata = JSON.parse(res.File[datadecnth])\n                    var fnbuffer = decode(finalfiledata.Name)\n                    var salt = fnbuffer.slice(0,16);\n                    var iv = fnbuffer.slice(16,32);\n                    var realname = fnbuffer.slice(32);\n                    var impk = await crypto.subtle.importKey(\"raw\", enc.encode(storedToken.slice(200)), \"PBKDF2\", false, [\"deriveKey\", \"deriveBits\"])\n                    var derivedkey = await crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt,\"iterations\": 100000, \"hash\": \"SHA-256\"}, impk, { name: \"AES-CBC\", length: 256},false,[ \"encrypt\", \"decrypt\" ])\n                    var dec = await crypto.subtle.decrypt({name: 'AES-CBC',iv: iv}, derivedkey, realname)\n                    elem.push({name : decer.decode(dec), size : finalfiledata.Size, mime : finalfiledata.Mime, date : convert_timezone(finalfiledata.Date), id : finalfiledata.Id, state : state, dir : finalfiledata.Dir, src: \"\"})\n                    if(res.Folder != null) {\n                        percentage = elem.length/(res.File.length + res.Folder.length)\n                    }else {\n                        percentage = elem.length/(res.File.length)\n                    }\n                    document.querySelector(\".loadinglabel\").innerText = \"Decrypting, \"+Math.round(percentage*100)+\"% Done\"\n                    document.querySelector(\"#loadwrapperloading\").style=\"stroke-dashoffset:\"+(1850 - (1850*(percentage)))+\";fill:none;\"\n                    if(datadecnth < res.File.length -1) {\n                        decdata(datadecnth+1)\n                    }else {\n                        mobilenew(\"bsc\")\n                        document.querySelector(\".loadwrapper\").classList.add(\"loadwrapperhide\")\n                        rerender()\n                    }\n                }\n            }\n            if(res.File == null && res.Folder == null) {\n                mobilenew(\"bsc\")\n                document.querySelector(\".loadwrapper\").classList.add(\"loadwrapperhide\")\n                ReactDOM.render(\n                    <div class='filenotfound'>Nothing Here ..Yet</div>,\n                    document.querySelector(\".mainarea\")\n                )\n            }\n        }else {\n            document.querySelector(\".loadinglabel\").innerText = res.Rcode.toString();\n        }\n    \n    }\n    \n    export function logout() {\n        localforage.getItem(\"tk\").then(function(storedToken) {\n            if(storedToken == null) {\n                console.log(\"ur not even logged in bruh\")\n            }else {\n                localforage.removeItem(\"tk\");\n            }\n            document.location.href=\"https://petadrop.com/\";\n        })\n    }\n    var list1= []\n    export async function getShared() {\n        ReactDOM.render (\n            <p className=\"dirbold\"><b>Shared Files</b></p>,\n            document.querySelector('.dirArea')\n          )\n          ReactDOM.render (\n            <></>,\n            document.querySelector('.aligniconArea')\n          )\n        ReactDOM.render(\n            <div className=\"loading\"><img src=\"https://cdn.xdcs.me/static/main/loading.gif\" width=\"25px\"></img></div>,\n            document.querySelector(\".mainarea\")\n        )\n        var storedToken = await localforage.getItem(\"tk\")\n        let resp = await fetch(\"https://petadrop.com/api/udfetch\",{method: 'POST', headers:{'Authorization': storedToken.slice(0,200), 'x-xwc-act': 'getshared'}})\n        var json = await resp.json()\n        console.log(json[\"Links\"].length)\n        var fl=[]\n        if(localStorage.getItem(\"arrange\") == 1) {\n            fl.push(<Arrangebar />)\n        }else if(localStorage.getItem(\"arrange\") == 0) {\n            fl.unshift(<Arrangebar />)\n        }\n        for(var i=0;i<json[\"Links\"].length; i++) {\n            var nthJson = JSON.parse(json[\"Links\"][i])\n            const itemToFind = elem.find(function(item) {return item.id === nthJson.Id})\n            var index = elem.indexOf(itemToFind);\n            if (index > -1) {\n                var ea2 = elem[index]\n                fl.push(<Filecont name={ifempty(ea2.name)} size={ifempty(calcsize(ea2.size))} mime={ifempty(ea2.mime)} date={ea2.date} id={ea2.id} state={state} typ={ea2.typ} src={ea2.src}/>)\n            }\n        }\n        ReactDOM.unmountComponentAtNode(document.querySelector('.mainheader'))\n        ReactDOM.render(\n            fl,\n            document.querySelector(\".mainarea\")\n        )\n    }\n\n    export async function mainMenu() {\n        rerender()\n        ReactDOM.render (\n            <Alignicon />,\n            document.querySelector(\".aligniconArea\")\n          )\n        ReactDOM.render (\n            [<Dir a={list1}/>],\n            document.querySelector('.dirArea')\n          )\n    }\n    var list1 = []\n    export function gotofolder(target, name) {\n        for(var i=0;i<document.querySelectorAll(\".leftclicked\").length;i++) {\n            document.querySelectorAll(\".leftclicked\")[i].classList.remove(\"leftclicked\")\n        }\n        if(target.split(\" \")[1] != 0) {\n            list1[target.split(\" \")[1]] = (<b id={target} onClick={()=>gotofolder(target, name)}>&gt;{name}</b>)\n        }else {\n            list1 = []\n        }\n        if(list1.length>target.split(\" \")[1]) {\n            var i = list1.length - target.split(\" \")[1]\n            while(i > 1) {\n                i = i-1\n                list1.pop()\n            }\n        }\n        ReactDOM.render(\n            [<Dir a={list1}/>],\n            document.querySelector(\".dirArea\")\n        )\n        var elem2 = []\n            var target2 = target.split(\" \")[0] +\" \"+ (parseInt(target.split(\" \")[1]))\n        \n            var state;\n            if(localStorage.getItem(\"arrange\") == 1) {\n                state = \"row\"\n            }else {\n                state = \"\"\n            }\n\n        curdir = target2\n        for(var i=0;i<elem.length;i++) {\n            var ea2 = elem[i]\n            if(ea2.dir == target2) {\n                elem2.push(<Filecont name={ifempty(ea2.name)} size={ifempty(calcsize(ea2.size))} mime={ifempty(ea2.mime)} date={ea2.date} id={ea2.id} state={state} typ={ea2.typ} src={ea2.src}/>)\n            }\n            \n        }\n        if(window.localStorage.getItem(\"arrange\") == 1) {\n            elem2.unshift(<Arrangebar />)\n        }\n        \n        ReactDOM.render(\n            elem2,\n            document.querySelector(\".mainarea\")\n        )\n    }\n    export async function delfile(id) {\n        var storedToken = await localforage.getItem(\"tk\")\n            var form = new FormData();\n            form.append(\"fid\", id)\n            try {\n                let resp = await fetch(\"https://petadrop.com/api/udfetch\",{method: 'DELETE',body: form,headers:{'Authorization': storedToken.slice(0,200)}})\n                var json = await resp.json()\n                if(json.Rcode == \"Success\") {\n                    const itemToFind = elem.find(function(item) {return item.id === id})\n                    var index = elem.indexOf(itemToFind);\n                    if (index > -1) {\n                        elem.splice(index, 1);\n                        rerender()\n                    }\n                }\n            }\n            catch(e) {\n                console.error(e)\n            }\n\n    }\n    export function openSetting() {\n\n    }\n    export function createfolder() {\n        function del() {\n            ReactDOM.unmountComponentAtNode(document.querySelector(\"#sharearea\"))\n        }\n        ReactDOM.render(\n            <div class=\"sharebackground\">\n                    <div className=\"createfolder\">\n                <div className=\"folderheader\">Create a folder</div>\n                <div className=\"folderbody\">\n                    <input type=\"text\" id=\"folder_name_cont\" placeholder=\"Folder Name\">\n    \n                </input>\n                <div className=\"btnarea\">\n                    <div className=\"btn\" onClick={send}>\n                            Create\n                    </div>\n                    <div className=\"btn\" onClick={del}>\n                        Cancel\n                    </div>\n                </div>\n                </div>\n    \n            </div>\n            </div>,\n            document.querySelector(\"#sharearea\")\n        )\n        async function send() {\n            var name = document.querySelector(\"#folder_name_cont\").value\n            if(name.length > 0) {\n            var salt = crypto.getRandomValues(new Uint8Array(16))\n            var iv = crypto.getRandomValues(new Uint8Array(16))\n            let storedToken = await localforage.getItem(\"tk\")\n            var pww = storedToken.slice(200);\n            var enc = new TextEncoder()\n            try {\n                var impk = await crypto.subtle.importKey(\"raw\",enc.encode(pww),\"PBKDF2\",false,[\"deriveKey\", \"deriveBits\"])\n                var derivedkey = await crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt, \"iterations\": 100000, \"hash\": \"SHA-256\" }, impk, {\"name\": \"AES-CBC\", \"length\": 256 }, false, [ \"encrypt\", \"decrypt\" ])\n                var encryptedfn = await crypto.subtle.encrypt({ name: 'AES-CBC',iv: iv }, derivedkey, enc.encode(name))\n\n                encryptedfn = new Uint8Array(encryptedfn)\n                var finbuf = new Uint8Array(encryptedfn.length + 32)\n                finbuf.set(salt, 0)\n                finbuf.set(iv, 16)\n                finbuf.set(encryptedfn, 32)\n                var form = new FormData();\n                form.append(\"curentdirindex\", curdir.split(\" \")[0] +\" \"+ ( parseInt(curdir.split(\" \")[1])))\n                form.append(\"name\", encode(finbuf))\n                form.append(\"action\", \"create\")\n                try {\n                    var resp = await fetch(\"https://petadrop.com/api/folderhandle\", {method: 'POST', body: form, headers:{'Authorization': storedToken.slice(0, 200)}})\n                    var json = await resp.json()\n                    if(json.Message == \"success\") {\n                        updatedata()\n                        del()\n                    }else {\n                        console.error(\"error\")\n                    }\n                }\n                catch(fetchErr) {\n                    console.error(fetchErr)\n                }\n            }\n            catch(decryptionErr) {\n                console.error(decryptionErr)\n            }\n        }\n    }}\n\n    export async function singlefile(fid, link) {\n        var form = new FormData()\n        form.append(\"dir\", new TextDecoder().decode(fid))\n        var storedToken = await localforage.getItem(\"tk\")\n        try {\n            var response = await fetch('https://petadrop.com/api/udfetch', {method: 'POST', body: form, headers:{'X-XWC-act': 'of', 'Authorization': storedToken.slice(0, 200)}})\n            let rJson = await response.json()\n            let originAb = decode(rJson.Name)\n            var encryptedData = new Uint8Array(originAb.slice(32))\n            var salt = new Uint8Array(originAb.slice(0, 16))\n            var iv = new Uint8Array(originAb.slice(16, 32))\n            try {\n                var decData = await decryptFromPw(storedToken.slice(200), iv, salt, encryptedData)\n                var dec = new TextDecoder();\n                elem.push({name : dec.decode(decData), size : rJson.Size, mime : rJson.Mime, date : convert_timezone(rJson.Date), id : rJson.Id, state : state, dir : rJson.Dir, src : link})\n                rerender()\n            }\n            catch(decryptionErr) {\n                console.error(decryptionErr)\n            }\n        }\n        catch(fetchErr) {\n            console.error(fetchErr)\n        }\n    }\n\n\n    export async function updatedata(link) {\n        var insertedTmb\n        if (link != null) {\n            insertedTmb = link\n        }else if (link == null) {\n            insertedTmb = \"\"\n        }\n        var form = new FormData();\n        form.append(\"lt\", curtime)\n        var storedToken = await localforage.getItem(\"tk\")\n        var resp = await fetch('https://petadrop.com/api/udfetch', {method: 'POST', body: form, headers:{'X-XWC-act': 'nf', 'Authorization': storedToken.slice(0, 200)}})\n        if(!resp.ok) {\n            console.error(resp.status)\n        }\n        var json = await resp.json()\n        if(json.File != null || json.Folder != null || json.Deletedfile != null) {\n            curtime = json.Timestamp\n        }\n        var state;\n        if(json.Folder != null || json.File != null) {\n            if(window.localStorage.getItem(\"arrange\") == 1) {\n                state = \"row\";\n            }\n            else {\n                state = \"\";\n            }\n            if(json.Folder != null) {\n                    decfolder(0)\n                    async function decfolder(nth) {\n                        var folders = JSON.parse(json.Folder[nth])\n                        var encryptedname = decode(folders.Name)\n                        var salt = new Uint8Array(encryptedname.slice(0, 16))\n                        var iv = new Uint8Array(encryptedname.slice(16, 32))\n                        var realdata2 = new Uint8Array(encryptedname.slice(32))\n                        var decdata = await decryptFromPw(storedToken.slice(200), iv, salt, realdata2)\n                        var dec = new TextDecoder();\n                        elem.push({name : dec.decode(decdata), size : folders.Size, mime : \"N/A\", date : convert_timezone(folders.Date), id : folders.Fid + \" \" +folders.Index.split(\" \")[1], state : state, typ: \"folder\", dir : folders.Index}) \n                        if(nth < json.Folder.length -1) {\n                            decfolder(nth+1)\n                        }else {\n                            rerender()\n                        }\n                    }\n                \n\n            }\n            if(json.File != null) {\n                var decer = new TextDecoder();\n                decdata(0)\n                async function decdata(datadecnth) {\n                    var finalfiledata = JSON.parse(json.File[datadecnth])\n                    var fnbuffer = decode(finalfiledata.Name)\n                    var salt = fnbuffer.slice(0,16);\n                    var iv = fnbuffer.slice(16,32);\n                    var realname = fnbuffer.slice(32);\n                    var dec = await decryptFromPw(storedToken.slice(200), iv, salt, realname)\n                    elem.push({name : decer.decode(dec), size : finalfiledata.Size, mime : finalfiledata.Mime, date : convert_timezone(finalfiledata.Date), id : finalfiledata.Id, state : state, dir : finalfiledata.Dir, src : insertedTmb})\n                    if(datadecnth < json.File.length -1) {\n                        decdata(datadecnth+1)\n                    }else {\n                        rerender()\n                    }\n\n                }\n            }\n        }\n        if(json.Deletedfile != null) {\n            for(var i=0;i<json.Deletedfile.length;i++) {\n                const itemToFind = elem.find(function(item) {return item.id === JSON.parse(json.Deletedfile[i]).Id})\n                var index = elem.indexOf(itemToFind);\n                if (index > -1) {\n                    elem.splice(index, 1);\n                    rerender()\n                }\n            }\n        }\n    }\n    function rerender() {\n        var elem2 = []\n        for(var i=0;i<elem.length;i++) {\n            var ea2 = elem[i]\n            if(ea2.dir == curdir) {\n                elem2.push(<Filecont name={ifempty(ea2.name)} size={ifempty(calcsize(ea2.size))} mime={ifempty(ea2.mime)} date={ea2.date} id={ea2.id} state={ea2.state} typ={ea2.typ} src={ea2.src}/>)\n            }\n        }\n        if(window.localStorage.getItem(\"arrange\") == 1) {\n            elem2.unshift(<Arrangebar />)\n        }\n    ReactDOM.render(\n        elem2,\n        document.querySelector(\".mainarea\")\n    )\n    elem2=[]\n    }\n    export {elem as originalelem};","/Users/oheunchong/Documents/GitHub/pebble-client/src/comp.js",["76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123"],"import React from 'react';\nimport {openleftbar, arrange, pfpmenu, hideoverlaycont, showfilelabel, logout, alignby, delfile, gotofolder, rclick, createfolder, openSetting} from './main.js';\nimport {pfpinput} from './pfphandler.js';\nimport {rvf as newrvf, stopdownload} from './newviewfile'\nimport ReactDOM from 'react-dom';\nimport share from './createlink.js';\nimport copy from 'copy-text-to-clipboard';\nimport filename2prism from 'filename2prism';\nimport localforage from 'localforage';\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { arta } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { AiOutlineLink } from \"react-icons/ai\";\nconst vars = require('./vars.json')\nexport class Filecont extends React.Component {\n    dragstrt(e) {\n        e.preventDefault();\n\n    }\n\n    singleclick(id) {\n\n        var inx = this.props.id.split(\" \")\n        if(id.split(\" \").length > 1 && window.innerWidth < 760) {\n            gotofolder(inx[0] +\" \"+ parseInt(parseInt(inx[1]) + 1), this.props.name)\n        }else if(id.split(\" \").length == 1 && window.innerWidth < 760) {\n            newrvf(this.props.id, \"0:5242928\")\n        }else {\n            for(var i=0;i<document.querySelectorAll(\".leftclicked\").length;i++) {\n                document.querySelectorAll(\".leftclicked\")[i].classList.remove(\"leftclicked\")\n            }\n            document.getElementById(id).classList.add(\"leftclicked\")\n        }\n        //document.querySelector(\"#\"+el).classList.add(\"leftclicked\")\n    }\n    render() {\n        var icon\n        var imgwidth\n        if(!this.props.src) {\n            var a = this.props.name.split(\".\")[this.props.name.split(\".\").length - 1];\n            if(vars.textfile.indexOf(a) != -1) {\n                icon = \"https://xdcs.me/static/img/tesxt.png\"\n            }else if(vars.imagefile.indexOf(a) != -1) {\n                icon = \"https://xdcs.me/static/img/img.png\"\n            }else if(vars.codefile.indexOf(a) != -1) {\n                icon = \"https://xdcs.me/static/img/code.png\"\n            }else if(vars.vidfile.indexOf(a) != -1) {\n                icon = \"https://xdcs.me/static/img/vid.png\"\n            }else if(vars.audiofile.indexOf(a) != -1){\n                icon=\"https://xdcs.me/static/img/mus.png\"\n            }else {\n                icon=\"https://xdcs.me/static/img/ssa.png\"\n            }\n        }else {\n            icon = this.props.src\n        }\n        if(this.props.state == \"row\") {\n            imgwidth = \"20px\"\n        }else if(this.props.state == \"\") {\n            imgwidth = \"50px\"\n            if(this.props.src != \"\") {\n                imgwidth = \"70px\"\n            }\n        }\n        if(this.props.typ == \"folder\") {\n            var inx = this.props.id.split(\" \")\n            return(\n                <>\n                <div className={'filecont ' + this.props.state} id={this.props.id} onClick={()=>this.singleclick(this.props.id)} onDoubleClick={()=>gotofolder(inx[0] +\" \"+ parseInt(parseInt(inx[1]) + 1), this.props.name)}>\n        \n                    <div className={'imagecontainer' + this.props.state}>\n                    <div className={'filecontmb ' + this.props.state} style={{borderRadius:\"5px\", background:\"none\"}}>\n                    <svg version=\"1.1\" x=\"0px\" y=\"0px\" className=\"foldericon\" viewBox=\"0 0 600 600\">\n                    <g>\n                        <path className=\"st0\" style={{fill:\"#FFFFFF\"}} d=\"M302.06,549.6c-64.67,0-129.35,0.1-194.02-0.03c-48.6-0.1-84.46-25.41-99.43-70.95\n                        c-3.19-9.7-4.39-20.45-4.43-30.73C3.86,357.02,3.76,266.16,4.07,175.3C4.32,105.16,58.61,51.11,128.85,50.43\n                        c19.51-0.19,39.02,0.02,58.53-0.05c42.78-0.15,77.05,17.23,103.2,50.66c3.81,4.87,7.56,6.26,13.36,6.24\n                        c63.87-0.18,127.74-0.1,191.61-0.12c37.49-0.02,67.42,14.66,88.27,46.15c9.59,14.48,15.6,30.58,15.64,48.17\n                        c0.22,83.64,1.14,167.3-0.09,250.92c-0.83,56.44-45.34,97-103.3,97.16C431.41,549.74,366.73,549.6,302.06,549.6z\"/>\n                    </g>\n                    </svg>\n\n                    </div>\n                    </div>\n                  <div className={'label ' + this.props.state}>\n                      <p className= {'text ' + this.props.state}>{this.props.name}</p>\n                      <div className='filedetail'>\n                          <p className={'text ' + this.props.state} id='dtl'>N/A</p>\n                          <p className={'text ' + this.props.state} id='dtl'>Folder</p>\n                          <p className={'text ' + this.props.state} id='dtl'>{this.props.date}</p>\n                      </div>\n                  </div>\n                  <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"20px\" onClick={(e)=>rclick(e)} className={'fileoptiontdot ' + this.props.state}><circle cx=\"50\" cy=\"17.5\" r=\"9.92\"></circle><circle cx=\"50.21\" cy=\"49\" r=\"9.92\"></circle><circle cx=\"50\" cy=\"80.51\" r=\"9.92\"></circle></svg>\n                </div>   \n                </>\n              )\n        }else {\n            return(\n                <>\n                <div className={'filecont ' + this.props.state} id={this.props.id} onClick={()=>this.singleclick(this.props.id)} onDoubleClick={()=> newrvf(this.props.id, \"0:5242928\")} onDrag={(e)=>this.dragstrt(e)}>\n        \n                    <div className={'imagecontainer' + this.props.state}>\n                    <img className={'filecontmb ' + this.props.state} src={icon} width={imgwidth} height={imgwidth} style={{borderRadius:\"5px\"}}/>\n                    </div>\n                  <div className={'label ' + this.props.state}>\n                      <p className= {'text ' + this.props.state}>{this.props.name}</p>\n                      <div className='filedetail'>\n                          <p className={'text ' + this.props.state} id='dtl'>{this.props.size}</p>\n                          <p className={'text ' + this.props.state} id='dtl'>{this.props.mime}</p>\n                          <p className={'text ' + this.props.state} id='dtl'>{this.props.date}</p>\n                      </div>\n                  </div>\n                  <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"20px\" onClick={(e)=>rclick(e)} className={'fileoptiontdot ' + this.props.state}><circle cx=\"50\" cy=\"17.5\" r=\"9.92\"></circle><circle cx=\"50.21\" cy=\"49\" r=\"9.92\"></circle><circle cx=\"50\" cy=\"80.51\" r=\"9.92\"></circle></svg>\n                </div>   \n                </>\n              )\n        }\n    }\n}\nexport class SharedFileCont extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n    render() {\n        return (\n            <>\n            <AiOutlineLink />\n            </>\n        )\n    }\n}\nexport class Arrangebar extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {namearrow: \"\", sizearrow: \"\", typearrow: \"\", datearrow: \"\", flipped:false }\n        this.arrowpos = this.arrowpos.bind(this);\n    }\n    arrowpos(s) {\n        var styledom\n        if(this.state.flipped) {\n            styledom = {transform : \"rotate(180deg)\"}\n        }else {\n            styledom = {transform : \"rotate(0deg)\"}\n        }\n        var arrow = <svg className=\"alignarrow\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\" style={styledom}>\n        <path className=\"arrowpath\" d=\"M330.2,227.2L187.7,474.1c-10.6,18.3,2.6,41.3,23.8,41.3h285c21.2,0,34.4-22.9,23.8-41.3L377.8,227.2\n            C367.2,208.9,340.8,208.9,330.2,227.2z\"/>\n        </svg>\n            if(s == \"name\") {\n                this.setState({namearrow : arrow, sizearrow: \"\", typearrow: \"\", datearrow: \"\"})\n            }else if(s == \"size\") {\n                this.setState({namearrow : \"\", sizearrow: arrow, typearrow: \"\", datearrow: \"\"})\n            }else if(s == \"mime\") {\n                this.setState({namearrow : \"\", sizearrow: \"\", typearrow: arrow, datearrow: \"\"})\n            }else if(s == \"date\") {\n                this.setState({namearrow : \"\", sizearrow: \"\", typearrow: \"\", datearrow: arrow})\n            }\n            var direction;\n            if(this.state.flipped) {\n                this.setState({flipped:false})\n                direction = false;\n            }else {\n                this.setState({flipped:true})\n                direction = true;\n\n            }\n        alignby(s, direction)\n    }\n    render() {\n        return(\n            <div className=\"file_align_control_bar\">\n                <div className=\"align_by_name\" onClick={()=>this.arrowpos(\"name\")}>\n                    <b>Name</b>{this.state.namearrow}</div>\n                    <div className=\"align_not_name\">\n                        <div className=\"align_by_size\" onClick={()=>this.arrowpos(\"size\")}>\n                            <b>Size</b>{this.state.sizearrow}</div>\n                            <div className=\"align_by_type\" onClick={()=>this.arrowpos(\"mime\")}>\n                                <b>Mime</b>{this.state.typearrow}</div>\n                                <div className=\"align_by_date\" onClick={()=>this.arrowpos(\"date\")}>\n                                    <b>Date</b>{this.state.datearrow}</div>\n                    </div>\n            </div>\n        )\n    }\n}\nexport class Lbtnclick extends React.Component {\n    render() {\n        const binst = this.props.blank_instances;\n        var id = this.props.id\n        var a=[]\n        binst.forEach(function(e) {\n            if(e == \"View\") {\n                a.push(<div className=\"rclickmenubtn\" data-ctx={id}>{e}</div>)\n            }else if(e == \"Change View\") {\n                a.push(<div className=\"rclickmenubtn\" onClick={arrange}>{e}</div>)\n            }else if(e == \"Share\") {\n                a.push(<div className=\"rclickmenubtn\" onClick={()=> share(id)}>{e}</div>)\n            }else if(e == \"Delete\") {\n                a.push(<div className=\"rclickmenubtn\" onClick={()=> delfile(id)}>{e}</div>)\n            }else if(e == \"Download\") {\n                a.push(<div className=\"rclickmenubtn\">{e}</div>)\n            }\n            else {\n                a.push(<div className=\"rclickmenubtn\">{e}</div>)\n            }\n        })\n        return(\n                <div>\n                    {a}\n                </div>\n        );\n    }\n}\n  export class Overlay extends React.Component {\n    render() {\n        if(this.props.show) {\n            return (\n            <div className=\"overlayarea\" onClick={()=>remove()}></div>\n            )\n        }\n        else {\n            return(\n                <></>\n            )\n        }\n    }\n  }\n  function remove() {\n      document.querySelector(\".rclickmenu\").classList.add(\"hidden\")\n      ReactDOM.render(\n      <Overlay show ={false} />,\n      document.querySelector('#olay')\n      )\n  }\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  export class Sharearea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.copylink = this.copylink.bind(this);\n        this.delete = this.delete.bind(this);\n        this.state = {copystat: \"Copy Link\", revokestat: \"Revoke\"}\n      }\n    copylink() {\n        copy(this.props.link)\n        this.setState({copystat: \"Copied!\"})\n        sleep(1000).then(()=> {this.setState({copystat: \"Copy Link\"})})\n      }\n      delete() {\n        ReactDOM.unmountComponentAtNode(document.querySelector('#sharearea'))\n      }\n      async revoke() {\n          if(this.state.revokestat == \"Revoke\") {\n            this.setState({revokestat: \"Revoking..\"})\n            var form = new FormData()\n            form.append(\"target\", this.props.id)\n            var storedToken = await localforage.getItem(\"tk\")\n            var r = await fetch(\"https://petadrop.com/api/goshare\", {method: 'DELETE', body: form, headers:{'Authorization': storedToken.slice(0, 200)}})\n            if(r.ok) {\n                var jsn = await r.json()\n                if(jsn.Status == \"Success\") {\n                    ReactDOM.unmountComponentAtNode(document.querySelector('#sharearea'))\n                }\n            }\n              \n          }\n          \n      }\n      render() {\n          var b\n          var a\n          if(this.props.loading) {\n                b = <><b>Loading Data</b></>\n                a=<></>\n          }else {\n                a= <b style={{color: \"#ad3636\"}} onClick={()=>this.revoke()}>{this.state.revokestat}</b>\n                b = <div className=\"linkshare_area\"><input type=\"text\" id=\"linkareacopy\"readOnly value={this.props.link}></input><b onClick={this.copylink}>{this.state.copystat}</b></div>\n          }\n          \n          return(\n              <div className=\"sharebackground\">\n                <div className=\"sharearea\">\n                  <div className=\"sharearea_header\"><b>Share This File</b>\n                  <div className=\"exit\" onClick={this.delete}><span></span><span></span></div>\n                  </div>\n                  <div className=\"sharearea_body\">{b}</div>\n                  <div className=\"sharearea_footer\">{a}</div>\n                </div>\n              </div>\n          )\n      }\n  }\n  export class Fileviewarea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {sc: -1};\n        this.delete = this.delete.bind(this);\n      }\n      imgload() {\n        if(document.querySelector(\".viewerimage\").width > window.innerWidth) {\n            this.setState({\n                sc: window.innerWidth\n              })\n        }else {\n            this.setState({\n                sc: document.querySelector(\".viewerimage\").width\n              })\n        }\n      }\n      listner(e) {\n          if(!(this.state.sc < 100) || (e.deltaY/-100) == 1) {\n            this.setState({\n                sc: ((this.state.sc) + 70*(e.deltaY/-100))\n              });\n          }\n      }\n      vidload() {\n        if(document.querySelector(\".viewervid\").videoWidth > window.innerWidth) {\n            this.setState({\n                sc: window.innerWidth\n              })\n        }else if((document.querySelector(\".viewervid\").videoWidth <= window.innerWidth)) {\n            this.setState({\n                sc: document.querySelector(\".viewervid\").videoWidth\n              })\n        }\n      }\n      delete(){\n          document.querySelector(\".dark\").classList.remove(\"show\")\n          document.querySelector(\"body\").classList.remove(\"ovx\")\n          this.setState({\n            sc: -1\n          })\n          ReactDOM.unmountComponentAtNode(document.querySelector('.dark'))\n          document.querySelector(\".fileviewer\").classList.remove(\"show\")\n          ReactDOM.unmountComponentAtNode(document.querySelector('.fileviewer'))\n      };\n      render() {\n          var type\n          var codetype = filename2prism(this.props.name)\n          if(codetype.length != 0) {\n              var xhr = new XMLHttpRequest();\n              xhr.open( \"GET\",this.props.src, false)\n              xhr.send()\n            type = <SyntaxHighlighter style={arta} language={codetype[0].toLowerCase()} showLineNumbers={true} lineNumberContainerStyle={{marginLeft:\"10px\"}}customStyle={{position: \"absolute\",bottom: \"0\", display: \"block\", padding: \"0\",background: \"transparent\",marginBottom:\"0\", color: \"rgb(170, 170, 170)\", height: \"calc(100% - 50px)\", width: \"100vw\"}}>{xhr.responseText}</SyntaxHighlighter>\n            if(xhr.response.length > 102400) {\n                type = <div className=\"noprevdownload\"><div className=\"downloadlabel\">This File Is Too Big For Code Preview</div><a className=\"downloadbtn\" href={this.props.src} download={this.props.name}>Download</a></div>\n            }\n          }else {\n            if(this.props.ft == \"img\") {\n                type = <img className=\"viewerimage\"src={this.props.src} width={this.state.sc} onWheel={(e)=>{this.listner(e)}} onLoad={()=>{this.imgload()}}></img>\n            }else if(this.props.ft == \"vid\") {\n              type = <video width={this.state.sc} className = \"viewervid\" onLoadedMetadata={()=>{this.vidload()}} controls><source src={this.props.src} type={this.props.mime}/></video>\n            }else if (this.props.ft == \"audio\"){\n              type = <audio controls><source src={this.props.src} type={this.props.mime} /></audio>\n            }else{\n              type = <div className=\"noprevdownload\"><div className=\"downloadlabel\">No Preview Is Avalible For This Type Of File</div><a className=\"downloadbtn\" href={this.props.src} download={this.props.name}>Download</a></div>\n              //<iframe src={this.props.src} title={this.props.name} frameborder=\"0\" border=\"0\" cellspacing=\"0\"></iframe>\n            }\n          }\n          \n            return(\n                <div className=\"fileviewarea\">\n                    <div className=\"fileviewheader\">\n                        <div className=\"fileviewfilenamelabel\">{this.props.name}</div>\n                        <div className=\"exit\" onClick={this.delete}>\n                            <span></span><span></span>\n                        </div>\n                        </div>\n                        <div className=\"filearea\">\n                            {type}\n                        </div>\n                </div>\n                )\n      }\n}\n  export class Defaultxhrloading extends React.Component {\n      render() {\n          return (\n              <div className=\"xhrloading\">\n                  <div class=\"xhrexit exit\" onClick={()=>stopdownload(1, 1)}><span></span><span></span></div>\n                  <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\" width=\"80\">\n            <path id=\"loadwrapperloading\" d=\"M584.1,307.5c0-1.4,0.1-2.8,0.1-4.2c0-68.5-55.5-124.1-124.1-124.1c-32.4,0-61.9,12.5-84,32.8 c-22.7-26.1-56.2-42.7-93.6-42.7c-68.5,0-124.1,55.5-124.1,124.1c0,4.8,0.3,9.5,0.8,14.1c-2.5-0.2-5-0.3-7.6-0.3 c-62.9,0-113.9,49.3-113.9,110.2c0,60.9,51,110.2,113.9,110.2h425.7c58.5,0,105.9-49.3,105.9-110.2 C683.3,359,639.4,311.2,584.1,307.5z\">\n        </path><g></g><g></g><g></g><g></g></svg>\n        <b id=\"fileloadingtxt\">Loading File</b>\n              </div>\n          )\n      }\n  }\n  export class Searchico extends React.Component {\n      render() {\n            return(\n              <div id=\"sc\">\n            <div id=\"searchcont\">\n                <svg id=\"search\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\">\n                    <circle className=\"grey-svg-path\" cx=\"315.6\" cy=\"287.4\" r=\"141.8\"/>\n                    <line className=\"grey-svg-path\" x1=\"385.9\" y1=\"410.6\" x2=\"494.8\" y2=\"562.1\"/>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                </svg>\n            </div>\n        <input type=\"text\" id=\"pc-search-text\"/>\n              </div>\n          )\n      }\n  }\n  export class Alignicon extends React.Component {\n      componentDidMount() {\n        var c = localStorage.getItem(\"arrange\")\n        if(c == 1) {\n            this.setState({grid: 'none', row: ''})\n        }else if(c == 0) {\n            this.setState({grid: '', row: 'none'})\n        } \n      }\n      constructor(props) {\n          super(props)\n          this.state = {style : \"rotate(0deg)\"}\n          this.state = {alignBy : \"Name\", grid: 'none', row: ''}\n          this.arrangeElem = this.arrangeElem.bind(this);\n      }\n      changetyp() {\n          var lst = [\"Name\", \"Size\", \"Mime\", \"Date\"]\n          var n = lst.indexOf(this.state.alignBy)+ 1\n          if(!(n > 3)) {\n            this.setState({alignBy: lst[n]})\n          }else {\n            this.setState({alignBy: lst[0]})\n          }\n          alignby(this.state.alignBy.toLowerCase(), this.statetoBool())\n      }\n      statetoBool() {\n        if(this.state.style == \"rotate(180deg)\") {\n            return true\n          }else {\n            return false\n          }\n      }\n      arrangeElem() {\n        var c = localStorage.getItem(\"arrange\")\n        if(c == 0) {\n            this.setState({grid: 'none', row: ''})\n        }else if(c == 1) {\n            this.setState({grid: '', row: 'none'})\n        } \n        arrange()\n      }\n      changeasc() {\n        if(this.state.style == \"rotate(180deg)\") {\n            this.setState({style: \"rotate(0deg)\"})\n          }else {\n            this.setState({style: \"rotate(180deg)\"})\n          }\n          alignby(this.state.alignBy.toLowerCase(), this.statetoBool())\n      }\n      render() {\n        var arrangeControl\n        var real = <div className=\"alignMenu\"><b onClick={()=>this.changetyp()}>{this.state.alignBy}</b><svg className=\"alignarrow\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\" style={{transform: this.state.style}} onClick={()=>this.changeasc()}>\n        <path className=\"arrowpath\" d=\"M330.2,227.2L187.7,474.1c-10.6,18.3,2.6,41.3,23.8,41.3h285c21.2,0,34.4-22.9,23.8-41.3L377.8,227.2\n            C367.2,208.9,340.8,208.9,330.2,227.2z\"/>\n        </svg></div>\n        if(window.innerWidth > 760) {\n          if(localStorage.getItem(\"arrange\") == 0) {\n              arrangeControl = real\n          }\n        }else {\n            arrangeControl = real\n        }\n          return(\n            <>\n            {arrangeControl}\n            <div className=\"alignico\" onClick={this.arrangeElem}>\n            <div id=\"grid\" style={{display: this.state.grid}}>\n                <svg version=\"1.1\" id=\"global-align-icon\" x=\"0px\"\n                    y=\"0px\" viewBox=\"0 0 720 720\">\n                <path id=\"default-white-svg-path\" d=\"M499.8,279h-97.4c-17.6,0-32-14.4-32-32v-97.4\n                    c0-17.6,14.4-32,32-32h97.4c17.6,0,32,14.4,32,32V247C531.8,264.6,517.4,279,499.8,279z\"/>\n                <path id=\"default-white-svg-path\" d=\"M269.8,279h-97.4c-17.6,0-32-14.4-32-32v-97.4\n                    c0-17.6,14.4-32,32-32h97.4c17.6,0,32,14.4,32,32V247C301.8,264.6,287.4,279,269.8,279z\"/>\n                <path id=\"default-white-svg-path\" d=\"M269.8,510.9h-97.4c-17.6,0-32-14.4-32-32v-97.4\n                    c0-17.6,14.4-32,32-32h97.4c17.6,0,32,14.4,32,32v97.4C301.8,496.5,287.4,510.9,269.8,510.9z\"/>\n                <path id=\"default-white-svg-path\" d=\"M499.8,510.9h-97.4c-17.6,0-32-14.4-32-32v-97.4\n                    c0-17.6,14.4-32,32-32h97.4c17.6,0,32,14.4,32,32v97.4C531.8,496.5,517.4,510.9,499.8,510.9z\"/>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n                <g>\n                </g>\n            </svg>\n            </div>\n            <div id=\"row\" style={{display: this.state.row}}>\n                    <svg version=\"1.1\" id=\"global-align-icon\" x=\"0px\"\n                        y=\"0px\" viewBox=\"0 0 720 720\">\n                        <path id=\"default-white-svg-path\" d=\"M499.8,279H172.4c-17.6,0-32-14.4-32-32v-97.4\n                        c0-17.6,14.4-32,32-32h327.4c17.6,0,32,14.4,32,32V247C531.8,264.6,517.4,279,499.8,279z\"/>\n                        <path id=\"default-white-svg-path\" d=\"M499.8,510.9H172.4c-17.6,0-32-14.4-32-32v-97.4\n                            c0-17.6,14.4-32,32-32h327.4c17.6,0,32,14.4,32,32v97.4C531.8,496.5,517.4,510.9,499.8,510.9z\"/>\n                        <g>\n                        </g>\n                        <g>\n                        </g>\n                        <g>\n                        </g>\n                        <g>\n                        </g>\n                    </svg>\n                </div>\n            </div>\n            </>\n          );\n      }\n  }\n  export class Dir extends React.Component {\n      render() {\n          return(\n              <>\n              <p className=\"dirbold\"><b onClick={()=>gotofolder(\"/ 0\")}>My Files</b><div>{this.props.a}</div></p>\n              </>\n\n          )\n      }\n  }\n  export class Mobilemenubtn extends React.Component {\n      render() {\n          return(\n            <div id=\"mobile-menu-btn\" onClick={openleftbar}>\n                <svg version=\"1.1\" id=\"mobile-header-logo\" x=\"0px\"\n                    y=\"0px\" viewBox=\"0 0 720 720\">\n                    <path id=\"logo-svg-path\" d=\"M584.1,307.5c0-1.4,0.1-2.8,0.1-4.2c0-68.5-55.5-124.1-124.1-124.1c-32.4,0-61.9,12.5-84,32.8\n                        c-22.7-26.1-56.2-42.7-93.6-42.7c-68.5,0-124.1,55.5-124.1,124.1c0,4.8,0.3,9.5,0.8,14.1c-2.5-0.2-5-0.3-7.6-0.3\n                        c-62.9,0-113.9,49.3-113.9,110.2c0,60.9,51,110.2,113.9,110.2h425.7c58.5,0,105.9-49.3,105.9-110.2\n                        C683.3,359,639.4,311.2,584.1,307.5z\"/>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                </svg>\n            </div>\n          );\n      }\n  }\n  export class Group extends React.Component {\n      render() {\n          return(\n              <>\n                <div id=\"groupncont\"></div>              \n              </>\n              //                <input type=\"file\" className=\"fileselector\" onChange={()=>fileadded(0)}></input>\n\n                \n          );\n      }\n  }\n  export class Button extends React.Component {\n    render() {\n        return(\n            <div className=\"header_new_button\" onClick={()=>showfilelabel()}>\n                            <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" \n                x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\" >\n            <path id=\"default-black-svg-path\" className=\"st0\" d=\"M454,314.9H284.8c-10.1-24.9-34.6-42.6-63-42.6h-47.7c-37.3,0-67.9,30.6-67.9,67.9\n                v24.7v23v159.4c0,27.5,22.5,50,50,50H454c27.5,0,50-22.5,50-50V364.9C504,337.4,481.5,314.9,454,314.9z\"/>\n            <g>\n                <path id=\"default-g\" d=\"M555.9,202.1v-53.9c0-4.7,1.7-8.8,5.2-12.1c3.5-3.3,7.7-5,12.7-5c4.7,0,8.8,1.7,12.1,5s5,7.4,5,12.1v53.9h53.9\n                    c4.9,0,9.1,1.7,12.6,5.1c3.6,3.4,5.3,7.6,5.3,12.4c0,4.9-1.8,9-5.3,12.4c-3.6,3.4-7.8,5.1-12.6,5.1h-53.5v53.9\n                    c0,5-1.8,9.3-5.3,12.7c-3.6,3.5-7.8,5.2-12.6,5.2c-4.9,0-9-1.7-12.4-5.2c-3.4-3.5-5.1-7.7-5.1-12.7v-53.9H502\n                    c-4.7,0-8.8-1.7-12.3-5.1c-3.5-3.4-5.2-7.6-5.2-12.4c0-4.7,1.7-8.8,5.2-12.3c3.5-3.5,7.6-5.2,12.3-5.2H555.9z\"/>\n            </g>\n            </svg><b>New</b>\n            </div>\n        );\n    }\n}\nexport class Pfp extends React.Component {\n    render() {\n        return(\n            <div className=\"pfp\" onClick={pfpmenu}>\n                <img className=\"pfpimg\" src=\"./loading.gif\" />\n            </div>\n        );\n    }\n}\nexport class Lpfpmenu extends React.Component {\n    render() {\n        return(\n            <div className=\"lpfpmenu\">\n                <div className=\"menupfp\">\n                    <label htmlFor=\"pfpuploader\"><img className=\"pfpimg menu\" src=\"./loading.gif\"/></label>\n                </div>\n                <input type=\"file\" id=\"pfpuploader\" onChange={()=>pfpinput()}/>\n                <b>{this.props.userid}</b>\n                <div>\n                    <small id=\"settingbtn\" onClick={()=>openSetting()}>Setting </small>|<small id=\"logoutbtn\" onClick={logout}> Logout</small>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport class Uploadnotify extends React.Component {\n    render() {\n        var cont\n        if(this.props.size == \"\" || this.props.size== null) {\n            cont = this.props.name\n        }else {\n            cont=this.props.name + \" | \"+ this.props.size\n        }\n        var progress\n        if(this.props.act != \"pfp\") {\n            progress = <progress id={this.props.progid} value=\"0\" max=\"100\" className=\"progrezz\"><div></div></progress>\n        }\n        return (\n            <div className=\"uploadnotify show\">\n            <div className=\"percetage\">\n                <div id=\"plabelarea\">\n                    <p className=\"uploaderlabel\">{cont}</p>\n                    {progress}\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\nexport class Lmenuact extends React.Component {\n    render() {\n        var aa = this.props.html\n        return(\n            {aa}\n        );\n    }\n}\nexport class Overlayarr extends React.Component {\n    render() {\n        return (\n            <div className=\"overlayarea hide\" onClick={()=>hideoverlaycont()}></div>\n        )\n    }\n}\nexport class Mobilenew extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {act: \"\", act2: \"\"}\n    }\n    clickedbtn() {\n        if(this.state.act == \"\") {\n            this.setState({act: \" focused\", act2: \" focused\"})\n        }else {\n            this.setState({act: \"\", act2: \"\"})\n        }\n\n    }\n    render() {\n        if(this.props.propp == \"bsc\") {\n            var cont = <><div className={\"mobile-uploadbtn\"+this.state.act} onClick={()=>this.clickedbtn()}>＋</div><div className={\"mobile-upload-options\"+ this.state.act2}>\n            <label htmlFor=\"fileinput\" className=\"mobile-upload-options-label\">\n            <svg id=\"mobile-option-btn\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\" >\n            <path id=\"default-black-svg-path\" d=\"M286.8,244.8h-85.9c-9.9,0-19.4,3.7-26.2,10.3c-7,6.6-10.9,15.7-10.9,25.2v284.1c0,9.5,3.9,18.4,10.9,25.2\n\tc7,6.6,16.5,10.3,26.2,10.3h198.2c9.9,0,19.4-3.7,26.2-10.3c7-6.6,10.9-15.7,10.9-25.2V362.1c0-9.5-3.9-18.4-10.9-25.2l-112.1-81.8\n\tC306.2,248.5,296.7,244.8,286.8,244.8L286.8,244.8z\"/>\n            </svg>\n            </label>\n            <div className=\"mobile-upload-options-label\" onClick={()=>createfolder()}>\n            <svg id=\"mobile-option-btn\"  className=\"st0\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\" >\n            <path id=\"default-black-svg-path\" d=\"M454,314.9H284.8c-10.1-24.9-34.6-42.6-63-42.6h-47.7c-37.3,0-67.9,30.6-67.9,67.9\n            v24.7v23v159.4c0,27.5,22.5,50,50,50H454c27.5,0,50-22.5,50-50V364.9C504,337.4,481.5,314.9,454,314.9z\"/></svg>\n            </div>\n            </div>\n            </>\n        }else if(this.props.propp == \"upchk\") {\n            var cont = <div className=\"mobile-uploadbtn uploading\"><p className=\"uploaderlabel\">{this.props.name + \" | \"+ this.props.size}</p>\n            <progress id={this.props.id} value=\"0\" max=\"100\" className=\"progrezz\"><div></div></progress></div>\n        }else if(this.props.propp == \"preup\") {\n            var cont = <div className=\"mobile-uploadbtn uploading\"><p className=\"uploaderlabel\">Preparing..</p></div>\n        }else if(this.props.propp == \"changepfp\") {\n            var cont = <div className=\"mobile-uploadbtn uploading\"><p className=\"uploaderlabel\">Changing Profile Picture..</p></div>\n        }\n        return(\n            <>\n            {cont}\n            </>\n        )\n    }\n}","/Users/oheunchong/Documents/GitHub/pebble-client/src/uploadhandler.js",["124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140"],"import {mobilenew} from './index.js'\nimport { readAndCompressImage } from 'browser-image-resizer';\nimport { encode,decode } from 'base64-arraybuffer';\nimport {updatedata, curdir, singlefile} from './main.js';\nimport {Uploadnotify} from './comp'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport localforage from 'localforage';\nconst vars = require('./vars.json')\n\nfunction size(s) {\n    var fs\n    if(1024 >= s) {\n        fs = Math.round(s) + \"B\"\n\n    }else if(s > 1024 && s < 1024*1024) {\n        fs = Math.round(s/1024) + \"KB\"\n\n    }else if(s >= 1024*1024 && s < 1024*1024*1024) {\n        fs = Math.round(s/(1024*1024)) + \"MB\"\n\n    }else if(s >= 1024*1024*1024 && s < 1024*1024*1024*1024) {\n        fs = Math.round(s/(1024*1024*1024)) + \"GB\"    \n    }\n    return fs\n}\n\nfunction filedetail(file, id) {\n    if(file == undefined || file == null || file == '') {\n    }else {\n        if(file === null) {\n        }\n        var fs= size(file.size)\n        ReactDOM.render(\n            <Uploadnotify name={file.name} size={fs} progid={id} act={\"\"}/>,\n            document.querySelector(\"#ules\")\n        )\n    }\n}\n\nasync function encthumbnail(fdata, id) {\n    var iv = crypto.getRandomValues(new Uint8Array(16));\n    var salt = crypto.getRandomValues(new Uint8Array(16));\n    var fd = fdata\n    var storedToken = await localforage.getItem(\"tk\")\n    var pww = storedToken.slice(200);\n    let enc = new TextEncoder();\n    var impk = await crypto.subtle.importKey(\"raw\",enc.encode(pww), {name: \"PBKDF2\"},false,[\"deriveBits\", \"deriveKey\"])\n    var key = await crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt,\"iterations\": 100000,\"hash\": \"SHA-256\"   }, impk,{ \"name\": \"AES-CBC\", \"length\": 256},false,[ \"encrypt\", \"decrypt\" ])\n    var encrypted = await crypto.subtle.encrypt({'name': 'AES-CBC',iv }, key, fd)\n\n    encrypted = new Uint8Array(encrypted)\n    var fab = new Uint8Array(new Uint8Array(encrypted).length + 32)\n    fab.set(iv, 0)\n    fab.set(salt, 16)\n    fab.set(encrypted, 32)\n    var finblob = new Blob([fab])\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://petadrop.com/api/thumbhandle/\", true)\n    var tk = storedToken.slice(0,200);\n    xhr.setRequestHeader(\"Authorization\", tk)           \n    xhr.setRequestHeader(\"x-xwc-act\", \"up\")            \n    var form = new FormData();\n    form.append(\"thumb\", finblob)\n    form.append(\"tn\", id)\n    if (xhr.readyState === xhr.DONE) {\n        if (xhr.status === 200) {\n            console.log(\"ok\")\n        }\n    }\n    xhr.send(form)\n}\n\nexport function uploadworker() {\n    var fl = document.querySelector('#fileinput').files\n    var state;\n    if(fl.length >1) {\n        state=1\n    }else {\n        state=0\n    }\n    onetime(0)\n}\nvar pfplink\n\nfunction updateProg(offset) {\n    if(document.querySelectorAll(\".progrezz\")[0].value < offset || offset == 0) {\n        document.querySelectorAll(\".progrezz\")[0].value = offset\n        document.querySelectorAll(\".progrezz\")[1].value = offset\n    }\n}\nasync function onetime(i) {\n\n    var file = document.querySelector('#fileinput').files[i];\n\n    if(file == undefined || file == null || file == '') {\n\n    }else {\n    mobilenew(\"preup\")   \n    if(window.innerWidth > 760) {\n        ReactDOM.render(\n            <Uploadnotify name={\"Preparing..\"} size={\"\"} progid={\"\"} act={\"\"}/>,\n            document.querySelector(\"#ules\")\n        )\n    }\n        var storedToken = await localforage.getItem(\"tk\")\n        var salt = crypto.getRandomValues(new Uint8Array(16))\n        var iv = crypto.getRandomValues(new Uint8Array(16))\n        var pww = storedToken.slice(200);\n        let enc = new TextEncoder();\n        var fkey = await crypto.subtle.generateKey({name: \"AES-CBC\",length: 256},true,[\"encrypt\", \"decrypt\"])\n        var keybuff = await crypto.subtle.exportKey(\"raw\", fkey)\n        var impk = await crypto.subtle.importKey(\"raw\",enc.encode(pww),\"PBKDF2\",false,[\"deriveKey\", \"deriveBits\"])\n        var derivedkey = await crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt, \"iterations\": 100000, \"hash\": \"SHA-256\" }, impk, {\"name\": \"AES-CBC\", \"length\": 256 }, false, [ \"encrypt\", \"decrypt\" ])\n        var encryptedfn = await crypto.subtle.encrypt({ name: 'AES-CBC',iv: iv }, derivedkey, enc.encode(file.name))\n\n            var keyiv = crypto.getRandomValues(new Uint8Array(16))\n            crypto.subtle.encrypt(\n                {name: 'AES-CBC',\n                iv: keyiv \n            }, derivedkey, keybuff).then(function(enc) {\n\n                var xhr = new XMLHttpRequest;\n                xhr.open('POST', \"https://petadrop.com/api/preupload\", true)\n                var form = new FormData();\n                xhr.setRequestHeader(\"Authorization\", storedToken.slice(0,200))\n                var enc = new Uint8Array(enc)\n                var findata = new Uint8Array(new Uint8Array(enc).length+32)\n                findata.set(salt, 0);\n                findata.set(keyiv, 16);\n                findata.set(enc, 32);\n\n                var enf = new Uint8Array(encryptedfn)\n                var fnfd = new Uint8Array(new Uint8Array(enf).length+32)\n                fnfd.set(salt, 0);\n                fnfd.set(iv, 16);\n                fnfd.set(enf, 32);\n\n\n                var string = encode(findata);\n                form.append(\"key\", string)\n                form.append(\"fname\", encode(fnfd))\n                form.append(\"type\", file.type)\n                form.append(\"size\", file.size)\n                form.append(\"curdir\", curdir)\n\n                xhr.send(form);\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === xhr.DONE) {\n                        if (xhr.status === 200) {\n                            callback(xhr.response);\n                            //filetype & thumbnail\n                            var fileId = JSON.parse(xhr.response).Id\n                            var filetype = file.name.split('.');\n                            if(vars.imagefile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1) {\n                                var config = {\n                                    quality: 1,\n                                    maxWidth: 100,\n                                    maxHeight: 100,\n                                    autoRotate: false,\n                                    debug: false\n                                }\n                                readAndCompressImage(file, config).then(function(resizedpfp) {\n                                    const reader = new FileReader()\n                                    reader.onloadend = function(e) {\n                                        encthumbnail(e.target.result, fileId)\n                                        pfplink = URL.createObjectURL(new Blob([e.target.result]))\n                                    }\n                                    reader.readAsArrayBuffer(resizedpfp)\n                                })\n                            }\n                            else if(vars.codefile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1) {\n                                var read = new FileReader()\n                                read.onload = function(e) {\n                                    var finstringArr =  e.target.result.split(\"\\n\");\n                                    var canvas = document.createElement(\"canvas\");\n                                    canvas.width = \"100\"\n                                    canvas.height = \"100\"\n                                    var ctx = canvas.getContext(\"2d\");\n                                    ctx.fillStyle = \"white\";\n                                    ctx.fillRect(0, 0, canvas.width, canvas.height);\n                                    ctx.font = \"7px Arial\"\n                                    ctx.fillStyle = \"black\"\n                                    for(var i=0;i<20;i++) {\n                                        if(!(i == undefined || finstringArr[i] == undefined)) {\n                                            ctx.fillText(finstringArr[i].slice(0, 30), 5, 6*(i+1))\n                                        }\n                                        \n                                    }\n                                    canvas.toBlob(function(blob) {\n                                        var reader = new FileReader()\n                                        reader.onloadend = function(e) {\n                                            encthumbnail(e.target.result, fileId)\n                                            pfplink = URL.createObjectURL(new Blob([e.target.result]))\n                                        }\n                                        reader.readAsArrayBuffer(blob)\n                                    })\n                                }\n                                read.readAsText(file)\n                                \n                            }else {\n                                pfplink = \"\"\n                            }\n                        }\n                    }\n                };\n                function callback(resp) {\n                    var res = JSON.parse(resp);\n                    var val = res.Id.toString();\n                    var enc = new TextEncoder()\n                    \n                    val = enc.encode(val)\n                    fileadded(0, 1, val, fkey)\n                \n                    mobilenew(\"upchk\", size(file.size), res.Id.toString(), file.name).then(function() {\n                        filedetail(file, res.Id.toString())\n                    })\n                }\n            })\n    }\n    function calchunk(filelength) {\n        var chunkcount\n        chunkcount = parseInt(filelength / ((1024 * 1024)*5));\n        if((filelength%((1024 * 1024)*5))>0) {\n            chunkcount = chunkcount + 1;\n        }\n        return chunkcount;\n    }\n    var currentupload = 0;\n    var now = 0;\n    function fileadded(start, nth, identify, key) {\n        var slice_size = (1024 * 1024)*5;\n        var fread = new FileReader();\n        var next_slice = start + slice_size + 1;\n        var blob = file.slice( start, next_slice );\n        \n        fread.onloadend = async function(e) {\n                if ( e.target.readyState !== FileReader.DONE ) {\n                    return;\n                }\n                var buffer = new Uint8Array(e.target.result);\n                        var iv = crypto.getRandomValues(new Uint8Array(16));\n                        crypto.subtle.encrypt({ \n                            'name': 'AES-CBC',\n                                iv \n                            }, key, buffer) \n\n                        .then(encrypted => {\n                                var encrypted2 = new Uint8Array(encrypted)\n                                var findata = new Uint8Array(encrypted2.length+32)\n                                findata.set(iv, 0);\n                                findata.set(identify, 16);\n                                findata.set(encrypted2, 32);\n                                var fffd = new Blob([findata])\n                                    window.crypto.subtle.digest('SHA-512', findata).then(function(digest) {\n                                        digest = Array.from(new Uint8Array(digest)).map(b => b.toString(16).padStart(2, '0')).join('');\n                                        \n                                        findata = null\n                                        encrypted2 = null\n                                        buffer = null\n\n                                        var xhr = new XMLHttpRequest;\n                                        xhr.open(\"POST\", \"https://storage.petadrop.com/upload?idnf=\"+digest+\"&chnum=\"+nth+\"&ttlch=\"+calchunk(file.size), true);\n\n                                        var form = new FormData();\n\n                                        form.append(\"file\", fffd)\n                                        var RanFunc = false\n                                        xhr.upload.onprogress = function(e) {\n                                            currentupload = e.loaded\n                                            updateProg(((now + e.loaded)/file.size)*100)\n                                            if(RanFunc == false && (e.loaded/5242928)*100 > 65 && nth+1 <= calchunk(file.size)) {\n                                                fileadded( next_slice, nth+1 ,identify, key)\n                                                RanFunc = true\n                                            }\n                                        }\n                                        xhr.upload.onloadend =function() {\n                                            now = currentupload + now\n                                        }\n                                        xhr.onreadystatechange = function() {\n                                            if (xhr.readyState === xhr.DONE) {\n                                                    if(xhr.status == 200) {\n                                                        if(JSON.parse(xhr.response).Statusmsg !== \"Success\") {\n                                                            ReactDOM.render(\n                                                                <Uploadnotify name={\"Failed\"}/>,\n                                                                document.querySelector(\"#ules\")\n                                                            )\n                                                        }else {\n                                                            \n                                                            if ( next_slice < file.size ) {\n                                                            } else {\n                                                                singlefile(identify, pfplink)\n                                                                updateProg(0)\n                                                                if(i == document.querySelector('#fileinput').files.length -1) {\n                                                                    ReactDOM.unmountComponentAtNode(document.querySelector(\"#ules\"))\n                                                                    if(window.innerWidth > 760) {\n                                                                    }else {\n                                                                        mobilenew(\"bsc\")\n                                                                    }\n                                                                }else {\n                                                                    onetime(i+1)\n                                                                }\n                                                            }   \n                                                        }\n                                                    }else {\n                                                        ReactDOM.render(\n                                                            <Uploadnotify name={\"Failed \"+\"(\"+xhr.status+\")\"}/>,\n                                                            document.querySelector(\"#ules\")\n                                                        )\n                                                    }\n                                            }\n                                        };\n                                        xhr.send(form);  \n                                    })\n\n                        })                              \n    \n    }\n        fread.readAsArrayBuffer(blob)\n    }\n}","/Users/oheunchong/Documents/GitHub/pebble-client/src/pfphandler.js",["141","142","143"],"import { readAndCompressImage } from 'browser-image-resizer';\nimport { encode,decode } from 'base64-arraybuffer';\nimport {mobilenew} from './index.js'\nimport localforage from 'localforage';\nimport {Uploadnotify} from './comp'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n  export function pfpinput() {\n    const imgs = ['jpg', 'jpeg', 'png'];\n      var file = document.querySelector('#pfpuploader').files[0]\n      var filen = file.name.split('.')\n      if(imgs.indexOf(filen[filen.length - 1].toLowerCase()) !== -1) {\n\n        const config = {\n          quality: 0.5,\n          maxWidth: 500,\n          maxHeight: 500,\n          autoRotate: false,\n          debug: false\n        }\n        readAndCompressImage(file, config).then(function(resizedpfp) {\n          localforage.getItem(\"tk\").then(function(storedToken) {\n            var xhr = new XMLHttpRequest;\n            xhr.open('POST', 'https://petadrop.com/api/pfph');\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === xhr.DONE) {\n                    if (xhr.status === 200) {\n                        var form = new FormData();\n                        fetch('https://petadrop.com/api/udfetch', {method: 'POST', body: form, headers:{'X-XWC-act': 'pfpf', 'Authorization': storedToken.slice(0, 200)}}).then(function(resp) {\n                          if(resp.ok) {\n                            return resp.json()\n                          }\n                        }).then(function(json) {\n                          console.log(json)\n                          var pfpb64 = json.Pfp;\n                          var sarray = pfpb64.split(\"|\");\n                          processpfp(sarray[0], sarray[1], sarray[2]);\n                          mobilenew(\"bsc\").then(function() {\n                            if(window.innerWidth > 760) {\n                              document.querySelector('.uploadnotify').classList.remove('show');\n                              ReactDOM.render(\n                                <></>,\n                                document.querySelector(\"#ules\")\n                            )\n                            }else {\n                                document.querySelector('.mobile-uploadbtn').classList.remove('uploading');\n                            }\n                          })\n                        })\n                    }\n                }\n            };\n            const reader = new FileReader()\n            reader.onloadend = function() {\n              var buffer = reader.result;\n              var iv = crypto.getRandomValues(new Uint8Array(16));\n              var salt = crypto.getRandomValues(new Uint8Array(16))\n    \n                  var pww = storedToken.slice(200);\n                  let enc = new TextEncoder();\n                  crypto.subtle.importKey(\n    \n                      \"raw\",\n                      enc.encode(pww), \n                      {name: \"PBKDF2\"},\n                      false,\n                      [\"deriveBits\", \"deriveKey\"]\n    \n                  ).then(function(impk) {\n                    crypto.subtle.deriveKey({\n    \n                      \"name\": \"PBKDF2\",\n                      salt: salt,\n                      \"iterations\": 100000,\n                      \"hash\": \"SHA-256\"   \n                      }, \n    \n                      impk,\n                      { \"name\": \"AES-CBC\", \"length\": 256},\n                      false,\n                      [ \"encrypt\", \"decrypt\" ]\n    \n                        ).then(function(key) {\n                        crypto.subtle.encrypt({ \n                          'name': 'AES-CBC',\n                            iv \n                          }, key, buffer).then(function(encrypted) {\n                            mobilenew(\"upchk\").then(function() {\n                              if(window.innerWidth > 760) {\n                            ReactDOM.render(\n                                <Uploadnotify name={\"Updating Profile Picture..\"} size={\"\"} progid={\"\"} act={\"pfp\"} />,\n                                document.querySelector(\"#ules\")\n                            )\n                            document.querySelector('.uploadnotify').classList.add('show');\n                            }else {\n                                document.querySelector('.mobile-uploadbtn').classList.add('uploading');\n                        \n                            }\n                          })\n                            var tk = storedToken.slice(0,200);\n                            console.log(encode(encrypted))\n                            var form = new FormData();\n                            form.append('pfp', encode(encrypted)+\"|\"+encode(iv)+\"|\"+encode(salt));\n                            xhr.setRequestHeader(\"Authorization\", tk)\n                            xhr.send(form);\n                          })\n                        })\n                  })\n              }\n              reader.readAsArrayBuffer(resizedpfp);\n          })\n        })\n      }else {\n        console.log(\"unallowed file type\")\n      }\n  }\n  export function processpfp(value, iv, salt) {\n    var iv=decode(iv);\n    var salt=decode(salt);\n\n    var f = decode(value)\n    localforage.getItem(\"tk\").then(function(storedToken) {\n      var pww = storedToken.slice(200);\n      let enc = new TextEncoder();\n      crypto.subtle.importKey(\n        \n        \"raw\",\n        enc.encode(pww), \n        {name: \"PBKDF2\"},\n        false,\n        [\"deriveBits\", \"deriveKey\"]\n  \n    ).then(function(impk) {\n      crypto.subtle.deriveKey({\n  \n        \"name\": \"PBKDF2\",\n        salt: salt,\n        \"iterations\": 100000,\n        \"hash\": \"SHA-256\"   \n        }, \n  \n        impk,\n        { \"name\": \"AES-CBC\", \"length\": 256},\n        false,\n        [ \"encrypt\", \"decrypt\" ]\n  \n         ).then(function(key) {\n          crypto.subtle.decrypt({ \n            name: 'AES-CBC',\n             iv: iv \n            }, key, f).then(function(decrypted) {\n              \n              encode(decrypted);\n              var l = document.querySelectorAll('.pfpimg');\n              for(var i=0;i<l.length;i++) {\n                l[i].src = URL.createObjectURL(new Blob([decrypted], {type: \"image/jpeg\"}))\n              }\n            })\n         })\n      })\n    })\n}\n","/Users/oheunchong/Documents/GitHub/pebble-client/src/createlink.js",["144","145"],"\nimport { encode,decode } from 'base64-arraybuffer';\nimport {encode as urlencode, trim} from 'url-safe-base64';\nimport {Sharearea} from './comp'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport localforage from 'localforage';\n\n\n    export default function share(fileid) {\n        localforage.getItem(\"tk\").then(function(storedToken) {\n            ReactDOM.render(\n                <Sharearea link={\"aa\"} loading={true}/>, \n                document.querySelector('#sharearea')\n            )\n            var form = new FormData();\n            form.append(\"id\", fileid)\n            fetch('https://petadrop.com/api/udfetch', {method: 'POST', body: form, headers: {'X-XWC-act' : 'fel'}}).then(function(resp) {\n                if(resp.ok) {\n                    return resp.json()\n                }\n            }).then(function(json) {\n                if(json.Status == \"Success\") {\n                    var enclinkab = decode(json.Link)\n                    var salt = enclinkab.slice(0, 16)\n                    var enclinkiv = enclinkab.slice(16, 32)\n                    var realencdata = enclinkab.slice(32)\n                    var enc = new TextEncoder();\n                    crypto.subtle.importKey(\"raw\",enc.encode(storedToken.slice(200)),\"PBKDF2\",false,[\"deriveKey\", \"deriveBits\"]).then(function(impkey) {\n                        crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt,\"iterations\": 100000,\"hash\": \"SHA-256\"}, impkey,{ name: \"AES-CBC\", length: 256},false,[ \"encrypt\", \"decrypt\" ]).then(function(derivedkey) {\n                            crypto.subtle.decrypt({name: 'AES-CBC', iv: enclinkiv}, derivedkey, realencdata).then(function(declink) {\n                                var dec = new TextDecoder();\n                                ReactDOM.render(\n                                    <Sharearea link={dec.decode(declink)} loading={false} id={fileid}/>, \n                                    document.querySelector('#sharearea')\n                                )\n                            })\n                        })\n                    })\n                }else {\n                    var form = new FormData();\n                    form.append(\"dir\", fileid)\n                    fetch('https://petadrop.com/api/udfetch', {method: 'POST', body: form, headers: {'X-XWC-act' : 'vfi', 'Authorization' : storedToken.slice(0, 200)}}).then(function(resp) {\n                        if(resp.ok) {\n                            return resp.json()\n                        }\n                    }).then(function(json) {\n                        var encryptedfilekey = decode(json.Filekey)\n                        var encryptedname = decode(json.Name)\n                \n                        var salt = encryptedname.slice(0,16);\n                        var nameiv = encryptedname.slice(16,32);\n                        var realname = encryptedname.slice(32);\n                        var keyiv = encryptedfilekey.slice(16,32);\n                        var realkey = encryptedfilekey.slice(32);\n                \n                        var enc = new TextEncoder();\n                        crypto.subtle.importKey(\"raw\",enc.encode(storedToken.slice(200)),\"PBKDF2\",false,[\"deriveKey\", \"deriveBits\"]).then(function(impkey) {\n                            crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt,\"iterations\": 100000,\"hash\": \"SHA-256\"}, impkey,{ name: \"AES-CBC\", length: 256},false,[ \"encrypt\", \"decrypt\" ]).then(function(derivedkey) {\n                                crypto.subtle.decrypt({name: 'AES-CBC', iv: keyiv}, derivedkey, realkey).then(function(decryptedfilekey) {\n                                    crypto.subtle.decrypt({name: 'AES-CBC', iv: nameiv}, derivedkey, realname).then(function(decryptedfilename) {\n                                        crypto.subtle.generateKey({name: \"AES-CBC\", length: 128}, true, [\"encrypt\", \"decrypt\"]).then(function(sharekey){\n                                            crypto.subtle.exportKey(\"raw\", sharekey).then(function(sharekeyab) {\n                                                var b64key = trim(urlencode(encode(sharekeyab)))\n                                                var sharekeyiv = crypto.getRandomValues(new Uint8Array(16));\n                                                var sharefilenameiv = crypto.getRandomValues(new Uint8Array(16));\n                                                crypto.subtle.encrypt({name: \"AES-CBC\",iv: sharekeyiv},sharekey, decryptedfilekey).then(function(sharepreparedkey) {\n                                                    crypto.subtle.encrypt({name: \"AES-CBC\",iv: sharefilenameiv},sharekey, decryptedfilename).then(function(sharepreparedfilename) {\n                                                        var shareform = new FormData()\n                                                        shareform.append('id', fileid)\n                                                        sharepreparedfilename = new Uint8Array(sharepreparedfilename)\n                                                        sharepreparedkey = new Uint8Array(sharepreparedkey)\n                                                        var realsharepreparedfilename = new Uint8Array(sharepreparedfilename.length + 16)\n                                                        realsharepreparedfilename.set(sharefilenameiv, 0)\n                                                        realsharepreparedfilename.set(sharepreparedfilename, 16)\n                                                        var realsharepreparedkey = new Uint8Array(sharepreparedkey.length + 16)\n                                                        realsharepreparedkey.set(sharekeyiv, 0)\n                                                        realsharepreparedkey.set(sharepreparedkey, 16)\n                                                        var textenc = new TextEncoder();\n                                                        var encodedlink = textenc.encode(\"https://petadrop.com/share/\"+fileid+\"/\"+b64key)\n                                                        var linkiv = crypto.getRandomValues(new Uint8Array(16))\n                                                        var newsalt = crypto.getRandomValues(new Uint8Array(16))\n                                                        crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: newsalt,\"iterations\": 100000,\"hash\": \"SHA-256\"}, impkey,{ name: \"AES-CBC\", length: 256},false,[ \"encrypt\", \"decrypt\" ]).then(function(derivedkey) {\n                                                            crypto.subtle.encrypt({name: \"AES-CBC\",iv: linkiv},derivedkey, encodedlink).then(function(encryptedlink) {\n                                                                var finallinkab = new Uint8Array(new Uint8Array(encryptedlink).length + 32)\n                                                                finallinkab.set(newsalt, 0)\n                                                                finallinkab.set(linkiv, 16)\n                                                                finallinkab.set(new Uint8Array(encryptedlink), 32)\n                                                                var encryptedbase64link = encode(finallinkab)\n                                                                shareform.append('name', encode(realsharepreparedfilename))\n                                                                shareform.append('key', encode(realsharepreparedkey))\n                                                                shareform.append('link', encryptedbase64link)\n                                                                fetch('https://petadrop.com/api/goshare', {method: 'POST', body: shareform, headers:{'Authorization' : storedToken.slice(0, 200)}}).then(function(resp) {\n                                                                    if(resp.ok) {\n                                                                        return resp.json()\n                                                                    }\n                                                                }).then(function(json){\n                                                                    if(json.Status == \"Success\") {\n                                                                        ReactDOM.render(\n                                                                            <Sharearea link={\"https://petadrop.com/share/\"+fileid+\"/\"+b64key} loading={false} id={fileid}/>, \n                                                                            document.querySelector('#sharearea')\n                                                                        )\n                                                                    }\n                                                                })\n                                                            })\n                                                        }).catch(function(err) {\n                                                            console.log(err)\n                                                        })\n                                                    })\n                                                })\n                                            })\n                                        })\n                                    })\n                                })\n                            })\n                        })\n                    })\n                }\n            })\n        })\n    }\n    export function revokeURL(id) {\n\n    }","/Users/oheunchong/Documents/GitHub/pebble-client/src/newviewfile.js",["146","147","148","149","150","151","152","153","154","155","156","157"],"import {Fileviewarea, Defaultxhrloading, Overlay} from './comp';\nimport React from 'react';\nimport {decryptFromPw} from './main'\nimport ReactDOM from 'react-dom';\nimport { decode } from 'base64-arraybuffer';\nimport localforage from 'localforage';\nconst vars = require('./vars.json')\n\nlet finaldecryptedfd\nvar finishlist = []\nvar currentlyrendered = []\nasync function defaultlp(element, range) {\n    var storedToken = await localforage.getItem(\"tk\")\n    var prexhr = new XMLHttpRequest();\n    prexhr.open(\"POST\", \"https://petadrop.com/api/udfetch\", true);\n    var preform = new FormData();\n    prexhr.setRequestHeader(\"Authorization\", storedToken.slice(0,200))\n    preform.append('dir', element);\n    prexhr.setRequestHeader(\"X-XWC-act\", \"vfi\")\n    prexhr.onreadystatechange = function() {\n        if (prexhr.readyState === prexhr.DONE) {\n            if (prexhr.status === 200) {\n                precallback(prexhr.response, element, range);\n            }\n        }\n    };\n    prexhr.send(preform)\n}\nexport function OnlyDownload(element) {\n    defaultlp(element, \"0:5242928\")\n}\n\nexport function rvf(element, range) {\n    ReactDOM.render(\n        <Overlay show ={false} />,\n        document.querySelector('#olay')\n        )\n    document.querySelector(\".fileviewer\").classList.add(\"show\")\n    ReactDOM.render(\n        <Defaultxhrloading />, \n        document.querySelector(\".fileviewer\")\n        )\n    if(currentlyrendered.length > 0) {\n        var idlist = [],\n            namelist = [],\n            srclist = [],\n            typelist = [],\n            mimelist = [];\n        for(var i = 0;i<currentlyrendered.length;i++) {\n            var renderdta = JSON.parse(currentlyrendered[i])\n            idlist.push(renderdta.id)\n            namelist.push(renderdta.name)\n            srclist.push(renderdta.blob)\n            typelist.push(renderdta.ext)\n            mimelist.push(renderdta.mime)\n        }\n            if(idlist.indexOf(element) != -1) {\n                document.querySelector(\".dark\").classList.add(\"show\")\n                document.querySelector(\"body\").classList.add(\"ovx\")\n                document.querySelector(\".fileviewer\").classList.remove(\"show\")\n                var n = idlist.indexOf(element)\n                ReactDOM.render (\n                    <Fileviewarea name={namelist[n]} ft={typelist[n]} src={srclist[n]} mime={mimelist[n]}/>,\n                    document.querySelector(\".dark\")\n                )\n            }else {\n                defaultlp(element, range)\n            }\n    }else {\n        defaultlp(element, range)\n    }\n}\nvar stopped = ''\nexport function stopdownload(id, action) {\n    stopped = id\n    if(action == 1) {\n        document.getElementById('fileloadingtxt').innerText = \"Stopping..\"\n    }\n}\nasync function precallback(data, element) {\n    var storedToken = await localforage.getItem(\"tk\")\n    data = JSON.parse(data)\n    var decer = new TextDecoder();\n    var fnbuffer = decode(data.Name)\n    var salt = fnbuffer.slice(0,16);\n    var iv = fnbuffer.slice(16,32);\n    var realname = fnbuffer.slice(32);\n    var dec1 = await decryptFromPw(storedToken.slice(200), iv, salt, realname)\n\n    var encryptedfileheader = decode(data.Filekey);\n\n    var salt = encryptedfileheader.slice(0, 16)\n    var iv = encryptedfileheader.slice(16, 32)\n    var encryptedfilekey = encryptedfileheader.slice(32)\n    var dec = await decryptFromPw(storedToken.slice(200), iv, salt, encryptedfilekey)\n\n    var importedkey = await crypto.subtle.importKey(\"raw\", dec,{name: 'AES-CBC'},false,[\"encrypt\", \"decrypt\"])\n    var filetype = decer.decode(dec1).split('.');\n    var fileextension\n    if(vars.imagefile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1) {\n        fileextension = \"img\"\n    }\n    else if(vars.vidfile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1) {\n        fileextension = \"vid\"\n\n    }else if(vars.audiofile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1){\n        fileextension = \"audio\"\n\n    }else {\n        fileextension = \"idk\"\n    }\n    document.querySelector(\".fileviewer\").classList.add(\"show\")\n    ReactDOM.render(\n        <Defaultxhrloading />, \n        document.querySelector(\".fileviewer\")\n    )\n        if(stopped.length == 0) {\n            document.querySelector(\"#fileloadingtxt\").innerText= \"Preparing..\"\n        }\n        var nth = 0\n        viewfile(element, (((1024 * 1024)*5) + 48)*(nth)+\":\"+(((1024 * 1024)*5) + 48)*(nth+1), importedkey, decer.decode(dec1), data.Mime, nth, fileextension, true, data.Size)\n}\nfunction calchunk(filelength) {\n    var chunkcount\n    chunkcount = parseInt(filelength / ((1024 * 1024)*5));\n    if((filelength%((1024 * 1024)*5))>0) {\n        chunkcount = chunkcount + 1;\n    }\n    return chunkcount;\n}\nvar currentupload = 0;\nvar now = 0;\nvar finalblob = new Blob([])\nvar bloblist = []\nasync function viewfile(element, range, deckey, filename, filemime, nth, extension, instantsave, originalfilesize) {\n    var storedToken = await localforage.getItem(\"tk\")\n\n    async function processfile(data) {\n    var file = data\n    var aB = new Uint8Array(file)\n    var fileiv = aB.slice(0, 16)\n    var encfile = aB.slice(32)\n    var decryptedfiledata = await crypto.subtle.decrypt({name: 'AES-CBC', iv: fileiv}, deckey, encfile)\n    finishlist.push(nth)\n        if(instantsave == false) {\n            finaldecryptedfd.set(new Uint8Array(decryptedfiledata), parseInt(((1024 * 1024)*5)+1)*(nth))\n            if(finishlist.length == calchunk(originalfilesize)) {\n                var fileblob = URL.createObjectURL(new Blob([finaldecryptedfd], {type: filemime}))\n                finaldecryptedfd = new Uint8Array(0)\n                finishlist = []\n                currentlyrendered.push(JSON.stringify({id : element, blob :fileblob, name : filename, ext : extension, mime : filemime}))\n                document.querySelector(\".fileviewer\").classList.remove(\"show\")\n                document.querySelector(\".dark\").classList.add(\"show\")\n                ReactDOM.render (\n                    <Fileviewarea name={filename} ft={extension} src={fileblob} mime={filemime}/>,\n                    document.querySelector(\".dark\")\n                )\n                now = 0;\n                currentupload = 0;\n            }\n        }else if(instantsave == true) {\n            var newu8 = new Uint8Array(decryptedfiledata)\n            var preblob = new Blob([newu8])\n            bloblist[nth] = preblob\n            finalblob = new Blob(bloblist)\n            if(finalblob.size == originalfilesize) {\n                var finurl = URL.createObjectURL(new Blob([finalblob], {type: filemime}))\n                document.querySelector(\".fileviewer\").classList.remove(\"show\")\n                currentlyrendered.push(JSON.stringify({id : element, blob :finurl, name : filename, ext : extension, mime : filemime}))\n                document.querySelector(\".dark\").classList.add(\"show\")\n                ReactDOM.render (\n                    <Fileviewarea name={filename} ft={extension} src={finurl} mime={filemime}/>,\n                    document.querySelector(\".dark\")\n                )\n                //init\n                InitProg()\n            }\n        }  \n    }\n    function InitProg() {\n        finalblob = new Blob([])\n        bloblist = []\n        currentupload = 0;\n        now = 0;\n    }\n    var token = storedToken.slice(0, 200);\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://storage.petadrop.com/vf/\"+element+\"/\"+range, true)\n    xhr.setRequestHeader(\"X-XWC-act\", \"ahf\")\n    xhr.responseType = \"arraybuffer\";\n    var form = new FormData();\n    form.append('dir', element +\"|\"+ token +\"|\"+ range);\n    xhr.onreadystatechange = function() {\n        if (xhr.readyState === xhr.DONE) {\n            if (xhr.status === 200) {\n                processfile(xhr.response);\n            }else if (xhr.status == 0){\n                document.querySelector(\"#fileloadingtxt\").innerText= \" \";\n                document.querySelector(\".fileviewer\").classList.remove(\"show\")\n            }else {\n                document.querySelector(\"#fileloadingtxt\").innerText=\"oopsie i found an error: \"+xhr.status;\n            }\n        } \n            \n    };\n    var RanFunc = false\n    xhr.onprogress = function(e) {\n        if(stopped.length == 0) {\n            currentupload = e.loaded\n            document.querySelector(\"#fileloadingtxt\").innerText=  \"Downloaded \" + Math.round(((now+currentupload)/originalfilesize)*100) + \"%\"\n            if(RanFunc == false && (e.loaded/5242928)*100 > 10) {\n                viewfile(element, (((1024 * 1024)*5) + 48)*(nth+1)+\":\"+(((1024 * 1024)*5) + 48)*(nth+2), deckey, filename, filemime, nth+1, extension, instantsave, originalfilesize)\n                RanFunc = true\n            }\n        }else {\n            xhr.abort()\n            stopped =''\n            InitProg()\n        }\n        \n    }\n    xhr.onloadend = function() {\n        now = currentupload + now\n    }\n\n    xhr.send(form);\n}",{"ruleId":"158","severity":1,"message":"159","line":22,"column":12,"nodeType":"160","messageId":"161","endLine":22,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":25,"column":18,"nodeType":"160","messageId":"161","endLine":25,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":27,"column":18,"nodeType":"160","messageId":"161","endLine":27,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":29,"column":18,"nodeType":"160","messageId":"161","endLine":29,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":138,"column":9,"nodeType":"164","messageId":"165","endLine":138,"endColumn":18},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"158","severity":1,"message":"159","line":21,"column":38,"nodeType":"160","messageId":"161","endLine":21,"endColumn":40},{"ruleId":"158","severity":1,"message":"170","line":40,"column":55,"nodeType":"160","messageId":"161","endLine":40,"endColumn":57},{"ruleId":"158","severity":1,"message":"170","line":48,"column":55,"nodeType":"160","messageId":"161","endLine":48,"endColumn":57},{"ruleId":"162","severity":1,"message":"171","line":49,"column":25,"nodeType":"164","messageId":"165","endLine":49,"endColumn":26},{"ruleId":"158","severity":1,"message":"170","line":61,"column":55,"nodeType":"160","messageId":"161","endLine":61,"endColumn":57},{"ruleId":"158","severity":1,"message":"159","line":136,"column":40,"nodeType":"160","messageId":"161","endLine":136,"endColumn":42},{"ruleId":"158","severity":1,"message":"159","line":139,"column":46,"nodeType":"160","messageId":"161","endLine":139,"endColumn":48},{"ruleId":"158","severity":1,"message":"159","line":148,"column":20,"nodeType":"160","messageId":"161","endLine":148,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":197,"column":26,"nodeType":"160","messageId":"161","endLine":197,"endColumn":28},{"ruleId":"158","severity":1,"message":"159","line":247,"column":51,"nodeType":"160","messageId":"161","endLine":247,"endColumn":53},{"ruleId":"158","severity":1,"message":"159","line":259,"column":20,"nodeType":"160","messageId":"161","endLine":259,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":268,"column":29,"nodeType":"160","messageId":"161","endLine":268,"endColumn":31},{"ruleId":"158","severity":1,"message":"170","line":352,"column":51,"nodeType":"160","messageId":"161","endLine":352,"endColumn":53},{"ruleId":"158","severity":1,"message":"159","line":355,"column":50,"nodeType":"160","messageId":"161","endLine":355,"endColumn":52},{"ruleId":"172","severity":1,"message":"173","line":431,"column":38,"nodeType":"174","endLine":431,"endColumn":106},{"ruleId":"158","severity":1,"message":"159","line":439,"column":44,"nodeType":"160","messageId":"161","endLine":439,"endColumn":46},{"ruleId":"158","severity":1,"message":"159","line":441,"column":50,"nodeType":"160","messageId":"161","endLine":441,"endColumn":52},{"ruleId":"175","severity":1,"message":"176","line":446,"column":42,"nodeType":"177","messageId":"178","endLine":446,"endColumn":88},{"ruleId":"162","severity":1,"message":"179","line":471,"column":9,"nodeType":"164","messageId":"165","endLine":471,"endColumn":14},{"ruleId":"158","severity":1,"message":"170","line":476,"column":33,"nodeType":"160","messageId":"161","endLine":476,"endColumn":35},{"ruleId":"162","severity":1,"message":"171","line":482,"column":17,"nodeType":"164","messageId":"165","endLine":482,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":496,"column":48,"nodeType":"160","messageId":"161","endLine":496,"endColumn":50},{"ruleId":"162","severity":1,"message":"171","line":503,"column":17,"nodeType":"164","messageId":"165","endLine":503,"endColumn":18},{"ruleId":"158","severity":1,"message":"159","line":505,"column":24,"nodeType":"160","messageId":"161","endLine":505,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":510,"column":51,"nodeType":"160","messageId":"161","endLine":510,"endColumn":53},{"ruleId":"158","severity":1,"message":"159","line":526,"column":31,"nodeType":"160","messageId":"161","endLine":526,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":594,"column":37,"nodeType":"160","messageId":"161","endLine":594,"endColumn":39},{"ruleId":"158","severity":1,"message":"159","line":658,"column":55,"nodeType":"160","messageId":"161","endLine":658,"endColumn":57},{"ruleId":"175","severity":1,"message":"180","line":706,"column":46,"nodeType":"177","messageId":"178","endLine":706,"endColumn":116},{"ruleId":"158","severity":1,"message":"159","line":719,"column":24,"nodeType":"160","messageId":"161","endLine":719,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":723,"column":51,"nodeType":"160","messageId":"161","endLine":723,"endColumn":53},{"ruleId":"158","severity":1,"message":"159","line":25,"column":39,"nodeType":"160","messageId":"161","endLine":25,"endColumn":41},{"ruleId":"158","severity":1,"message":"170","line":40,"column":41,"nodeType":"160","messageId":"161","endLine":40,"endColumn":43},{"ruleId":"158","severity":1,"message":"170","line":42,"column":48,"nodeType":"160","messageId":"161","endLine":42,"endColumn":50},{"ruleId":"158","severity":1,"message":"170","line":44,"column":47,"nodeType":"160","messageId":"161","endLine":44,"endColumn":49},{"ruleId":"158","severity":1,"message":"170","line":46,"column":46,"nodeType":"160","messageId":"161","endLine":46,"endColumn":48},{"ruleId":"158","severity":1,"message":"170","line":48,"column":48,"nodeType":"160","messageId":"161","endLine":48,"endColumn":50},{"ruleId":"158","severity":1,"message":"159","line":56,"column":29,"nodeType":"160","messageId":"161","endLine":56,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":58,"column":35,"nodeType":"160","messageId":"161","endLine":58,"endColumn":37},{"ruleId":"158","severity":1,"message":"170","line":60,"column":31,"nodeType":"160","messageId":"161","endLine":60,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":64,"column":27,"nodeType":"160","messageId":"161","endLine":64,"endColumn":29},{"ruleId":"172","severity":1,"message":"173","line":102,"column":21,"nodeType":"174","endLine":102,"endColumn":147},{"ruleId":"181","severity":1,"message":"182","line":120,"column":5,"nodeType":"183","messageId":"184","endLine":122,"endColumn":6},{"ruleId":"158","severity":1,"message":"159","line":148,"column":18,"nodeType":"160","messageId":"161","endLine":148,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":150,"column":24,"nodeType":"160","messageId":"161","endLine":150,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":152,"column":24,"nodeType":"160","messageId":"161","endLine":152,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":154,"column":24,"nodeType":"160","messageId":"161","endLine":154,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":191,"column":18,"nodeType":"160","messageId":"161","endLine":191,"endColumn":20},{"ruleId":"158","severity":1,"message":"159","line":193,"column":24,"nodeType":"160","messageId":"161","endLine":193,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":195,"column":24,"nodeType":"160","messageId":"161","endLine":195,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":197,"column":24,"nodeType":"160","messageId":"161","endLine":197,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":199,"column":24,"nodeType":"160","messageId":"161","endLine":199,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":253,"column":36,"nodeType":"160","messageId":"161","endLine":253,"endColumn":38},{"ruleId":"158","severity":1,"message":"159","line":261,"column":31,"nodeType":"160","messageId":"161","endLine":261,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":311,"column":56,"nodeType":"160","messageId":"161","endLine":311,"endColumn":58},{"ruleId":"158","severity":1,"message":"170","line":341,"column":30,"nodeType":"160","messageId":"161","endLine":341,"endColumn":32},{"ruleId":"158","severity":1,"message":"159","line":350,"column":30,"nodeType":"160","messageId":"161","endLine":350,"endColumn":32},{"ruleId":"172","severity":1,"message":"173","line":351,"column":24,"nodeType":"174","endLine":351,"endColumn":158},{"ruleId":"158","severity":1,"message":"159","line":352,"column":36,"nodeType":"160","messageId":"161","endLine":352,"endColumn":38},{"ruleId":"158","severity":1,"message":"159","line":354,"column":37,"nodeType":"160","messageId":"161","endLine":354,"endColumn":39},{"ruleId":"158","severity":1,"message":"159","line":416,"column":14,"nodeType":"160","messageId":"161","endLine":416,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":418,"column":20,"nodeType":"160","messageId":"161","endLine":418,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":439,"column":29,"nodeType":"160","messageId":"161","endLine":439,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":447,"column":14,"nodeType":"160","messageId":"161","endLine":447,"endColumn":16},{"ruleId":"158","severity":1,"message":"159","line":449,"column":20,"nodeType":"160","messageId":"161","endLine":449,"endColumn":22},{"ruleId":"158","severity":1,"message":"159","line":455,"column":29,"nodeType":"160","messageId":"161","endLine":455,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":469,"column":46,"nodeType":"160","messageId":"161","endLine":469,"endColumn":48},{"ruleId":"172","severity":1,"message":"173","line":590,"column":17,"nodeType":"174","endLine":590,"endColumn":63},{"ruleId":"172","severity":1,"message":"173","line":600,"column":50,"nodeType":"174","endLine":600,"endColumn":100},{"ruleId":"158","severity":1,"message":"159","line":615,"column":28,"nodeType":"160","messageId":"161","endLine":615,"endColumn":30},{"ruleId":"158","severity":1,"message":"170","line":621,"column":27,"nodeType":"160","messageId":"161","endLine":621,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":657,"column":27,"nodeType":"160","messageId":"161","endLine":657,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":665,"column":29,"nodeType":"160","messageId":"161","endLine":665,"endColumn":31},{"ruleId":"158","severity":1,"message":"159","line":681,"column":35,"nodeType":"160","messageId":"161","endLine":681,"endColumn":37},{"ruleId":"162","severity":1,"message":"185","line":682,"column":17,"nodeType":"164","messageId":"165","endLine":682,"endColumn":21},{"ruleId":"158","severity":1,"message":"159","line":684,"column":35,"nodeType":"160","messageId":"161","endLine":684,"endColumn":37},{"ruleId":"162","severity":1,"message":"185","line":685,"column":17,"nodeType":"164","messageId":"165","endLine":685,"endColumn":21},{"ruleId":"158","severity":1,"message":"159","line":686,"column":35,"nodeType":"160","messageId":"161","endLine":686,"endColumn":37},{"ruleId":"162","severity":1,"message":"185","line":687,"column":17,"nodeType":"164","messageId":"165","endLine":687,"endColumn":21},{"ruleId":"186","severity":1,"message":"187","line":3,"column":17,"nodeType":"164","messageId":"188","endLine":3,"endColumn":23},{"ruleId":"186","severity":1,"message":"189","line":4,"column":9,"nodeType":"164","messageId":"188","endLine":4,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":29,"column":13,"nodeType":"160","messageId":"161","endLine":29,"endColumn":15},{"ruleId":"158","severity":1,"message":"159","line":29,"column":50,"nodeType":"160","messageId":"161","endLine":29,"endColumn":52},{"ruleId":"186","severity":1,"message":"190","line":80,"column":9,"nodeType":"164","messageId":"188","endLine":80,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":87,"column":75,"nodeType":"160","messageId":"161","endLine":87,"endColumn":77},{"ruleId":"158","severity":1,"message":"159","line":96,"column":13,"nodeType":"160","messageId":"161","endLine":96,"endColumn":15},{"ruleId":"158","severity":1,"message":"159","line":96,"column":50,"nodeType":"160","messageId":"161","endLine":96,"endColumn":52},{"ruleId":"191","severity":1,"message":"192","line":123,"column":27,"nodeType":"193","messageId":"194","endLine":123,"endColumn":45,"fix":"195"},{"ruleId":"162","severity":1,"message":"196","line":127,"column":21,"nodeType":"164","messageId":"165","endLine":127,"endColumn":24},{"ruleId":"158","severity":1,"message":"159","line":185,"column":48,"nodeType":"160","messageId":"161","endLine":185,"endColumn":50},{"ruleId":"158","severity":1,"message":"159","line":185,"column":80,"nodeType":"160","messageId":"161","endLine":185,"endColumn":82},{"ruleId":"191","severity":1,"message":"192","line":262,"column":51,"nodeType":"193","messageId":"194","endLine":262,"endColumn":69,"fix":"197"},{"ruleId":"158","severity":1,"message":"159","line":272,"column":56,"nodeType":"160","messageId":"161","endLine":272,"endColumn":58},{"ruleId":"158","severity":1,"message":"159","line":282,"column":67,"nodeType":"160","messageId":"161","endLine":282,"endColumn":69},{"ruleId":"158","severity":1,"message":"159","line":294,"column":70,"nodeType":"160","messageId":"161","endLine":294,"endColumn":72},{"ruleId":"198","severity":1,"message":"199","line":307,"column":90,"nodeType":"160","messageId":"200","endLine":307,"endColumn":91},{"ruleId":"191","severity":1,"message":"192","line":24,"column":23,"nodeType":"193","messageId":"194","endLine":24,"endColumn":41,"fix":"201"},{"ruleId":"162","severity":1,"message":"202","line":119,"column":9,"nodeType":"164","messageId":"165","endLine":119,"endColumn":11},{"ruleId":"162","severity":1,"message":"203","line":120,"column":9,"nodeType":"164","messageId":"165","endLine":120,"endColumn":13},{"ruleId":"158","severity":1,"message":"159","line":23,"column":32,"nodeType":"160","messageId":"161","endLine":23,"endColumn":34},{"ruleId":"158","severity":1,"message":"159","line":98,"column":84,"nodeType":"160","messageId":"161","endLine":98,"endColumn":86},{"ruleId":"158","severity":1,"message":"170","line":57,"column":40,"nodeType":"160","messageId":"161","endLine":57,"endColumn":42},{"ruleId":"158","severity":1,"message":"159","line":76,"column":15,"nodeType":"160","messageId":"161","endLine":76,"endColumn":17},{"ruleId":"162","severity":1,"message":"203","line":92,"column":9,"nodeType":"164","messageId":"165","endLine":92,"endColumn":13},{"ruleId":"162","severity":1,"message":"202","line":93,"column":9,"nodeType":"164","messageId":"165","endLine":93,"endColumn":11},{"ruleId":"158","severity":1,"message":"159","line":117,"column":27,"nodeType":"160","messageId":"161","endLine":117,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":145,"column":24,"nodeType":"160","messageId":"161","endLine":145,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":147,"column":34,"nodeType":"160","messageId":"161","endLine":147,"endColumn":36},{"ruleId":"158","severity":1,"message":"159","line":161,"column":30,"nodeType":"160","messageId":"161","endLine":161,"endColumn":32},{"ruleId":"158","severity":1,"message":"159","line":166,"column":31,"nodeType":"160","messageId":"161","endLine":166,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":197,"column":34,"nodeType":"160","messageId":"161","endLine":197,"endColumn":36},{"ruleId":"158","severity":1,"message":"159","line":208,"column":27,"nodeType":"160","messageId":"161","endLine":208,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":211,"column":24,"nodeType":"160","messageId":"161","endLine":211,"endColumn":26},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'instances' is already defined.","Identifier","redeclared","no-native-reassign",["204"],"no-negated-in-lhs",["205"],"Expected '!==' and instead saw '!='.","'i' is already defined.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'nthJson'.","FunctionExpression","unsafeRefs","'list1' is already defined.","Function declared in a loop contains unsafe references to variable(s) 'i'.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'cont' is already defined.","no-unused-vars","'decode' is defined but never used.","unusedVar","'updatedata' is defined but never used.","'state' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"206","text":"207"},"'enc' is already defined.",{"range":"208","text":"207"},"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",{"range":"209","text":"207"},"'iv' is already defined.","'salt' is already defined.","no-global-assign","no-unsafe-negation",[4502,4502],"()",[11501,11501],[874,874]]