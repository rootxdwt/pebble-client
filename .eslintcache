[{"/Users/oheunchong/Documents/GitHub/pebble-client/src/index.js":"1","/Users/oheunchong/Documents/GitHub/pebble-client/src/main.js":"2","/Users/oheunchong/Documents/GitHub/pebble-client/src/comp.js":"3","/Users/oheunchong/Documents/GitHub/pebble-client/src/uploadhandler.js":"4","/Users/oheunchong/Documents/GitHub/pebble-client/src/pfphandler.js":"5","/Users/oheunchong/Documents/GitHub/pebble-client/src/createlink.js":"6","/Users/oheunchong/Documents/GitHub/pebble-client/src/newviewfile.js":"7"},{"size":6635,"mtime":1630075160269,"results":"8","hashOfConfig":"9"},{"size":31181,"mtime":1630457911416,"results":"10","hashOfConfig":"9"},{"size":30267,"mtime":1630457761263,"results":"11","hashOfConfig":"9"},{"size":15475,"mtime":1630075160269,"results":"12","hashOfConfig":"9"},{"size":6212,"mtime":1630075160269,"results":"13","hashOfConfig":"9"},{"size":9491,"mtime":1630075160269,"results":"14","hashOfConfig":"9"},{"size":8916,"mtime":1630075160269,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"114he95",{"filePath":"20","messages":"21","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":48,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":2,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29","usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"19"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"19"},"/Users/oheunchong/Documents/GitHub/pebble-client/src/index.js",["36","37","38","39","40"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Mobilenew, Lbtnclick,Alignicon,Dir} from \"./comp\";\nimport {openleftbar, getShared, mainMenu} from './main'\n\nReactDOM.render(\n  <React.StrictMode>\n  </React.StrictMode>,\n  document.querySelector('#rt')\n);\n\nclass Leftmenubar extends React.Component {\n  constructor(props) {\n    super(props)\n    this.stle = {stroke: \"#fff\", fill: \"#fff\", color: \"#fff\"}\n\n    this.state ={files: this.stle, recent: {}, trash: {}, share: {}}\n  }\n  makeactive(ctx) {\n    this.setState({files: {}, recent: {}, trash: {}, share: {} })\n    if(ctx == \"files\") {\n      this.setState({files: this.stle})\n      mainMenu()\n    }else if(ctx == \"recent\") {\n      this.setState({recent: this.stle})\n    }else if(ctx == \"trash\") {\n      this.setState({trash: this.stle})\n    }else if(ctx == \"share\") {\n      this.setState({share: this.stle})\n      getShared()\n    }\n  }\n  render() {\n    return(\n      <>\n      <div className=\"leftmenubar\">\n      <div className=\"logocont\" onClick={openleftbar}>\n                <svg version=\"1.1\" id=\"desktop-logo\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\">\n                    <path id=\"logo-svg-path\" d=\"M584.1,307.5c0-1.4,0.1-2.8,0.1-4.2c0-68.5-55.5-124.1-124.1-124.1c-32.4,0-61.9,12.5-84,32.8\n                        c-22.7-26.1-56.2-42.7-93.6-42.7c-68.5,0-124.1,55.5-124.1,124.1c0,4.8,0.3,9.5,0.8,14.1c-2.5-0.2-5-0.3-7.6-0.3\n                        c-62.9,0-113.9,49.3-113.9,110.2c0,60.9,51,110.2,113.9,110.2h425.7c58.5,0,105.9-49.3,105.9-110.2\n                        C683.3,359,639.4,311.2,584.1,307.5z\" />\n                    <g>\n                        </g>\n                    <g>\n                        </g>\n                    <g>\n                        </g>\n                    <g>\n                        </g>\n                </svg>\n            </div>\n\n        \n        <div className=\"leftmenubtn\" id=\"mpagecont\" onClick={()=>this.makeactive(\"files\")} style={this.state.files}>\n                <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\"> \n                    <path id=\"default-black-svg-path\" style={this.state.files} d=\"M518,208.6H348.8c-10.1-24.9-34.6-42.6-63-42.6\n                        h-47.7c-37.3,0-67.9,30.6-67.9,67.9v24.7v23V441c0,27.5,22.5,50,50,50H518c27.5,0,50-22.5,50-50V258.6\n                        C568,231.1,545.5,208.6,518,208.6z\" />\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                </svg>\n                <b className=\"exparea\" id=\"folderico\">Files</b>\n            </div>\n            <div className=\"leftmenubtn\" onClick={()=>this.makeactive(\"recent\")} style={this.state.recent}>          \n                <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\">\n                    <circle id=\"default-black-svg-path\" style={this.state.recent} cx=\"392.9\" cy=\"261.9\" r=\"99.8\"/>\n                    <path id=\"default-black-svg-path\" style={this.state.recent} d=\"M393.5,361.8c-77.1,0-141.6,72.7-158.2,170.2\n                        h316.3C535.1,434.5,470.6,361.8,393.5,361.8z\"/>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                </svg>  \n                <b className=\"exparea\" id=\"gico\">Recent</b>\n            </div>\n            <div className=\"leftmenubtn\" onClick={()=>this.makeactive(\"trash\")} style={this.state.trash}>\n                <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" x=\"0px\"\n                    y=\"0px\" viewBox=\"0 0 720 720\">\n                    <path style={this.state.trash} id=\"default-black-svg-path\" d=\"M478.9,523.4h-215c-2.8,0-5-2.2-5-5V247.7\n                        c0-2.8,2.2-5,5-5h215c2.8,0,5,2.2,5,5v270.7C483.9,521.1,481.6,523.4,478.9,523.4z\"/>\n                    <line style={this.state.trash} id=\"default-black-svg-path\" x1=\"368.8\" y1=\"245.5\" x2=\"370.5\" y2=\"526.2\"/>\n                    <path style={this.state.trash} id=\"default-black-svg-path\" d=\"M527.9,219.4H211.4c-3,0-5.4-2.4-5.4-5.4v0\n                        c0-3,2.4-5.4,5.4-5.4h316.5c3,0,5.4,2.4,5.4,5.4v0C533.3,217,530.9,219.4,527.9,219.4z\"/>\n                    <path style={this.state.trash} id=\"default-black-svg-path\" d=\"M396.5,186.4H348c-2.8,0-5-2.2-5-5v-20.7\n                        c0-2.8,2.2-5,5-5h48.5c2.8,0,5,2.2,5,5v20.7C401.5,184.2,399.2,186.4,396.5,186.4z\"/>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                    <g>\n                    </g>\n                </svg>\n            <b className=\"exparea\" id=\"trashico\">Trash</b>\n        </div>\n        <div className=\"leftmenubtn\" onClick={()=>this.makeactive(\"share\")} style={this.state.share}>\n            <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" x=\"0px\"\n                 y=\"0px\" viewBox=\"0 0 720 720\">\n            <circle style={this.state.share} id=\"default-black-svg-path\" cx=\"243.6\" cy=\"338.7\" r=\"53.7\"/>\n            <line style={this.state.share} id=\"default-black-svg-path\" x1=\"280.4\" y1=\"298.2\" x2=\"394.1\" y2=\"229.8\"/>\n            <line style={this.state.share} id=\"default-black-svg-path\" x1=\"282.9\" y1=\"375.3\" x2=\"378.9\" y2=\"443.8\"/>\n            <circle style={this.state.share} id=\"default-black-svg-path\" cx=\"427\" cy=\"209.9\" r=\"53.7\"/>\n            <circle style={this.state.share} id=\"default-black-svg-path\" cx=\"413.1\" cy=\"468.2\" r=\"53.7\"/>\n            <g>\n            </g>\n            <g>\n            </g>\n            <g>\n            </g>\n            <g>\n            </g>\n            </svg>\n            <b className=\"exparea\" id=\"share\">Share</b>\n        </div>\n      </div>\n      </>\n    );\n  }\n}\n\nexport function eclickdetector(aa, bb) {\n  if(aa === true) {\n    var instances = ['View', 'Delete', 'Share', 'Download', 'Change View', 'New'];\n  }else {\n    var instances = ['Change View', 'New'];\n  }\n  ReactDOM.render (\n    <Lbtnclick blank_instances={instances} id={bb}/>,\n    document.querySelector('#rbtn')\n  );\n}\nReactDOM.render (\n  <Alignicon />,\n  document.querySelector(\".aligniconArea\")\n)\nReactDOM.render (\n  [<Dir />],\n  document.querySelector('.dirArea')\n)\nexport async function mobilenew(prop, size, id, name) {\n  ReactDOM.render (\n    <Mobilenew propp={prop} size={size} id={id} name={name}/>,\n    document.querySelector('#mbtn')\n  )\n}\nReactDOM.render (\n  <Leftmenubar />,\n  document.querySelector('#rt')\n);",["41","42"],"/Users/oheunchong/Documents/GitHub/pebble-client/src/main.js",["43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73"],"/Users/oheunchong/Documents/GitHub/pebble-client/src/comp.js",["74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"/Users/oheunchong/Documents/GitHub/pebble-client/src/uploadhandler.js",["122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"import {mobilenew} from './index.js'\nimport { readAndCompressImage } from 'browser-image-resizer';\nimport { encode,decode } from 'base64-arraybuffer';\nimport {updatedata, curdir, singlefile} from './main.js';\nimport {Uploadnotify} from './comp'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport localforage from 'localforage';\nconst vars = require('./vars.json')\n\nfunction size(s) {\n    var fs\n    if(1024 >= s) {\n        fs = Math.round(s) + \"B\"\n\n    }else if(s > 1024 && s < 1024*1024) {\n        fs = Math.round(s/1024) + \"KB\"\n\n    }else if(s >= 1024*1024 && s < 1024*1024*1024) {\n        fs = Math.round(s/(1024*1024)) + \"MB\"\n\n    }else if(s >= 1024*1024*1024 && s < 1024*1024*1024*1024) {\n        fs = Math.round(s/(1024*1024*1024)) + \"GB\"    \n    }\n    return fs\n}\n\nfunction filedetail(file, id) {\n    if(file == undefined || file == null || file == '') {\n    }else {\n        if(file === null) {\n        }\n        var fs= size(file.size)\n        ReactDOM.render(\n            <Uploadnotify name={file.name} size={fs} progid={id} act={\"\"}/>,\n            document.querySelector(\"#ules\")\n        )\n    }\n}\n\nasync function encthumbnail(fdata, id) {\n    var iv = crypto.getRandomValues(new Uint8Array(16));\n    var salt = crypto.getRandomValues(new Uint8Array(16));\n    var fd = fdata\n    var storedToken = await localforage.getItem(\"tk\")\n    var pww = storedToken.slice(200);\n    let enc = new TextEncoder();\n    var impk = await crypto.subtle.importKey(\"raw\",enc.encode(pww), {name: \"PBKDF2\"},false,[\"deriveBits\", \"deriveKey\"])\n    var key = await crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt,\"iterations\": 100000,\"hash\": \"SHA-256\"   }, impk,{ \"name\": \"AES-CBC\", \"length\": 256},false,[ \"encrypt\", \"decrypt\" ])\n    var encrypted = await crypto.subtle.encrypt({'name': 'AES-CBC',iv }, key, fd)\n\n    encrypted = new Uint8Array(encrypted)\n    var fab = new Uint8Array(new Uint8Array(encrypted).length + 32)\n    fab.set(iv, 0)\n    fab.set(salt, 16)\n    fab.set(encrypted, 32)\n    var finblob = new Blob([fab])\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://petadrop.com/api/thumbhandle/\", true)\n    var tk = storedToken.slice(0,200);\n    xhr.setRequestHeader(\"Authorization\", tk)           \n    xhr.setRequestHeader(\"x-xwc-act\", \"up\")            \n    var form = new FormData();\n    form.append(\"thumb\", finblob)\n    form.append(\"tn\", id)\n    if (xhr.readyState === xhr.DONE) {\n        if (xhr.status === 200) {\n            console.log(\"ok\")\n        }\n    }\n    xhr.send(form)\n}\n\nexport function uploadworker() {\n    var fl = document.querySelector('#fileinput').files\n    var state;\n    if(fl.length >1) {\n        state=1\n    }else {\n        state=0\n    }\n    onetime(0)\n}\nvar pfplink\n\nfunction updateProg(offset) {\n    if(document.querySelectorAll(\".progrezz\")[0].value < offset || offset == 0) {\n        document.querySelectorAll(\".progrezz\")[0].value = offset\n        document.querySelectorAll(\".progrezz\")[1].value = offset\n    }\n}\nasync function onetime(i) {\n\n    var file = document.querySelector('#fileinput').files[i];\n\n    if(file == undefined || file == null || file == '') {\n\n    }else {\n    mobilenew(\"preup\")   \n    if(window.innerWidth > 760) {\n        ReactDOM.render(\n            <Uploadnotify name={\"Preparing..\"} size={\"\"} progid={\"\"} act={\"\"}/>,\n            document.querySelector(\"#ules\")\n        )\n    }\n        var storedToken = await localforage.getItem(\"tk\")\n        var salt = crypto.getRandomValues(new Uint8Array(16))\n        var iv = crypto.getRandomValues(new Uint8Array(16))\n        var pww = storedToken.slice(200);\n        let enc = new TextEncoder();\n        var fkey = await crypto.subtle.generateKey({name: \"AES-CBC\",length: 256},true,[\"encrypt\", \"decrypt\"])\n        var keybuff = await crypto.subtle.exportKey(\"raw\", fkey)\n        var impk = await crypto.subtle.importKey(\"raw\",enc.encode(pww),\"PBKDF2\",false,[\"deriveKey\", \"deriveBits\"])\n        var derivedkey = await crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt, \"iterations\": 100000, \"hash\": \"SHA-256\" }, impk, {\"name\": \"AES-CBC\", \"length\": 256 }, false, [ \"encrypt\", \"decrypt\" ])\n        var encryptedfn = await crypto.subtle.encrypt({ name: 'AES-CBC',iv: iv }, derivedkey, enc.encode(file.name))\n\n            var keyiv = crypto.getRandomValues(new Uint8Array(16))\n            crypto.subtle.encrypt(\n                {name: 'AES-CBC',\n                iv: keyiv \n            }, derivedkey, keybuff).then(function(enc) {\n\n                var xhr = new XMLHttpRequest;\n                xhr.open('POST', \"https://petadrop.com/api/preupload\", true)\n                var form = new FormData();\n                xhr.setRequestHeader(\"Authorization\", storedToken.slice(0,200))\n                var enc = new Uint8Array(enc)\n                var findata = new Uint8Array(new Uint8Array(enc).length+32)\n                findata.set(salt, 0);\n                findata.set(keyiv, 16);\n                findata.set(enc, 32);\n\n                var enf = new Uint8Array(encryptedfn)\n                var fnfd = new Uint8Array(new Uint8Array(enf).length+32)\n                fnfd.set(salt, 0);\n                fnfd.set(iv, 16);\n                fnfd.set(enf, 32);\n\n\n                var string = encode(findata);\n                form.append(\"key\", string)\n                form.append(\"fname\", encode(fnfd))\n                form.append(\"type\", file.type)\n                form.append(\"size\", file.size)\n                form.append(\"curdir\", curdir)\n\n                xhr.send(form);\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === xhr.DONE) {\n                        if (xhr.status === 200) {\n                            callback(xhr.response);\n                            //filetype & thumbnail\n                            var fileId = JSON.parse(xhr.response).Id\n                            var filetype = file.name.split('.');\n                            if(vars.imagefile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1) {\n                                var config = {\n                                    quality: 1,\n                                    maxWidth: 100,\n                                    maxHeight: 100,\n                                    autoRotate: false,\n                                    debug: false\n                                }\n                                readAndCompressImage(file, config).then(function(resizedpfp) {\n                                    const reader = new FileReader()\n                                    reader.onloadend = function(e) {\n                                        encthumbnail(e.target.result, fileId)\n                                        pfplink = URL.createObjectURL(new Blob([e.target.result]))\n                                    }\n                                    reader.readAsArrayBuffer(resizedpfp)\n                                })\n                            }\n                            else if(vars.codefile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1) {\n                                var read = new FileReader()\n                                read.onload = function(e) {\n                                    var finstringArr =  e.target.result.split(\"\\n\");\n                                    var canvas = document.createElement(\"canvas\");\n                                    canvas.width = \"100\"\n                                    canvas.height = \"100\"\n                                    var ctx = canvas.getContext(\"2d\");\n                                    ctx.fillStyle = \"white\";\n                                    ctx.fillRect(0, 0, canvas.width, canvas.height);\n                                    ctx.font = \"7px Arial\"\n                                    ctx.fillStyle = \"black\"\n                                    for(var i=0;i<20;i++) {\n                                        if(!(i == undefined || finstringArr[i] == undefined)) {\n                                            ctx.fillText(finstringArr[i].slice(0, 30), 5, 6*(i+1))\n                                        }\n                                        \n                                    }\n                                    canvas.toBlob(function(blob) {\n                                        var reader = new FileReader()\n                                        reader.onloadend = function(e) {\n                                            encthumbnail(e.target.result, fileId)\n                                            pfplink = URL.createObjectURL(new Blob([e.target.result]))\n                                        }\n                                        reader.readAsArrayBuffer(blob)\n                                    })\n                                }\n                                read.readAsText(file)\n                                \n                            }else {\n                                pfplink = \"\"\n                            }\n                        }\n                    }\n                };\n                function callback(resp) {\n                    var res = JSON.parse(resp);\n                    var val = res.Id.toString();\n                    var enc = new TextEncoder()\n                    \n                    val = enc.encode(val)\n                    fileadded(0, 1, val, fkey)\n                \n                    mobilenew(\"upchk\", size(file.size), res.Id.toString(), file.name).then(function() {\n                        filedetail(file, res.Id.toString())\n                    })\n                }\n            })\n    }\n    function calchunk(filelength) {\n        var chunkcount\n        chunkcount = parseInt(filelength / ((1024 * 1024)*5));\n        if((filelength%((1024 * 1024)*5))>0) {\n            chunkcount = chunkcount + 1;\n        }\n        return chunkcount;\n    }\n    var currentupload = 0;\n    var now = 0;\n    function fileadded(start, nth, identify, key) {\n        var slice_size = (1024 * 1024)*5;\n        var fread = new FileReader();\n        var next_slice = start + slice_size + 1;\n        var blob = file.slice( start, next_slice );\n        \n        fread.onloadend = async function(e) {\n                if ( e.target.readyState !== FileReader.DONE ) {\n                    return;\n                }\n                var buffer = new Uint8Array(e.target.result);\n                        var iv = crypto.getRandomValues(new Uint8Array(16));\n                        crypto.subtle.encrypt({ \n                            'name': 'AES-CBC',\n                                iv \n                            }, key, buffer) \n\n                        .then(encrypted => {\n                                var encrypted2 = new Uint8Array(encrypted)\n                                var findata = new Uint8Array(encrypted2.length+32)\n                                findata.set(iv, 0);\n                                findata.set(identify, 16);\n                                findata.set(encrypted2, 32);\n                                var fffd = new Blob([findata])\n                                    window.crypto.subtle.digest('SHA-512', findata).then(function(digest) {\n                                        digest = Array.from(new Uint8Array(digest)).map(b => b.toString(16).padStart(2, '0')).join('');\n                                        \n                                        findata = null\n                                        encrypted2 = null\n                                        buffer = null\n\n                                        var xhr = new XMLHttpRequest;\n                                        xhr.open(\"POST\", \"https://storage.petadrop.com/upload?idnf=\"+digest+\"&chnum=\"+nth+\"&ttlch=\"+calchunk(file.size), true);\n\n                                        var form = new FormData();\n\n                                        form.append(\"file\", fffd)\n                                        var RanFunc = false\n                                        xhr.upload.onprogress = function(e) {\n                                            currentupload = e.loaded\n                                            updateProg(((now + e.loaded)/file.size)*100)\n                                            if(RanFunc == false && (e.loaded/5242928)*100 > 65 && nth+1 <= calchunk(file.size)) {\n                                                fileadded( next_slice, nth+1 ,identify, key)\n                                                RanFunc = true\n                                            }\n                                        }\n                                        xhr.upload.onloadend =function() {\n                                            now = currentupload + now\n                                        }\n                                        xhr.onreadystatechange = function() {\n                                            if (xhr.readyState === xhr.DONE) {\n                                                    if(xhr.status == 200) {\n                                                        if(JSON.parse(xhr.response).Statusmsg !== \"Success\") {\n                                                            ReactDOM.render(\n                                                                <Uploadnotify name={\"Failed\"}/>,\n                                                                document.querySelector(\"#ules\")\n                                                            )\n                                                        }else {\n                                                            \n                                                            if ( next_slice < file.size ) {\n                                                            } else {\n                                                                singlefile(identify, pfplink)\n                                                                updateProg(0)\n                                                                if(i == document.querySelector('#fileinput').files.length -1) {\n                                                                    ReactDOM.unmountComponentAtNode(document.querySelector(\"#ules\"))\n                                                                    if(window.innerWidth > 760) {\n                                                                    }else {\n                                                                        mobilenew(\"bsc\")\n                                                                    }\n                                                                }else {\n                                                                    onetime(i+1)\n                                                                }\n                                                            }   \n                                                        }\n                                                    }else {\n                                                        ReactDOM.render(\n                                                            <Uploadnotify name={\"Failed \"+\"(\"+xhr.status+\")\"}/>,\n                                                            document.querySelector(\"#ules\")\n                                                        )\n                                                    }\n                                            }\n                                        };\n                                        xhr.send(form);  \n                                    })\n\n                        })                              \n    \n    }\n        fread.readAsArrayBuffer(blob)\n    }\n}","/Users/oheunchong/Documents/GitHub/pebble-client/src/pfphandler.js",["139","140","141"],"import { readAndCompressImage } from 'browser-image-resizer';\nimport { encode,decode } from 'base64-arraybuffer';\nimport {mobilenew} from './index.js'\nimport localforage from 'localforage';\nimport {Uploadnotify} from './comp'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n  export function pfpinput() {\n    const imgs = ['jpg', 'jpeg', 'png'];\n      var file = document.querySelector('#pfpuploader').files[0]\n      var filen = file.name.split('.')\n      if(imgs.indexOf(filen[filen.length - 1].toLowerCase()) !== -1) {\n\n        const config = {\n          quality: 0.5,\n          maxWidth: 500,\n          maxHeight: 500,\n          autoRotate: false,\n          debug: false\n        }\n        readAndCompressImage(file, config).then(function(resizedpfp) {\n          localforage.getItem(\"tk\").then(function(storedToken) {\n            var xhr = new XMLHttpRequest;\n            xhr.open('POST', 'https://petadrop.com/api/pfph');\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === xhr.DONE) {\n                    if (xhr.status === 200) {\n                        var form = new FormData();\n                        fetch('https://petadrop.com/api/udfetch', {method: 'POST', body: form, headers:{'X-XWC-act': 'pfpf', 'Authorization': storedToken.slice(0, 200)}}).then(function(resp) {\n                          if(resp.ok) {\n                            return resp.json()\n                          }\n                        }).then(function(json) {\n                          console.log(json)\n                          var pfpb64 = json.Pfp;\n                          var sarray = pfpb64.split(\"|\");\n                          processpfp(sarray[0], sarray[1], sarray[2]);\n                          mobilenew(\"bsc\").then(function() {\n                            if(window.innerWidth > 760) {\n                              document.querySelector('.uploadnotify').classList.remove('show');\n                              ReactDOM.render(\n                                <></>,\n                                document.querySelector(\"#ules\")\n                            )\n                            }else {\n                                document.querySelector('.mobile-uploadbtn').classList.remove('uploading');\n                            }\n                          })\n                        })\n                    }\n                }\n            };\n            const reader = new FileReader()\n            reader.onloadend = function() {\n              var buffer = reader.result;\n              var iv = crypto.getRandomValues(new Uint8Array(16));\n              var salt = crypto.getRandomValues(new Uint8Array(16))\n    \n                  var pww = storedToken.slice(200);\n                  let enc = new TextEncoder();\n                  crypto.subtle.importKey(\n    \n                      \"raw\",\n                      enc.encode(pww), \n                      {name: \"PBKDF2\"},\n                      false,\n                      [\"deriveBits\", \"deriveKey\"]\n    \n                  ).then(function(impk) {\n                    crypto.subtle.deriveKey({\n    \n                      \"name\": \"PBKDF2\",\n                      salt: salt,\n                      \"iterations\": 100000,\n                      \"hash\": \"SHA-256\"   \n                      }, \n    \n                      impk,\n                      { \"name\": \"AES-CBC\", \"length\": 256},\n                      false,\n                      [ \"encrypt\", \"decrypt\" ]\n    \n                        ).then(function(key) {\n                        crypto.subtle.encrypt({ \n                          'name': 'AES-CBC',\n                            iv \n                          }, key, buffer).then(function(encrypted) {\n                            mobilenew(\"upchk\").then(function() {\n                              if(window.innerWidth > 760) {\n                            ReactDOM.render(\n                                <Uploadnotify name={\"Updating Profile Picture..\"} size={\"\"} progid={\"\"} act={\"pfp\"} />,\n                                document.querySelector(\"#ules\")\n                            )\n                            document.querySelector('.uploadnotify').classList.add('show');\n                            }else {\n                                document.querySelector('.mobile-uploadbtn').classList.add('uploading');\n                        \n                            }\n                          })\n                            var tk = storedToken.slice(0,200);\n                            console.log(encode(encrypted))\n                            var form = new FormData();\n                            form.append('pfp', encode(encrypted)+\"|\"+encode(iv)+\"|\"+encode(salt));\n                            xhr.setRequestHeader(\"Authorization\", tk)\n                            xhr.send(form);\n                          })\n                        })\n                  })\n              }\n              reader.readAsArrayBuffer(resizedpfp);\n          })\n        })\n      }else {\n        console.log(\"unallowed file type\")\n      }\n  }\n  export function processpfp(value, iv, salt) {\n    var iv=decode(iv);\n    var salt=decode(salt);\n\n    var f = decode(value)\n    localforage.getItem(\"tk\").then(function(storedToken) {\n      var pww = storedToken.slice(200);\n      let enc = new TextEncoder();\n      crypto.subtle.importKey(\n        \n        \"raw\",\n        enc.encode(pww), \n        {name: \"PBKDF2\"},\n        false,\n        [\"deriveBits\", \"deriveKey\"]\n  \n    ).then(function(impk) {\n      crypto.subtle.deriveKey({\n  \n        \"name\": \"PBKDF2\",\n        salt: salt,\n        \"iterations\": 100000,\n        \"hash\": \"SHA-256\"   \n        }, \n  \n        impk,\n        { \"name\": \"AES-CBC\", \"length\": 256},\n        false,\n        [ \"encrypt\", \"decrypt\" ]\n  \n         ).then(function(key) {\n          crypto.subtle.decrypt({ \n            name: 'AES-CBC',\n             iv: iv \n            }, key, f).then(function(decrypted) {\n              \n              encode(decrypted);\n              var l = document.querySelectorAll('.pfpimg');\n              for(var i=0;i<l.length;i++) {\n                l[i].src = URL.createObjectURL(new Blob([decrypted], {type: \"image/jpeg\"}))\n              }\n            })\n         })\n      })\n    })\n}\n","/Users/oheunchong/Documents/GitHub/pebble-client/src/createlink.js",["142","143"],"\nimport { encode,decode } from 'base64-arraybuffer';\nimport {encode as urlencode, trim} from 'url-safe-base64';\nimport {Sharearea} from './comp'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport localforage from 'localforage';\n\n\n    export default function share(fileid) {\n        localforage.getItem(\"tk\").then(function(storedToken) {\n            ReactDOM.render(\n                <Sharearea link={\"aa\"} loading={true}/>, \n                document.querySelector('#sharearea')\n            )\n            var form = new FormData();\n            form.append(\"id\", fileid)\n            fetch('https://petadrop.com/api/udfetch', {method: 'POST', body: form, headers: {'X-XWC-act' : 'fel'}}).then(function(resp) {\n                if(resp.ok) {\n                    return resp.json()\n                }\n            }).then(function(json) {\n                if(json.Status == \"Success\") {\n                    var enclinkab = decode(json.Link)\n                    var salt = enclinkab.slice(0, 16)\n                    var enclinkiv = enclinkab.slice(16, 32)\n                    var realencdata = enclinkab.slice(32)\n                    var enc = new TextEncoder();\n                    crypto.subtle.importKey(\"raw\",enc.encode(storedToken.slice(200)),\"PBKDF2\",false,[\"deriveKey\", \"deriveBits\"]).then(function(impkey) {\n                        crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt,\"iterations\": 100000,\"hash\": \"SHA-256\"}, impkey,{ name: \"AES-CBC\", length: 256},false,[ \"encrypt\", \"decrypt\" ]).then(function(derivedkey) {\n                            crypto.subtle.decrypt({name: 'AES-CBC', iv: enclinkiv}, derivedkey, realencdata).then(function(declink) {\n                                var dec = new TextDecoder();\n                                ReactDOM.render(\n                                    <Sharearea link={dec.decode(declink)} loading={false} id={fileid}/>, \n                                    document.querySelector('#sharearea')\n                                )\n                            })\n                        })\n                    })\n                }else {\n                    var form = new FormData();\n                    form.append(\"dir\", fileid)\n                    fetch('https://petadrop.com/api/udfetch', {method: 'POST', body: form, headers: {'X-XWC-act' : 'vfi', 'Authorization' : storedToken.slice(0, 200)}}).then(function(resp) {\n                        if(resp.ok) {\n                            return resp.json()\n                        }\n                    }).then(function(json) {\n                        var encryptedfilekey = decode(json.Filekey)\n                        var encryptedname = decode(json.Name)\n                \n                        var salt = encryptedname.slice(0,16);\n                        var nameiv = encryptedname.slice(16,32);\n                        var realname = encryptedname.slice(32);\n                        var keyiv = encryptedfilekey.slice(16,32);\n                        var realkey = encryptedfilekey.slice(32);\n                \n                        var enc = new TextEncoder();\n                        crypto.subtle.importKey(\"raw\",enc.encode(storedToken.slice(200)),\"PBKDF2\",false,[\"deriveKey\", \"deriveBits\"]).then(function(impkey) {\n                            crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt,\"iterations\": 100000,\"hash\": \"SHA-256\"}, impkey,{ name: \"AES-CBC\", length: 256},false,[ \"encrypt\", \"decrypt\" ]).then(function(derivedkey) {\n                                crypto.subtle.decrypt({name: 'AES-CBC', iv: keyiv}, derivedkey, realkey).then(function(decryptedfilekey) {\n                                    crypto.subtle.decrypt({name: 'AES-CBC', iv: nameiv}, derivedkey, realname).then(function(decryptedfilename) {\n                                        crypto.subtle.generateKey({name: \"AES-CBC\", length: 128}, true, [\"encrypt\", \"decrypt\"]).then(function(sharekey){\n                                            crypto.subtle.exportKey(\"raw\", sharekey).then(function(sharekeyab) {\n                                                var b64key = trim(urlencode(encode(sharekeyab)))\n                                                var sharekeyiv = crypto.getRandomValues(new Uint8Array(16));\n                                                var sharefilenameiv = crypto.getRandomValues(new Uint8Array(16));\n                                                crypto.subtle.encrypt({name: \"AES-CBC\",iv: sharekeyiv},sharekey, decryptedfilekey).then(function(sharepreparedkey) {\n                                                    crypto.subtle.encrypt({name: \"AES-CBC\",iv: sharefilenameiv},sharekey, decryptedfilename).then(function(sharepreparedfilename) {\n                                                        var shareform = new FormData()\n                                                        shareform.append('id', fileid)\n                                                        sharepreparedfilename = new Uint8Array(sharepreparedfilename)\n                                                        sharepreparedkey = new Uint8Array(sharepreparedkey)\n                                                        var realsharepreparedfilename = new Uint8Array(sharepreparedfilename.length + 16)\n                                                        realsharepreparedfilename.set(sharefilenameiv, 0)\n                                                        realsharepreparedfilename.set(sharepreparedfilename, 16)\n                                                        var realsharepreparedkey = new Uint8Array(sharepreparedkey.length + 16)\n                                                        realsharepreparedkey.set(sharekeyiv, 0)\n                                                        realsharepreparedkey.set(sharepreparedkey, 16)\n                                                        var textenc = new TextEncoder();\n                                                        var encodedlink = textenc.encode(\"https://petadrop.com/share/\"+fileid+\"/\"+b64key)\n                                                        var linkiv = crypto.getRandomValues(new Uint8Array(16))\n                                                        var newsalt = crypto.getRandomValues(new Uint8Array(16))\n                                                        crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: newsalt,\"iterations\": 100000,\"hash\": \"SHA-256\"}, impkey,{ name: \"AES-CBC\", length: 256},false,[ \"encrypt\", \"decrypt\" ]).then(function(derivedkey) {\n                                                            crypto.subtle.encrypt({name: \"AES-CBC\",iv: linkiv},derivedkey, encodedlink).then(function(encryptedlink) {\n                                                                var finallinkab = new Uint8Array(new Uint8Array(encryptedlink).length + 32)\n                                                                finallinkab.set(newsalt, 0)\n                                                                finallinkab.set(linkiv, 16)\n                                                                finallinkab.set(new Uint8Array(encryptedlink), 32)\n                                                                var encryptedbase64link = encode(finallinkab)\n                                                                shareform.append('name', encode(realsharepreparedfilename))\n                                                                shareform.append('key', encode(realsharepreparedkey))\n                                                                shareform.append('link', encryptedbase64link)\n                                                                fetch('https://petadrop.com/api/goshare', {method: 'POST', body: shareform, headers:{'Authorization' : storedToken.slice(0, 200)}}).then(function(resp) {\n                                                                    if(resp.ok) {\n                                                                        return resp.json()\n                                                                    }\n                                                                }).then(function(json){\n                                                                    if(json.Status == \"Success\") {\n                                                                        ReactDOM.render(\n                                                                            <Sharearea link={\"https://petadrop.com/share/\"+fileid+\"/\"+b64key} loading={false} id={fileid}/>, \n                                                                            document.querySelector('#sharearea')\n                                                                        )\n                                                                    }\n                                                                })\n                                                            })\n                                                        }).catch(function(err) {\n                                                            console.log(err)\n                                                        })\n                                                    })\n                                                })\n                                            })\n                                        })\n                                    })\n                                })\n                            })\n                        })\n                    })\n                }\n            })\n        })\n    }\n    export function revokeURL(id) {\n\n    }","/Users/oheunchong/Documents/GitHub/pebble-client/src/newviewfile.js",["144","145","146","147","148","149","150","151","152","153","154","155"],"import {Fileviewarea, Defaultxhrloading, Overlay} from './comp';\nimport React from 'react';\nimport {decryptFromPw} from './main'\nimport ReactDOM from 'react-dom';\nimport { decode } from 'base64-arraybuffer';\nimport localforage from 'localforage';\nconst vars = require('./vars.json')\n\nlet finaldecryptedfd\nvar finishlist = []\nvar currentlyrendered = []\nasync function defaultlp(element, range) {\n    var storedToken = await localforage.getItem(\"tk\")\n    var prexhr = new XMLHttpRequest();\n    prexhr.open(\"POST\", \"https://petadrop.com/api/udfetch\", true);\n    var preform = new FormData();\n    prexhr.setRequestHeader(\"Authorization\", storedToken.slice(0,200))\n    preform.append('dir', element);\n    prexhr.setRequestHeader(\"X-XWC-act\", \"vfi\")\n    prexhr.onreadystatechange = function() {\n        if (prexhr.readyState === prexhr.DONE) {\n            if (prexhr.status === 200) {\n                precallback(prexhr.response, element, range);\n            }\n        }\n    };\n    prexhr.send(preform)\n}\nexport function OnlyDownload(element) {\n    defaultlp(element, \"0:5242928\")\n}\n\nexport function rvf(element, range) {\n    ReactDOM.render(\n        <Overlay show ={false} />,\n        document.querySelector('#olay')\n        )\n    document.querySelector(\".fileviewer\").classList.add(\"show\")\n    ReactDOM.render(\n        <Defaultxhrloading />, \n        document.querySelector(\".fileviewer\")\n        )\n    if(currentlyrendered.length > 0) {\n        var idlist = [],\n            namelist = [],\n            srclist = [],\n            typelist = [],\n            mimelist = [];\n        for(var i = 0;i<currentlyrendered.length;i++) {\n            var renderdta = JSON.parse(currentlyrendered[i])\n            idlist.push(renderdta.id)\n            namelist.push(renderdta.name)\n            srclist.push(renderdta.blob)\n            typelist.push(renderdta.ext)\n            mimelist.push(renderdta.mime)\n        }\n            if(idlist.indexOf(element) != -1) {\n                document.querySelector(\".dark\").classList.add(\"show\")\n                document.querySelector(\"body\").classList.add(\"ovx\")\n                document.querySelector(\".fileviewer\").classList.remove(\"show\")\n                var n = idlist.indexOf(element)\n                ReactDOM.render (\n                    <Fileviewarea name={namelist[n]} ft={typelist[n]} src={srclist[n]} mime={mimelist[n]}/>,\n                    document.querySelector(\".dark\")\n                )\n            }else {\n                defaultlp(element, range)\n            }\n    }else {\n        defaultlp(element, range)\n    }\n}\nvar stopped = ''\nexport function stopdownload(id, action) {\n    stopped = id\n    if(action == 1) {\n        document.getElementById('fileloadingtxt').innerText = \"Stopping..\"\n    }\n}\nasync function precallback(data, element) {\n    var storedToken = await localforage.getItem(\"tk\")\n    data = JSON.parse(data)\n    var decer = new TextDecoder();\n    var fnbuffer = decode(data.Name)\n    var salt = fnbuffer.slice(0,16);\n    var iv = fnbuffer.slice(16,32);\n    var realname = fnbuffer.slice(32);\n    var dec1 = await decryptFromPw(storedToken.slice(200), iv, salt, realname)\n\n    var encryptedfileheader = decode(data.Filekey);\n\n    var salt = encryptedfileheader.slice(0, 16)\n    var iv = encryptedfileheader.slice(16, 32)\n    var encryptedfilekey = encryptedfileheader.slice(32)\n    var dec = await decryptFromPw(storedToken.slice(200), iv, salt, encryptedfilekey)\n\n    var importedkey = await crypto.subtle.importKey(\"raw\", dec,{name: 'AES-CBC'},false,[\"encrypt\", \"decrypt\"])\n    var filetype = decer.decode(dec1).split('.');\n    var fileextension\n    if(vars.imagefile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1) {\n        fileextension = \"img\"\n    }\n    else if(vars.vidfile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1) {\n        fileextension = \"vid\"\n\n    }else if(vars.audiofile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1){\n        fileextension = \"audio\"\n\n    }else {\n        fileextension = \"idk\"\n    }\n    document.querySelector(\".fileviewer\").classList.add(\"show\")\n    ReactDOM.render(\n        <Defaultxhrloading />, \n        document.querySelector(\".fileviewer\")\n    )\n        if(stopped.length == 0) {\n            document.querySelector(\"#fileloadingtxt\").innerText= \"Preparing..\"\n        }\n        var nth = 0\n        viewfile(element, (((1024 * 1024)*5) + 48)*(nth)+\":\"+(((1024 * 1024)*5) + 48)*(nth+1), importedkey, decer.decode(dec1), data.Mime, nth, fileextension, true, data.Size)\n}\nfunction calchunk(filelength) {\n    var chunkcount\n    chunkcount = parseInt(filelength / ((1024 * 1024)*5));\n    if((filelength%((1024 * 1024)*5))>0) {\n        chunkcount = chunkcount + 1;\n    }\n    return chunkcount;\n}\nvar currentupload = 0;\nvar now = 0;\nvar finalblob = new Blob([])\nvar bloblist = []\nasync function viewfile(element, range, deckey, filename, filemime, nth, extension, instantsave, originalfilesize) {\n    var storedToken = await localforage.getItem(\"tk\")\n\n    async function processfile(data) {\n    var file = data\n    var aB = new Uint8Array(file)\n    var fileiv = aB.slice(0, 16)\n    var encfile = aB.slice(32)\n    var decryptedfiledata = await crypto.subtle.decrypt({name: 'AES-CBC', iv: fileiv}, deckey, encfile)\n    finishlist.push(nth)\n        if(instantsave == false) {\n            finaldecryptedfd.set(new Uint8Array(decryptedfiledata), parseInt(((1024 * 1024)*5)+1)*(nth))\n            if(finishlist.length == calchunk(originalfilesize)) {\n                var fileblob = URL.createObjectURL(new Blob([finaldecryptedfd], {type: filemime}))\n                finaldecryptedfd = new Uint8Array(0)\n                finishlist = []\n                currentlyrendered.push(JSON.stringify({id : element, blob :fileblob, name : filename, ext : extension, mime : filemime}))\n                document.querySelector(\".fileviewer\").classList.remove(\"show\")\n                document.querySelector(\".dark\").classList.add(\"show\")\n                ReactDOM.render (\n                    <Fileviewarea name={filename} ft={extension} src={fileblob} mime={filemime}/>,\n                    document.querySelector(\".dark\")\n                )\n                now = 0;\n                currentupload = 0;\n            }\n        }else if(instantsave == true) {\n            var newu8 = new Uint8Array(decryptedfiledata)\n            var preblob = new Blob([newu8])\n            bloblist[nth] = preblob\n            finalblob = new Blob(bloblist)\n            if(finalblob.size == originalfilesize) {\n                var finurl = URL.createObjectURL(new Blob([finalblob], {type: filemime}))\n                document.querySelector(\".fileviewer\").classList.remove(\"show\")\n                currentlyrendered.push(JSON.stringify({id : element, blob :finurl, name : filename, ext : extension, mime : filemime}))\n                document.querySelector(\".dark\").classList.add(\"show\")\n                ReactDOM.render (\n                    <Fileviewarea name={filename} ft={extension} src={finurl} mime={filemime}/>,\n                    document.querySelector(\".dark\")\n                )\n                //init\n                InitProg()\n            }\n        }  \n    }\n    function InitProg() {\n        finalblob = new Blob([])\n        bloblist = []\n        currentupload = 0;\n        now = 0;\n    }\n    var token = storedToken.slice(0, 200);\n    var xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://storage.petadrop.com/vf/\"+element+\"/\"+range, true)\n    xhr.setRequestHeader(\"X-XWC-act\", \"ahf\")\n    xhr.responseType = \"arraybuffer\";\n    var form = new FormData();\n    form.append('dir', element +\"|\"+ token +\"|\"+ range);\n    xhr.onreadystatechange = function() {\n        if (xhr.readyState === xhr.DONE) {\n            if (xhr.status === 200) {\n                processfile(xhr.response);\n            }else if (xhr.status == 0){\n                document.querySelector(\"#fileloadingtxt\").innerText= \" \";\n                document.querySelector(\".fileviewer\").classList.remove(\"show\")\n            }else {\n                document.querySelector(\"#fileloadingtxt\").innerText=\"oopsie i found an error: \"+xhr.status;\n            }\n        } \n            \n    };\n    var RanFunc = false\n    xhr.onprogress = function(e) {\n        if(stopped.length == 0) {\n            currentupload = e.loaded\n            document.querySelector(\"#fileloadingtxt\").innerText=  \"Downloaded \" + Math.round(((now+currentupload)/originalfilesize)*100) + \"%\"\n            if(RanFunc == false && (e.loaded/5242928)*100 > 10) {\n                viewfile(element, (((1024 * 1024)*5) + 48)*(nth+1)+\":\"+(((1024 * 1024)*5) + 48)*(nth+2), deckey, filename, filemime, nth+1, extension, instantsave, originalfilesize)\n                RanFunc = true\n            }\n        }else {\n            xhr.abort()\n            stopped =''\n            InitProg()\n        }\n        \n    }\n    xhr.onloadend = function() {\n        now = currentupload + now\n    }\n\n    xhr.send(form);\n}",{"ruleId":"156","severity":1,"message":"157","line":22,"column":12,"nodeType":"158","messageId":"159","endLine":22,"endColumn":14},{"ruleId":"156","severity":1,"message":"157","line":25,"column":18,"nodeType":"158","messageId":"159","endLine":25,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":27,"column":18,"nodeType":"158","messageId":"159","endLine":27,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":29,"column":18,"nodeType":"158","messageId":"159","endLine":29,"endColumn":20},{"ruleId":"160","severity":1,"message":"161","line":138,"column":9,"nodeType":"162","messageId":"163","endLine":138,"endColumn":18},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"156","severity":1,"message":"157","line":21,"column":38,"nodeType":"158","messageId":"159","endLine":21,"endColumn":40},{"ruleId":"156","severity":1,"message":"168","line":40,"column":55,"nodeType":"158","messageId":"159","endLine":40,"endColumn":57},{"ruleId":"156","severity":1,"message":"168","line":48,"column":55,"nodeType":"158","messageId":"159","endLine":48,"endColumn":57},{"ruleId":"160","severity":1,"message":"169","line":49,"column":25,"nodeType":"162","messageId":"163","endLine":49,"endColumn":26},{"ruleId":"156","severity":1,"message":"168","line":61,"column":55,"nodeType":"158","messageId":"159","endLine":61,"endColumn":57},{"ruleId":"156","severity":1,"message":"157","line":136,"column":40,"nodeType":"158","messageId":"159","endLine":136,"endColumn":42},{"ruleId":"156","severity":1,"message":"157","line":139,"column":46,"nodeType":"158","messageId":"159","endLine":139,"endColumn":48},{"ruleId":"156","severity":1,"message":"157","line":148,"column":20,"nodeType":"158","messageId":"159","endLine":148,"endColumn":22},{"ruleId":"156","severity":1,"message":"157","line":197,"column":26,"nodeType":"158","messageId":"159","endLine":197,"endColumn":28},{"ruleId":"156","severity":1,"message":"157","line":247,"column":51,"nodeType":"158","messageId":"159","endLine":247,"endColumn":53},{"ruleId":"156","severity":1,"message":"157","line":259,"column":20,"nodeType":"158","messageId":"159","endLine":259,"endColumn":22},{"ruleId":"156","severity":1,"message":"157","line":268,"column":29,"nodeType":"158","messageId":"159","endLine":268,"endColumn":31},{"ruleId":"156","severity":1,"message":"168","line":352,"column":51,"nodeType":"158","messageId":"159","endLine":352,"endColumn":53},{"ruleId":"156","severity":1,"message":"157","line":355,"column":50,"nodeType":"158","messageId":"159","endLine":355,"endColumn":52},{"ruleId":"170","severity":1,"message":"171","line":431,"column":38,"nodeType":"172","endLine":431,"endColumn":106},{"ruleId":"156","severity":1,"message":"157","line":439,"column":44,"nodeType":"158","messageId":"159","endLine":439,"endColumn":46},{"ruleId":"156","severity":1,"message":"157","line":441,"column":50,"nodeType":"158","messageId":"159","endLine":441,"endColumn":52},{"ruleId":"173","severity":1,"message":"174","line":446,"column":42,"nodeType":"175","messageId":"176","endLine":446,"endColumn":88},{"ruleId":"160","severity":1,"message":"177","line":471,"column":9,"nodeType":"162","messageId":"163","endLine":471,"endColumn":14},{"ruleId":"156","severity":1,"message":"168","line":476,"column":33,"nodeType":"158","messageId":"159","endLine":476,"endColumn":35},{"ruleId":"160","severity":1,"message":"169","line":482,"column":17,"nodeType":"162","messageId":"163","endLine":482,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":496,"column":48,"nodeType":"158","messageId":"159","endLine":496,"endColumn":50},{"ruleId":"160","severity":1,"message":"169","line":503,"column":17,"nodeType":"162","messageId":"163","endLine":503,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":505,"column":24,"nodeType":"158","messageId":"159","endLine":505,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":510,"column":51,"nodeType":"158","messageId":"159","endLine":510,"endColumn":53},{"ruleId":"156","severity":1,"message":"157","line":526,"column":31,"nodeType":"158","messageId":"159","endLine":526,"endColumn":33},{"ruleId":"156","severity":1,"message":"157","line":594,"column":37,"nodeType":"158","messageId":"159","endLine":594,"endColumn":39},{"ruleId":"156","severity":1,"message":"157","line":658,"column":55,"nodeType":"158","messageId":"159","endLine":658,"endColumn":57},{"ruleId":"173","severity":1,"message":"178","line":706,"column":46,"nodeType":"175","messageId":"176","endLine":706,"endColumn":116},{"ruleId":"156","severity":1,"message":"157","line":719,"column":24,"nodeType":"158","messageId":"159","endLine":719,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":723,"column":51,"nodeType":"158","messageId":"159","endLine":723,"endColumn":53},{"ruleId":"156","severity":1,"message":"157","line":25,"column":39,"nodeType":"158","messageId":"159","endLine":25,"endColumn":41},{"ruleId":"156","severity":1,"message":"168","line":41,"column":41,"nodeType":"158","messageId":"159","endLine":41,"endColumn":43},{"ruleId":"156","severity":1,"message":"168","line":43,"column":48,"nodeType":"158","messageId":"159","endLine":43,"endColumn":50},{"ruleId":"156","severity":1,"message":"168","line":45,"column":47,"nodeType":"158","messageId":"159","endLine":45,"endColumn":49},{"ruleId":"156","severity":1,"message":"168","line":47,"column":46,"nodeType":"158","messageId":"159","endLine":47,"endColumn":48},{"ruleId":"156","severity":1,"message":"168","line":49,"column":48,"nodeType":"158","messageId":"159","endLine":49,"endColumn":50},{"ruleId":"156","severity":1,"message":"157","line":57,"column":29,"nodeType":"158","messageId":"159","endLine":57,"endColumn":31},{"ruleId":"156","severity":1,"message":"157","line":59,"column":35,"nodeType":"158","messageId":"159","endLine":59,"endColumn":37},{"ruleId":"156","severity":1,"message":"168","line":61,"column":31,"nodeType":"158","messageId":"159","endLine":61,"endColumn":33},{"ruleId":"156","severity":1,"message":"157","line":65,"column":27,"nodeType":"158","messageId":"159","endLine":65,"endColumn":29},{"ruleId":"170","severity":1,"message":"171","line":103,"column":21,"nodeType":"172","endLine":103,"endColumn":147},{"ruleId":"179","severity":1,"message":"180","line":121,"column":5,"nodeType":"181","messageId":"182","endLine":123,"endColumn":6},{"ruleId":"156","severity":1,"message":"157","line":149,"column":18,"nodeType":"158","messageId":"159","endLine":149,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":151,"column":24,"nodeType":"158","messageId":"159","endLine":151,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":153,"column":24,"nodeType":"158","messageId":"159","endLine":153,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":155,"column":24,"nodeType":"158","messageId":"159","endLine":155,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":192,"column":18,"nodeType":"158","messageId":"159","endLine":192,"endColumn":20},{"ruleId":"156","severity":1,"message":"157","line":194,"column":24,"nodeType":"158","messageId":"159","endLine":194,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":196,"column":24,"nodeType":"158","messageId":"159","endLine":196,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":198,"column":24,"nodeType":"158","messageId":"159","endLine":198,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":200,"column":24,"nodeType":"158","messageId":"159","endLine":200,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":254,"column":36,"nodeType":"158","messageId":"159","endLine":254,"endColumn":38},{"ruleId":"156","severity":1,"message":"157","line":262,"column":31,"nodeType":"158","messageId":"159","endLine":262,"endColumn":33},{"ruleId":"156","severity":1,"message":"157","line":312,"column":56,"nodeType":"158","messageId":"159","endLine":312,"endColumn":58},{"ruleId":"156","severity":1,"message":"168","line":342,"column":30,"nodeType":"158","messageId":"159","endLine":342,"endColumn":32},{"ruleId":"156","severity":1,"message":"157","line":351,"column":30,"nodeType":"158","messageId":"159","endLine":351,"endColumn":32},{"ruleId":"170","severity":1,"message":"171","line":352,"column":24,"nodeType":"172","endLine":352,"endColumn":158},{"ruleId":"156","severity":1,"message":"157","line":353,"column":36,"nodeType":"158","messageId":"159","endLine":353,"endColumn":38},{"ruleId":"156","severity":1,"message":"157","line":355,"column":37,"nodeType":"158","messageId":"159","endLine":355,"endColumn":39},{"ruleId":"156","severity":1,"message":"157","line":417,"column":14,"nodeType":"158","messageId":"159","endLine":417,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":419,"column":20,"nodeType":"158","messageId":"159","endLine":419,"endColumn":22},{"ruleId":"156","severity":1,"message":"157","line":440,"column":29,"nodeType":"158","messageId":"159","endLine":440,"endColumn":31},{"ruleId":"156","severity":1,"message":"157","line":448,"column":14,"nodeType":"158","messageId":"159","endLine":448,"endColumn":16},{"ruleId":"156","severity":1,"message":"157","line":450,"column":20,"nodeType":"158","messageId":"159","endLine":450,"endColumn":22},{"ruleId":"156","severity":1,"message":"157","line":456,"column":29,"nodeType":"158","messageId":"159","endLine":456,"endColumn":31},{"ruleId":"156","severity":1,"message":"157","line":470,"column":46,"nodeType":"158","messageId":"159","endLine":470,"endColumn":48},{"ruleId":"170","severity":1,"message":"171","line":591,"column":17,"nodeType":"172","endLine":591,"endColumn":63},{"ruleId":"170","severity":1,"message":"171","line":601,"column":50,"nodeType":"172","endLine":601,"endColumn":100},{"ruleId":"156","severity":1,"message":"157","line":616,"column":28,"nodeType":"158","messageId":"159","endLine":616,"endColumn":30},{"ruleId":"156","severity":1,"message":"168","line":622,"column":27,"nodeType":"158","messageId":"159","endLine":622,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":658,"column":27,"nodeType":"158","messageId":"159","endLine":658,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":666,"column":29,"nodeType":"158","messageId":"159","endLine":666,"endColumn":31},{"ruleId":"156","severity":1,"message":"157","line":682,"column":35,"nodeType":"158","messageId":"159","endLine":682,"endColumn":37},{"ruleId":"160","severity":1,"message":"183","line":683,"column":17,"nodeType":"162","messageId":"163","endLine":683,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":685,"column":35,"nodeType":"158","messageId":"159","endLine":685,"endColumn":37},{"ruleId":"160","severity":1,"message":"183","line":686,"column":17,"nodeType":"162","messageId":"163","endLine":686,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":687,"column":35,"nodeType":"158","messageId":"159","endLine":687,"endColumn":37},{"ruleId":"160","severity":1,"message":"183","line":688,"column":17,"nodeType":"162","messageId":"163","endLine":688,"endColumn":21},{"ruleId":"184","severity":1,"message":"185","line":3,"column":17,"nodeType":"162","messageId":"186","endLine":3,"endColumn":23},{"ruleId":"184","severity":1,"message":"187","line":4,"column":9,"nodeType":"162","messageId":"186","endLine":4,"endColumn":19},{"ruleId":"156","severity":1,"message":"157","line":29,"column":13,"nodeType":"158","messageId":"159","endLine":29,"endColumn":15},{"ruleId":"156","severity":1,"message":"157","line":29,"column":50,"nodeType":"158","messageId":"159","endLine":29,"endColumn":52},{"ruleId":"184","severity":1,"message":"188","line":80,"column":9,"nodeType":"162","messageId":"186","endLine":80,"endColumn":14},{"ruleId":"156","severity":1,"message":"157","line":87,"column":75,"nodeType":"158","messageId":"159","endLine":87,"endColumn":77},{"ruleId":"156","severity":1,"message":"157","line":96,"column":13,"nodeType":"158","messageId":"159","endLine":96,"endColumn":15},{"ruleId":"156","severity":1,"message":"157","line":96,"column":50,"nodeType":"158","messageId":"159","endLine":96,"endColumn":52},{"ruleId":"189","severity":1,"message":"190","line":123,"column":27,"nodeType":"191","messageId":"192","endLine":123,"endColumn":45,"fix":"193"},{"ruleId":"160","severity":1,"message":"194","line":127,"column":21,"nodeType":"162","messageId":"163","endLine":127,"endColumn":24},{"ruleId":"156","severity":1,"message":"157","line":185,"column":48,"nodeType":"158","messageId":"159","endLine":185,"endColumn":50},{"ruleId":"156","severity":1,"message":"157","line":185,"column":80,"nodeType":"158","messageId":"159","endLine":185,"endColumn":82},{"ruleId":"189","severity":1,"message":"190","line":262,"column":51,"nodeType":"191","messageId":"192","endLine":262,"endColumn":69,"fix":"195"},{"ruleId":"156","severity":1,"message":"157","line":272,"column":56,"nodeType":"158","messageId":"159","endLine":272,"endColumn":58},{"ruleId":"156","severity":1,"message":"157","line":282,"column":67,"nodeType":"158","messageId":"159","endLine":282,"endColumn":69},{"ruleId":"156","severity":1,"message":"157","line":294,"column":70,"nodeType":"158","messageId":"159","endLine":294,"endColumn":72},{"ruleId":"196","severity":1,"message":"197","line":307,"column":90,"nodeType":"158","messageId":"198","endLine":307,"endColumn":91},{"ruleId":"189","severity":1,"message":"190","line":24,"column":23,"nodeType":"191","messageId":"192","endLine":24,"endColumn":41,"fix":"199"},{"ruleId":"160","severity":1,"message":"200","line":119,"column":9,"nodeType":"162","messageId":"163","endLine":119,"endColumn":11},{"ruleId":"160","severity":1,"message":"201","line":120,"column":9,"nodeType":"162","messageId":"163","endLine":120,"endColumn":13},{"ruleId":"156","severity":1,"message":"157","line":23,"column":32,"nodeType":"158","messageId":"159","endLine":23,"endColumn":34},{"ruleId":"156","severity":1,"message":"157","line":98,"column":84,"nodeType":"158","messageId":"159","endLine":98,"endColumn":86},{"ruleId":"156","severity":1,"message":"168","line":57,"column":40,"nodeType":"158","messageId":"159","endLine":57,"endColumn":42},{"ruleId":"156","severity":1,"message":"157","line":76,"column":15,"nodeType":"158","messageId":"159","endLine":76,"endColumn":17},{"ruleId":"160","severity":1,"message":"201","line":92,"column":9,"nodeType":"162","messageId":"163","endLine":92,"endColumn":13},{"ruleId":"160","severity":1,"message":"200","line":93,"column":9,"nodeType":"162","messageId":"163","endLine":93,"endColumn":11},{"ruleId":"156","severity":1,"message":"157","line":117,"column":27,"nodeType":"158","messageId":"159","endLine":117,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":145,"column":24,"nodeType":"158","messageId":"159","endLine":145,"endColumn":26},{"ruleId":"156","severity":1,"message":"157","line":147,"column":34,"nodeType":"158","messageId":"159","endLine":147,"endColumn":36},{"ruleId":"156","severity":1,"message":"157","line":161,"column":30,"nodeType":"158","messageId":"159","endLine":161,"endColumn":32},{"ruleId":"156","severity":1,"message":"157","line":166,"column":31,"nodeType":"158","messageId":"159","endLine":166,"endColumn":33},{"ruleId":"156","severity":1,"message":"157","line":197,"column":34,"nodeType":"158","messageId":"159","endLine":197,"endColumn":36},{"ruleId":"156","severity":1,"message":"157","line":208,"column":27,"nodeType":"158","messageId":"159","endLine":208,"endColumn":29},{"ruleId":"156","severity":1,"message":"157","line":211,"column":24,"nodeType":"158","messageId":"159","endLine":211,"endColumn":26},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'instances' is already defined.","Identifier","redeclared","no-native-reassign",["202"],"no-negated-in-lhs",["203"],"Expected '!==' and instead saw '!='.","'i' is already defined.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'nthJson'.","FunctionExpression","unsafeRefs","'list1' is already defined.","Function declared in a loop contains unsafe references to variable(s) 'i'.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'cont' is already defined.","no-unused-vars","'decode' is defined but never used.","unusedVar","'updatedata' is defined but never used.","'state' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"204","text":"205"},"'enc' is already defined.",{"range":"206","text":"205"},"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat",{"range":"207","text":"205"},"'iv' is already defined.","'salt' is already defined.","no-global-assign","no-unsafe-negation",[4502,4502],"()",[11501,11501],[874,874]]