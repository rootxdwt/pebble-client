[{"C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\index.js":"1","C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\comp.js":"2","C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\main.js":"3","C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\pfphandler.js":"4","C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\createlink.js":"5","C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\uploadhandler.js":"6","C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\newviewfile.js":"7"},{"size":6797,"mtime":1633687594133,"results":"8","hashOfConfig":"9"},{"size":37142,"mtime":1633614058165,"results":"10","hashOfConfig":"9"},{"size":32096,"mtime":1633610976282,"results":"11","hashOfConfig":"9"},{"size":6315,"mtime":1632122756462,"results":"12","hashOfConfig":"9"},{"size":9614,"mtime":1632139845441,"results":"13","hashOfConfig":"9"},{"size":16933,"mtime":1632125770413,"results":"14","hashOfConfig":"9"},{"size":9423,"mtime":1632126320174,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"50g6f2",{"filePath":"20","messages":"21","errorCount":0,"warningCount":59,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"19"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"28","usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":2,"source":"34","usedDeprecatedRules":"19"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\index.js",["38","39","40","41","42"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {Mobilenew, Lbtnclick,Alignicon,Dir} from \"./comp\";\r\nimport {openleftbar, getShared, mainMenu} from './main'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  </React.StrictMode>,\r\n  document.querySelector('#rt')\r\n);\r\n\r\nclass Leftmenubar extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.stle = {stroke: \"#fff\", fill: \"#fff\", color: \"#fff\"}\r\n\r\n    this.state ={files: this.stle, recent: {}, trash: {}, share: {}}\r\n  }\r\n  makeactive(ctx) {\r\n    this.setState({files: {}, recent: {}, trash: {}, share: {} })\r\n    if(ctx == \"files\") {\r\n      this.setState({files: this.stle})\r\n      mainMenu()\r\n    }else if(ctx == \"recent\") {\r\n      this.setState({recent: this.stle})\r\n    }else if(ctx == \"trash\") {\r\n      this.setState({trash: this.stle})\r\n    }else if(ctx == \"share\") {\r\n      this.setState({share: this.stle})\r\n      getShared()\r\n    }\r\n  }\r\n  render() {\r\n    return(\r\n      <>\r\n      <div className=\"leftmenubar\">\r\n      <div className=\"logocont\" onClick={openleftbar}>\r\n                <svg version=\"1.1\" id=\"desktop-logo\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\">\r\n                    <path id=\"logo-svg-path\" d=\"M584.1,307.5c0-1.4,0.1-2.8,0.1-4.2c0-68.5-55.5-124.1-124.1-124.1c-32.4,0-61.9,12.5-84,32.8\r\n                        c-22.7-26.1-56.2-42.7-93.6-42.7c-68.5,0-124.1,55.5-124.1,124.1c0,4.8,0.3,9.5,0.8,14.1c-2.5-0.2-5-0.3-7.6-0.3\r\n                        c-62.9,0-113.9,49.3-113.9,110.2c0,60.9,51,110.2,113.9,110.2h425.7c58.5,0,105.9-49.3,105.9-110.2\r\n                        C683.3,359,639.4,311.2,584.1,307.5z\" />\r\n                    <g>\r\n                        </g>\r\n                    <g>\r\n                        </g>\r\n                    <g>\r\n                        </g>\r\n                    <g>\r\n                        </g>\r\n                </svg>\r\n            </div>\r\n\r\n        \r\n        <div className=\"leftmenubtn\" id=\"mpagecont\" onClick={()=>this.makeactive(\"files\")} style={this.state.files}>\r\n                <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\"> \r\n                    <path id=\"default-black-svg-path\" style={this.state.files} d=\"M518,208.6H348.8c-10.1-24.9-34.6-42.6-63-42.6\r\n                        h-47.7c-37.3,0-67.9,30.6-67.9,67.9v24.7v23V441c0,27.5,22.5,50,50,50H518c27.5,0,50-22.5,50-50V258.6\r\n                        C568,231.1,545.5,208.6,518,208.6z\" />\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                </svg>\r\n                <b className=\"exparea\" id=\"folderico\">Files</b>\r\n            </div>\r\n            <div className=\"leftmenubtn\" onClick={()=>this.makeactive(\"recent\")} style={this.state.recent}>          \r\n                <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\">\r\n                    <circle id=\"default-black-svg-path\" style={this.state.recent} cx=\"392.9\" cy=\"261.9\" r=\"99.8\"/>\r\n                    <path id=\"default-black-svg-path\" style={this.state.recent} d=\"M393.5,361.8c-77.1,0-141.6,72.7-158.2,170.2\r\n                        h316.3C535.1,434.5,470.6,361.8,393.5,361.8z\"/>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                </svg>  \r\n                <b className=\"exparea\" id=\"gico\">Recent</b>\r\n            </div>\r\n            <div className=\"leftmenubtn\" onClick={()=>this.makeactive(\"trash\")} style={this.state.trash}>\r\n                <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" x=\"0px\"\r\n                    y=\"0px\" viewBox=\"0 0 720 720\">\r\n                    <path style={this.state.trash} id=\"default-black-svg-path\" d=\"M478.9,523.4h-215c-2.8,0-5-2.2-5-5V247.7\r\n                        c0-2.8,2.2-5,5-5h215c2.8,0,5,2.2,5,5v270.7C483.9,521.1,481.6,523.4,478.9,523.4z\"/>\r\n                    <line style={this.state.trash} id=\"default-black-svg-path\" x1=\"368.8\" y1=\"245.5\" x2=\"370.5\" y2=\"526.2\"/>\r\n                    <path style={this.state.trash} id=\"default-black-svg-path\" d=\"M527.9,219.4H211.4c-3,0-5.4-2.4-5.4-5.4v0\r\n                        c0-3,2.4-5.4,5.4-5.4h316.5c3,0,5.4,2.4,5.4,5.4v0C533.3,217,530.9,219.4,527.9,219.4z\"/>\r\n                    <path style={this.state.trash} id=\"default-black-svg-path\" d=\"M396.5,186.4H348c-2.8,0-5-2.2-5-5v-20.7\r\n                        c0-2.8,2.2-5,5-5h48.5c2.8,0,5,2.2,5,5v20.7C401.5,184.2,399.2,186.4,396.5,186.4z\"/>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                </svg>\r\n            <b className=\"exparea\" id=\"trashico\">Trash</b>\r\n        </div>\r\n        <div className=\"leftmenubtn\" onClick={()=>this.makeactive(\"share\")} style={this.state.share}>\r\n            <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" x=\"0px\"\r\n                 y=\"0px\" viewBox=\"0 0 720 720\">\r\n            <circle style={this.state.share} id=\"default-black-svg-path\" cx=\"243.6\" cy=\"338.7\" r=\"53.7\"/>\r\n            <line style={this.state.share} id=\"default-black-svg-path\" x1=\"280.4\" y1=\"298.2\" x2=\"394.1\" y2=\"229.8\"/>\r\n            <line style={this.state.share} id=\"default-black-svg-path\" x1=\"282.9\" y1=\"375.3\" x2=\"378.9\" y2=\"443.8\"/>\r\n            <circle style={this.state.share} id=\"default-black-svg-path\" cx=\"427\" cy=\"209.9\" r=\"53.7\"/>\r\n            <circle style={this.state.share} id=\"default-black-svg-path\" cx=\"413.1\" cy=\"468.2\" r=\"53.7\"/>\r\n            <g>\r\n            </g>\r\n            <g>\r\n            </g>\r\n            <g>\r\n            </g>\r\n            <g>\r\n            </g>\r\n            </svg>\r\n            <b className=\"exparea\" id=\"share\">Shared</b>\r\n        </div>\r\n      </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport function eclickdetector(aa, bb) {\r\n  if(aa === true) {\r\n    var instances = ['View', 'Delete', 'Share', 'Download', 'Change View', 'New'];\r\n  }else {\r\n    var instances = ['Change View', 'New'];\r\n  }\r\n  ReactDOM.render (\r\n    <Lbtnclick blank_instances={instances} id={bb}/>,\r\n    document.querySelector('#rbtn')\r\n  );\r\n}\r\nReactDOM.render (\r\n  <Alignicon />,\r\n  document.querySelector(\".aligniconArea\")\r\n)\r\nReactDOM.render (\r\n  [<Dir />],\r\n  document.querySelector('.dirArea')\r\n)\r\nexport async function mobilenew(prop, size, id, name) {\r\n  ReactDOM.render (\r\n    <Mobilenew propp={prop} size={size} id={id} name={name}/>,\r\n    document.querySelector('#mbtn')\r\n  )\r\n}\r\nReactDOM.render (\r\n  <Leftmenubar />,\r\n  document.querySelector('#rt')\r\n);",["43","44"],"C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\comp.js",["45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"import React from 'react';\r\nimport {openleftbar, arrange, pfpmenu, hideoverlaycont, showfilelabel, logout, alignby, delfile, gotofolder, rclick, createfolder, openSetting} from './main.js';\r\nimport {pfpinput} from './pfphandler.js';\r\nimport {rvf as newrvf, stopdownload} from './newviewfile'\r\nimport ReactDOM from 'react-dom';\r\nimport share from './createlink.js';\r\nimport copy from 'copy-text-to-clipboard';\r\nimport filename2prism from 'filename2prism';\r\nimport localforage from 'localforage';\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { arta } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nconst vars = require('./vars.json')\r\n\r\nexport class SharedArrangebar extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"file_align_control_bar\">\r\n                <div className=\"align_by_name\">\r\n                    <b>Name</b></div>\r\n                    <div className=\"align_not_name\">\r\n                                <div className=\"pre_revoke\">\r\n                                    <b>Revoke</b></div>\r\n                                    <div className=\"align_by_date\">\r\n                                    <b>Date</b></div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class SharedFileCont extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {revokestat: \"Revoke\", cls: \"\"}\r\n    }\r\n    async revoke() {\r\n        if(this.state.revokestat == \"Revoke\") {\r\n          this.setState({revokestat: \"Revoking..\"})\r\n          var form = new FormData()\r\n          form.append(\"target\", this.props.id)\r\n          var storedToken = await localforage.getItem(\"tk\")\r\n          var r = await fetch(\"https://petadrop.com/api/goshare\", {method: 'DELETE', body: form, headers:{'Authorization': storedToken.slice(0, 200)}})\r\n          if(r.ok) {\r\n              var jsn = await r.json()\r\n              if(jsn.Status == \"Success\") {\r\n                 this.setState({cls: \"hide\"})\r\n              }\r\n          }\r\n            \r\n        }\r\n        \r\n    }\r\n    render() {\r\n        var icon\r\n        var imgwidth\r\n        if(!this.props.src) {\r\n            var a = this.props.name.split(\".\")[this.props.name.split(\".\").length - 1];\r\n            var base = \"https://cdn.xdcs.me/static/main\"\r\n            if(vars.textfile.indexOf(a) != -1) {\r\n                icon = base+\"/tesxt.png\"\r\n            }else if(vars.imagefile.indexOf(a) != -1) {\r\n                icon = base+\"/img.png\"\r\n            }else if(vars.codefile.indexOf(a) != -1) {\r\n                icon = base+\"/code.png\"\r\n            }else if(vars.vidfile.indexOf(a) != -1) {\r\n                icon = base+\"/vid.png\"\r\n            }else if(vars.audiofile.indexOf(a) != -1){\r\n                icon = base+\"/mus.png\"\r\n            }else {\r\n                icon=base+\"/ssa.png\"\r\n            }\r\n        }else {\r\n            icon = this.props.src\r\n        }\r\n        if(this.props.state == \"row\") {\r\n            imgwidth = \"20px\"\r\n        }else if(this.props.state == \"\") {\r\n            imgwidth = \"50px\"\r\n            if(this.props.src != \"\") {\r\n                imgwidth = \"70px\"\r\n            }\r\n        }\r\n        if(this.props.typ == \"folder\") {\r\n            var inx = this.props.id.split(\" \")\r\n            return(\r\n                <>\r\n                <div className={'filecont ' + this.props.state +\" \"+ this.state.cls} id={this.props.id} onDoubleClick={()=>gotofolder(inx[0] +\" \"+ parseInt(parseInt(inx[1]) + 1), this.props.name)}>\r\n        \r\n                    <div className={'imagecontainer' + this.props.state}>\r\n                    <div className={'filecontmb ' + this.props.state} style={{borderRadius:\"5px\", background:\"none\"}}>\r\n                    <svg version=\"1.1\" x=\"0px\" y=\"0px\" className=\"foldericon\" viewBox=\"0 0 600 600\">\r\n                    <g>\r\n                        <path className=\"st0\" style={{fill:\"#FFFFFF\"}} d=\"M302.06,549.6c-64.67,0-129.35,0.1-194.02-0.03c-48.6-0.1-84.46-25.41-99.43-70.95\r\n                        c-3.19-9.7-4.39-20.45-4.43-30.73C3.86,357.02,3.76,266.16,4.07,175.3C4.32,105.16,58.61,51.11,128.85,50.43\r\n                        c19.51-0.19,39.02,0.02,58.53-0.05c42.78-0.15,77.05,17.23,103.2,50.66c3.81,4.87,7.56,6.26,13.36,6.24\r\n                        c63.87-0.18,127.74-0.1,191.61-0.12c37.49-0.02,67.42,14.66,88.27,46.15c9.59,14.48,15.6,30.58,15.64,48.17\r\n                        c0.22,83.64,1.14,167.3-0.09,250.92c-0.83,56.44-45.34,97-103.3,97.16C431.41,549.74,366.73,549.6,302.06,549.6z\"/>\r\n                    </g>\r\n                    </svg>\r\n\r\n                    </div>\r\n                    </div>\r\n                  <div className={'label ' + this.props.state}>\r\n                      <p className= {'text ' + this.props.state}>{this.props.name}</p>\r\n                      <div className='filedetail'>\r\n                      <p className={'text ' + this.props.state} id='dtl'>Shared</p>\r\n                          <p className={'text ' + this.props.state} id='dtl'><div className=\"revokebtn\">{this.state.revokestat}</div></p>\r\n                          <p className={'text ' + this.props.state} id='dtl'>{this.props.date}</p>\r\n                      </div>\r\n                  </div>\r\n                  <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"20px\" onClick={(e)=>rclick(e)} className={'fileoptiontdot ' + this.props.state}><circle cx=\"50\" cy=\"17.5\" r=\"9.92\"></circle><circle cx=\"50.21\" cy=\"49\" r=\"9.92\"></circle><circle cx=\"50\" cy=\"80.51\" r=\"9.92\"></circle></svg>\r\n                </div>   \r\n                </>\r\n              )\r\n        }else {\r\n            return(\r\n                <>\r\n                <div className={'filecont ' + this.props.state +\" \"+ this.state.cls} id={this.props.id} onDoubleClick={()=> newrvf(this.props.id, \"0:5242925\")} onDrag={(e)=>this.dragstrt(e)}>\r\n        \r\n                    <div className={'imagecontainer' + this.props.state}>\r\n                    <img className={'filecontmb ' + this.props.state} src={icon} width={imgwidth} height={imgwidth} style={{borderRadius:\"5px\"}}/>\r\n                    </div>\r\n                  <div className={'label ' + this.props.state}>\r\n                      <p className= {'text ' + this.props.state}>{this.props.name}</p>\r\n                      <div className='filedetail'>\r\n                      <p className={'text ' + this.props.state} id='dtl'>Shared</p>\r\n                      <p className={'text ' + this.props.state} id='dtl'><div className=\"revokebtn\" onClick={()=>this.revoke()}><b>{this.state.revokestat}</b></div></p>\r\n                          <p className={'text ' + this.props.state} id='dtl'>{this.props.date}</p>\r\n                      </div>\r\n                  </div>\r\n                  <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"20px\" onClick={(e)=>rclick(e)} className={'fileoptiontdot ' + this.props.state}><circle cx=\"50\" cy=\"17.5\" r=\"9.92\"></circle><circle cx=\"50.21\" cy=\"49\" r=\"9.92\"></circle><circle cx=\"50\" cy=\"80.51\" r=\"9.92\"></circle></svg>\r\n                </div>   \r\n                </>\r\n              )\r\n        }\r\n    }\r\n}\r\nexport class Filecont extends React.Component {\r\n    dragstrt(e) {\r\n        e.preventDefault();\r\n\r\n    }\r\n\r\n    singleclick(id) {\r\n\r\n        var inx = this.props.id.split(\" \")\r\n        if(id.split(\" \").length > 1 && window.innerWidth < 760) {\r\n            gotofolder(inx[0] +\" \"+ parseInt(parseInt(inx[1]) + 1), this.props.name)\r\n        }else if(id.split(\" \").length == 1 && window.innerWidth < 760) {\r\n            newrvf(this.props.id, \"0:5242925\")\r\n        }else {\r\n            for(var i=0;i<document.querySelectorAll(\".leftclicked\").length;i++) {\r\n                document.querySelectorAll(\".leftclicked\")[i].classList.remove(\"leftclicked\")\r\n            }\r\n            document.getElementById(id).classList.add(\"leftclicked\")\r\n        }\r\n        //document.querySelector(\"#\"+el).classList.add(\"leftclicked\")\r\n    }\r\n    render() {\r\n        var icon\r\n        var imgwidth\r\n        if(!this.props.src) {\r\n            var a = this.props.name.split(\".\")[this.props.name.split(\".\").length - 1];\r\n            var base = \"https://cdn.xdcs.me/static/main\"\r\n            if(vars.textfile.indexOf(a) != -1) {\r\n                icon = base+\"/tesxt.png\"\r\n            }else if(vars.imagefile.indexOf(a) != -1) {\r\n                icon = base+\"/img.png\"\r\n            }else if(vars.codefile.indexOf(a) != -1) {\r\n                icon = base+\"/code.png\"\r\n            }else if(vars.vidfile.indexOf(a) != -1) {\r\n                icon = base+\"/vid.png\"\r\n            }else if(vars.audiofile.indexOf(a) != -1){\r\n                icon = base+\"/mus.png\"\r\n            }else {\r\n                icon=base+\"/ssa.png\"\r\n            }\r\n        }else {\r\n            icon = this.props.src\r\n        }\r\n        if(this.props.state == \"row\") {\r\n            imgwidth = \"20px\"\r\n        }else if(this.props.state == \"\") {\r\n            imgwidth = \"50px\"\r\n            if(this.props.src != \"\") {\r\n                imgwidth = \"70px\"\r\n            }\r\n        }\r\n        if(this.props.typ == \"folder\") {\r\n            var inx = this.props.id.split(\" \")\r\n            return(\r\n                <>\r\n                <div className={'filecont ' + this.props.state} id={this.props.id} onClick={()=>this.singleclick(this.props.id)} onDoubleClick={()=>gotofolder(inx[0] +\" \"+ parseInt(parseInt(inx[1]) + 1), this.props.name)}>\r\n        \r\n                    <div className={'imagecontainer' + this.props.state}>\r\n                    <div className={'filecontmb ' + this.props.state} style={{borderRadius:\"5px\", background:\"none\"}}>\r\n                    <svg version=\"1.1\" x=\"0px\" y=\"0px\" className=\"foldericon\" viewBox=\"0 0 600 600\">\r\n                    <g>\r\n                        <path className=\"st0\" style={{fill:\"#FFFFFF\"}} d=\"M302.06,549.6c-64.67,0-129.35,0.1-194.02-0.03c-48.6-0.1-84.46-25.41-99.43-70.95\r\n                        c-3.19-9.7-4.39-20.45-4.43-30.73C3.86,357.02,3.76,266.16,4.07,175.3C4.32,105.16,58.61,51.11,128.85,50.43\r\n                        c19.51-0.19,39.02,0.02,58.53-0.05c42.78-0.15,77.05,17.23,103.2,50.66c3.81,4.87,7.56,6.26,13.36,6.24\r\n                        c63.87-0.18,127.74-0.1,191.61-0.12c37.49-0.02,67.42,14.66,88.27,46.15c9.59,14.48,15.6,30.58,15.64,48.17\r\n                        c0.22,83.64,1.14,167.3-0.09,250.92c-0.83,56.44-45.34,97-103.3,97.16C431.41,549.74,366.73,549.6,302.06,549.6z\"/>\r\n                    </g>\r\n                    </svg>\r\n\r\n                    </div>\r\n                    </div>\r\n                  <div className={'label ' + this.props.state}>\r\n                      <p className= {'text ' + this.props.state}>{this.props.name}</p>\r\n                      <div className='filedetail'>\r\n                          <p className={'text ' + this.props.state} id='dtl'>N/A</p>\r\n                          <p className={'text ' + this.props.state} id='dtl'>Folder</p>\r\n                          <p className={'text ' + this.props.state} id='dtl'>{this.props.date}</p>\r\n                      </div>\r\n                  </div>\r\n                  <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"20px\" onClick={(e)=>rclick(e)} className={'fileoptiontdot ' + this.props.state}><circle cx=\"50\" cy=\"17.5\" r=\"9.92\"></circle><circle cx=\"50.21\" cy=\"49\" r=\"9.92\"></circle><circle cx=\"50\" cy=\"80.51\" r=\"9.92\"></circle></svg>\r\n                </div>   \r\n                </>\r\n              )\r\n        }else {\r\n            return(\r\n                <>\r\n                <div className={'filecont ' + this.props.state} id={this.props.id} onClick={()=>this.singleclick(this.props.id)} onDoubleClick={()=> newrvf(this.props.id, \"0:5242925\")} onDrag={(e)=>this.dragstrt(e)}>\r\n        \r\n                    <div className={'imagecontainer' + this.props.state}>\r\n                    <img className={'filecontmb ' + this.props.state} src={icon} width={imgwidth} height={imgwidth} style={{borderRadius:\"5px\"}}/>\r\n                    </div>\r\n                  <div className={'label ' + this.props.state}>\r\n                      <p className= {'text ' + this.props.state}>{this.props.name}</p>\r\n                      <div className='filedetail'>\r\n                          <p className={'text ' + this.props.state} id='dtl'>{this.props.size}</p>\r\n                          <p className={'text ' + this.props.state} id='dtl'>{this.props.mime}</p>\r\n                          <p className={'text ' + this.props.state} id='dtl'>{this.props.date}</p>\r\n                      </div>\r\n                  </div>\r\n                  <svg version=\"1.1\" id=\"Layer_1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" width=\"20px\" onClick={(e)=>rclick(e)} className={'fileoptiontdot ' + this.props.state}><circle cx=\"50\" cy=\"17.5\" r=\"9.92\"></circle><circle cx=\"50.21\" cy=\"49\" r=\"9.92\"></circle><circle cx=\"50\" cy=\"80.51\" r=\"9.92\"></circle></svg>\r\n                </div>   \r\n                </>\r\n              )\r\n        }\r\n    }\r\n}\r\nexport class Arrangebar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {namearrow: \"\", sizearrow: \"\", typearrow: \"\", datearrow: \"\", flipped:false }\r\n        this.arrowpos = this.arrowpos.bind(this);\r\n    }\r\n    arrowpos(s) {\r\n        var styledom\r\n        if(this.state.flipped) {\r\n            styledom = {transform : \"rotate(180deg)\"}\r\n        }else {\r\n            styledom = {transform : \"rotate(0deg)\"}\r\n        }\r\n        var arrow = <svg className=\"alignarrow\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\" style={styledom}>\r\n        <path className=\"arrowpath\" d=\"M330.2,227.2L187.7,474.1c-10.6,18.3,2.6,41.3,23.8,41.3h285c21.2,0,34.4-22.9,23.8-41.3L377.8,227.2\r\n            C367.2,208.9,340.8,208.9,330.2,227.2z\"/>\r\n        </svg>\r\n            if(s == \"name\") {\r\n                this.setState({namearrow : arrow, sizearrow: \"\", typearrow: \"\", datearrow: \"\"})\r\n            }else if(s == \"size\") {\r\n                this.setState({namearrow : \"\", sizearrow: arrow, typearrow: \"\", datearrow: \"\"})\r\n            }else if(s == \"mime\") {\r\n                this.setState({namearrow : \"\", sizearrow: \"\", typearrow: arrow, datearrow: \"\"})\r\n            }else if(s == \"date\") {\r\n                this.setState({namearrow : \"\", sizearrow: \"\", typearrow: \"\", datearrow: arrow})\r\n            }\r\n            var direction;\r\n            if(this.state.flipped) {\r\n                this.setState({flipped:false})\r\n                direction = false;\r\n            }else {\r\n                this.setState({flipped:true})\r\n                direction = true;\r\n\r\n            }\r\n        alignby(s, direction)\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"file_align_control_bar\">\r\n                <div className=\"align_by_name\" onClick={()=>this.arrowpos(\"name\")}>\r\n                    <b>Name</b>{this.state.namearrow}</div>\r\n                    <div className=\"align_not_name\">\r\n                        <div className=\"align_by_size\" onClick={()=>this.arrowpos(\"size\")}>\r\n                            <b>Size</b>{this.state.sizearrow}</div>\r\n                            <div className=\"align_by_type\" onClick={()=>this.arrowpos(\"mime\")}>\r\n                                <b>Mime</b>{this.state.typearrow}</div>\r\n                                <div className=\"align_by_date\" onClick={()=>this.arrowpos(\"date\")}>\r\n                                    <b>Date</b>{this.state.datearrow}</div>\r\n                    </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport class Lbtnclick extends React.Component {\r\n    render() {\r\n        const binst = this.props.blank_instances;\r\n        var id = this.props.id\r\n        var a=[]\r\n        binst.forEach(function(e) {\r\n            if(e == \"View\") {\r\n                a.push(<div className=\"rclickmenubtn\" data-ctx={id}>{e}</div>)\r\n            }else if(e == \"Change View\") {\r\n                a.push(<div className=\"rclickmenubtn\" onClick={arrange}>{e}</div>)\r\n            }else if(e == \"Share\") {\r\n                a.push(<div className=\"rclickmenubtn\" onClick={()=> share(id)}>{e}</div>)\r\n            }else if(e == \"Delete\") {\r\n                a.push(<div className=\"rclickmenubtn\" onClick={()=> delfile(id)}>{e}</div>)\r\n            }else if(e == \"Download\") {\r\n                a.push(<div className=\"rclickmenubtn\">{e}</div>)\r\n            }\r\n            else {\r\n                a.push(<div className=\"rclickmenubtn\">{e}</div>)\r\n            }\r\n        })\r\n        return(\r\n                <div>\r\n                    {a}\r\n                </div>\r\n        );\r\n    }\r\n}\r\n  export class Overlay extends React.Component {\r\n    render() {\r\n        if(this.props.show) {\r\n            return (\r\n            <div className=\"overlayarea\" onClick={()=>remove()}></div>\r\n            )\r\n        }\r\n        else {\r\n            return(\r\n                <></>\r\n            )\r\n        }\r\n    }\r\n  }\r\n  function remove() {\r\n      document.querySelector(\".rclickmenu\").classList.add(\"hidden\")\r\n      ReactDOM.render(\r\n      <Overlay show ={false} />,\r\n      document.querySelector('#olay')\r\n      )\r\n  }\r\n  function sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n  export class Sharearea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.copylink = this.copylink.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.state = {copystat: \"Copy Link\", revokestat: \"Revoke\"}\r\n      }\r\n    copylink() {\r\n        copy(this.props.link)\r\n        this.setState({copystat: \"Copied!\"})\r\n        sleep(1000).then(()=> {this.setState({copystat: \"Copy Link\"})})\r\n      }\r\n      delete() {\r\n        ReactDOM.unmountComponentAtNode(document.querySelector('#sharearea'))\r\n      }\r\n      async revoke() {\r\n          if(this.state.revokestat == \"Revoke\") {\r\n            this.setState({revokestat: \"Revoking..\"})\r\n            var form = new FormData()\r\n            form.append(\"target\", this.props.id)\r\n            var storedToken = await localforage.getItem(\"tk\")\r\n            var r = await fetch(\"https://petadrop.com/api/goshare\", {method: 'DELETE', body: form, headers:{'Authorization': storedToken.slice(0, 200)}})\r\n            if(r.ok) {\r\n                var jsn = await r.json()\r\n                if(jsn.Status == \"Success\") {\r\n                    ReactDOM.unmountComponentAtNode(document.querySelector('#sharearea'))\r\n                }\r\n            }\r\n              \r\n          }\r\n          \r\n      }\r\n      render() {\r\n          var b\r\n          var a\r\n          if(this.props.loading) {\r\n                b = <><b>Loading Data</b></>\r\n                a=<></>\r\n          }else {\r\n                a= <b style={{color: \"#ad3636\"}} onClick={()=>this.revoke()}>{this.state.revokestat}</b>\r\n                b = <div className=\"linkshare_area\"><input type=\"text\" id=\"linkareacopy\"readOnly value={this.props.link}></input><b onClick={this.copylink}>{this.state.copystat}</b></div>\r\n          }\r\n          \r\n          return(\r\n              <div className=\"sharebackground\">\r\n                <div className=\"sharearea\">\r\n                  <div className=\"sharearea_header\"><b>Share This File</b>\r\n                  <div className=\"exit\" onClick={this.delete}><span></span><span></span></div>\r\n                  </div>\r\n                  <div className=\"sharearea_body\">{b}</div>\r\n                  <div className=\"sharearea_footer\">{a}</div>\r\n                </div>\r\n              </div>\r\n          )\r\n      }\r\n  }\r\n  export class Fileviewarea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {sc: -1};\r\n        this.delete = this.delete.bind(this);\r\n      }\r\n      imgload() {\r\n        if(document.querySelector(\".viewerimage\").width > window.innerWidth) {\r\n            this.setState({\r\n                sc: window.innerWidth\r\n              })\r\n        }else {\r\n            this.setState({\r\n                sc: document.querySelector(\".viewerimage\").width\r\n              })\r\n        }\r\n      }\r\n      listner(e) {\r\n          if(!(this.state.sc < 100) || (e.deltaY/-100) == 1) {\r\n            this.setState({\r\n                sc: ((this.state.sc) + 70*(e.deltaY/-100))\r\n              });\r\n          }\r\n      }\r\n      vidload() {\r\n        if(document.querySelector(\".viewervid\").videoWidth > window.innerWidth) {\r\n            this.setState({\r\n                sc: window.innerWidth\r\n              })\r\n        }else if((document.querySelector(\".viewervid\").videoWidth <= window.innerWidth)) {\r\n            this.setState({\r\n                sc: document.querySelector(\".viewervid\").videoWidth\r\n              })\r\n        }\r\n      }\r\n      delete(){\r\n          document.querySelector(\".dark\").classList.remove(\"show\")\r\n          document.querySelector(\"body\").classList.remove(\"ovx\")\r\n          this.setState({\r\n            sc: -1\r\n          })\r\n          ReactDOM.unmountComponentAtNode(document.querySelector('.dark'))\r\n          document.querySelector(\".fileviewer\").classList.remove(\"show\")\r\n          ReactDOM.unmountComponentAtNode(document.querySelector('.fileviewer'))\r\n      };\r\n      render() {\r\n          var type\r\n          var codetype = filename2prism(this.props.name)\r\n          if(codetype.length != 0) {\r\n              var xhr = new XMLHttpRequest();\r\n              xhr.open( \"GET\",this.props.src, false)\r\n              xhr.send()\r\n            type = <SyntaxHighlighter style={arta} language={codetype[0].toLowerCase()} showLineNumbers={true} lineNumberContainerStyle={{marginLeft:\"10px\"}}customStyle={{position: \"absolute\",bottom: \"0\", display: \"block\", padding: \"0\",background: \"transparent\",marginBottom:\"0\", color: \"rgb(170, 170, 170)\", height: \"calc(100% - 50px)\", width: \"100vw\"}}>{xhr.responseText}</SyntaxHighlighter>\r\n            if(xhr.response.length > 102400) {\r\n                type = <div className=\"noprevdownload\"><div className=\"downloadlabel\">This File Is Too Big For Code Preview</div><a className=\"downloadbtn\" href={this.props.src} download={this.props.name}>Download</a></div>\r\n            }\r\n          }else {\r\n            if(this.props.ft == \"img\") {\r\n                type = <img className=\"viewerimage\"src={this.props.src} width={this.state.sc} onWheel={(e)=>{this.listner(e)}} onLoad={()=>{this.imgload()}}></img>\r\n            }else if(this.props.ft == \"vid\") {\r\n              type = <video width={this.state.sc} className = \"viewervid\" onLoadedMetadata={()=>{this.vidload()}} controls><source src={this.props.src} type={this.props.mime}/></video>\r\n            }else if (this.props.ft == \"audio\"){\r\n              type = <audio controls><source src={this.props.src} type={this.props.mime} /></audio>\r\n            }else{\r\n              type = <div className=\"noprevdownload\"><div className=\"downloadlabel\">No Preview Is Avalible For This Type Of File</div><a className=\"downloadbtn\" href={this.props.src} download={this.props.name}>Download</a></div>\r\n              //<iframe src={this.props.src} title={this.props.name} frameborder=\"0\" border=\"0\" cellspacing=\"0\"></iframe>\r\n            }\r\n          }\r\n          \r\n            return(\r\n                <div className=\"fileviewarea\">\r\n                    <div className=\"fileviewheader\">\r\n                        <div className=\"fileviewfilenamelabel\">{this.props.name}</div>\r\n                        <div className=\"exit\" onClick={this.delete}>\r\n                            <span></span><span></span>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"filearea\">\r\n                            {type}\r\n                        </div>\r\n                </div>\r\n                )\r\n      }\r\n}\r\n  export class Defaultxhrloading extends React.Component {\r\n      render() {\r\n          return (\r\n              <div className=\"xhrloading\">\r\n                  <div class=\"xhrexit exit\" onClick={()=>stopdownload(1, 1)}><span></span><span></span></div>\r\n                  <svg version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\" width=\"80\">\r\n            <path id=\"loadwrapperloading\" d=\"M584.1,307.5c0-1.4,0.1-2.8,0.1-4.2c0-68.5-55.5-124.1-124.1-124.1c-32.4,0-61.9,12.5-84,32.8 c-22.7-26.1-56.2-42.7-93.6-42.7c-68.5,0-124.1,55.5-124.1,124.1c0,4.8,0.3,9.5,0.8,14.1c-2.5-0.2-5-0.3-7.6-0.3 c-62.9,0-113.9,49.3-113.9,110.2c0,60.9,51,110.2,113.9,110.2h425.7c58.5,0,105.9-49.3,105.9-110.2 C683.3,359,639.4,311.2,584.1,307.5z\">\r\n        </path><g></g><g></g><g></g><g></g></svg>\r\n        <b id=\"fileloadingtxt\">Loading File</b>\r\n              </div>\r\n          )\r\n      }\r\n  }\r\n  export class Searchico extends React.Component {\r\n      render() {\r\n            return(\r\n              <div id=\"sc\">\r\n            <div id=\"searchcont\">\r\n                <svg id=\"search\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\">\r\n                    <circle className=\"grey-svg-path\" cx=\"315.6\" cy=\"287.4\" r=\"141.8\"/>\r\n                    <line className=\"grey-svg-path\" x1=\"385.9\" y1=\"410.6\" x2=\"494.8\" y2=\"562.1\"/>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        <input type=\"text\" id=\"pc-search-text\"/>\r\n              </div>\r\n          )\r\n      }\r\n  }\r\n  export class Alignicon extends React.Component {\r\n      componentDidMount() {\r\n        var c = localStorage.getItem(\"arrange\")\r\n        if(c == 1) {\r\n            this.setState({grid: 'none', row: ''})\r\n        }else if(c == 0) {\r\n            this.setState({grid: '', row: 'none'})\r\n        } \r\n      }\r\n      constructor(props) {\r\n          super(props)\r\n          this.state = {style : \"rotate(0deg)\"}\r\n          this.state = {alignBy : \"Name\", grid: 'none', row: ''}\r\n          this.arrangeElem = this.arrangeElem.bind(this);\r\n      }\r\n      changetyp() {\r\n          var lst = [\"Name\", \"Size\", \"Mime\", \"Date\"]\r\n          var n = lst.indexOf(this.state.alignBy)+ 1\r\n          if(!(n > 3)) {\r\n            this.setState({alignBy: lst[n]})\r\n          }else {\r\n            this.setState({alignBy: lst[0]})\r\n          }\r\n          alignby(this.state.alignBy.toLowerCase(), this.statetoBool())\r\n      }\r\n      statetoBool() {\r\n        if(this.state.style == \"rotate(180deg)\") {\r\n            return true\r\n          }else {\r\n            return false\r\n          }\r\n      }\r\n      arrangeElem() {\r\n        var c = localStorage.getItem(\"arrange\")\r\n        if(c == 0) {\r\n            this.setState({grid: 'none', row: ''})\r\n        }else if(c == 1) {\r\n            this.setState({grid: '', row: 'none'})\r\n        } \r\n        arrange()\r\n      }\r\n      changeasc() {\r\n        if(this.state.style == \"rotate(180deg)\") {\r\n            this.setState({style: \"rotate(0deg)\"})\r\n          }else {\r\n            this.setState({style: \"rotate(180deg)\"})\r\n          }\r\n          alignby(this.state.alignBy.toLowerCase(), this.statetoBool())\r\n      }\r\n      render() {\r\n        var arrangeControl\r\n        var real = <div className=\"alignMenu\"><b onClick={()=>this.changetyp()}>{this.state.alignBy}</b><svg className=\"alignarrow\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\" style={{transform: this.state.style}} onClick={()=>this.changeasc()}>\r\n        <path className=\"arrowpath\" d=\"M330.2,227.2L187.7,474.1c-10.6,18.3,2.6,41.3,23.8,41.3h285c21.2,0,34.4-22.9,23.8-41.3L377.8,227.2\r\n            C367.2,208.9,340.8,208.9,330.2,227.2z\"/>\r\n        </svg></div>\r\n        if(window.innerWidth > 760) {\r\n          if(localStorage.getItem(\"arrange\") == 0) {\r\n              arrangeControl = real\r\n          }\r\n        }else {\r\n            arrangeControl = real\r\n        }\r\n          return(\r\n            <>\r\n            {arrangeControl}\r\n            <div className=\"alignico\" onClick={this.arrangeElem}>\r\n            <div id=\"grid\" style={{display: this.state.grid}}>\r\n                <svg version=\"1.1\" id=\"global-align-icon\" x=\"0px\"\r\n                    y=\"0px\" viewBox=\"0 0 720 720\">\r\n                <path id=\"default-white-svg-path\" d=\"M499.8,279h-97.4c-17.6,0-32-14.4-32-32v-97.4\r\n                    c0-17.6,14.4-32,32-32h97.4c17.6,0,32,14.4,32,32V247C531.8,264.6,517.4,279,499.8,279z\"/>\r\n                <path id=\"default-white-svg-path\" d=\"M269.8,279h-97.4c-17.6,0-32-14.4-32-32v-97.4\r\n                    c0-17.6,14.4-32,32-32h97.4c17.6,0,32,14.4,32,32V247C301.8,264.6,287.4,279,269.8,279z\"/>\r\n                <path id=\"default-white-svg-path\" d=\"M269.8,510.9h-97.4c-17.6,0-32-14.4-32-32v-97.4\r\n                    c0-17.6,14.4-32,32-32h97.4c17.6,0,32,14.4,32,32v97.4C301.8,496.5,287.4,510.9,269.8,510.9z\"/>\r\n                <path id=\"default-white-svg-path\" d=\"M499.8,510.9h-97.4c-17.6,0-32-14.4-32-32v-97.4\r\n                    c0-17.6,14.4-32,32-32h97.4c17.6,0,32,14.4,32,32v97.4C531.8,496.5,517.4,510.9,499.8,510.9z\"/>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n            </svg>\r\n            </div>\r\n            <div id=\"row\" style={{display: this.state.row}}>\r\n                    <svg version=\"1.1\" id=\"global-align-icon\" x=\"0px\"\r\n                        y=\"0px\" viewBox=\"0 0 720 720\">\r\n                        <path id=\"default-white-svg-path\" d=\"M499.8,279H172.4c-17.6,0-32-14.4-32-32v-97.4\r\n                        c0-17.6,14.4-32,32-32h327.4c17.6,0,32,14.4,32,32V247C531.8,264.6,517.4,279,499.8,279z\"/>\r\n                        <path id=\"default-white-svg-path\" d=\"M499.8,510.9H172.4c-17.6,0-32-14.4-32-32v-97.4\r\n                            c0-17.6,14.4-32,32-32h327.4c17.6,0,32,14.4,32,32v97.4C531.8,496.5,517.4,510.9,499.8,510.9z\"/>\r\n                        <g>\r\n                        </g>\r\n                        <g>\r\n                        </g>\r\n                        <g>\r\n                        </g>\r\n                        <g>\r\n                        </g>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n            </>\r\n          );\r\n      }\r\n  }\r\n  export class Dir extends React.Component {\r\n      render() {\r\n          return(\r\n              <>\r\n              <p className=\"dirbold\"><b onClick={()=>gotofolder(\"/ 0\")}>My Files</b><div>{this.props.a}</div></p>\r\n              </>\r\n\r\n          )\r\n      }\r\n  }\r\n  export class Mobilemenubtn extends React.Component {\r\n      render() {\r\n          return(\r\n            <div id=\"mobile-menu-btn\" onClick={openleftbar}>\r\n                <svg version=\"1.1\" id=\"mobile-header-logo\" x=\"0px\"\r\n                    y=\"0px\" viewBox=\"0 0 720 720\">\r\n                    <path id=\"logo-svg-path\" d=\"M584.1,307.5c0-1.4,0.1-2.8,0.1-4.2c0-68.5-55.5-124.1-124.1-124.1c-32.4,0-61.9,12.5-84,32.8\r\n                        c-22.7-26.1-56.2-42.7-93.6-42.7c-68.5,0-124.1,55.5-124.1,124.1c0,4.8,0.3,9.5,0.8,14.1c-2.5-0.2-5-0.3-7.6-0.3\r\n                        c-62.9,0-113.9,49.3-113.9,110.2c0,60.9,51,110.2,113.9,110.2h425.7c58.5,0,105.9-49.3,105.9-110.2\r\n                        C683.3,359,639.4,311.2,584.1,307.5z\"/>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                    <g>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n          );\r\n      }\r\n  }\r\n  export class Group extends React.Component {\r\n      render() {\r\n          return(\r\n              <>\r\n                <div id=\"groupncont\"></div>              \r\n              </>\r\n              //                <input type=\"file\" className=\"fileselector\" onChange={()=>fileadded(0)}></input>\r\n\r\n                \r\n          );\r\n      }\r\n  }\r\n  export class Button extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"header_new_button\" onClick={()=>showfilelabel()}>\r\n                            <svg version=\"1.1\" id=\"desktop-leftmenubar-button\" \r\n                x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\" >\r\n            <path id=\"default-black-svg-path\" className=\"st0\" d=\"M454,314.9H284.8c-10.1-24.9-34.6-42.6-63-42.6h-47.7c-37.3,0-67.9,30.6-67.9,67.9\r\n                v24.7v23v159.4c0,27.5,22.5,50,50,50H454c27.5,0,50-22.5,50-50V364.9C504,337.4,481.5,314.9,454,314.9z\"/>\r\n            <g>\r\n                <path id=\"default-g\" d=\"M555.9,202.1v-53.9c0-4.7,1.7-8.8,5.2-12.1c3.5-3.3,7.7-5,12.7-5c4.7,0,8.8,1.7,12.1,5s5,7.4,5,12.1v53.9h53.9\r\n                    c4.9,0,9.1,1.7,12.6,5.1c3.6,3.4,5.3,7.6,5.3,12.4c0,4.9-1.8,9-5.3,12.4c-3.6,3.4-7.8,5.1-12.6,5.1h-53.5v53.9\r\n                    c0,5-1.8,9.3-5.3,12.7c-3.6,3.5-7.8,5.2-12.6,5.2c-4.9,0-9-1.7-12.4-5.2c-3.4-3.5-5.1-7.7-5.1-12.7v-53.9H502\r\n                    c-4.7,0-8.8-1.7-12.3-5.1c-3.5-3.4-5.2-7.6-5.2-12.4c0-4.7,1.7-8.8,5.2-12.3c3.5-3.5,7.6-5.2,12.3-5.2H555.9z\"/>\r\n            </g>\r\n            </svg><b>New</b>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport class Pfp extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"pfp\" onClick={pfpmenu}>\r\n                <img className=\"pfpimg\" src=\"./loading.gif\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport class Lpfpmenu extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"lpfpmenu\">\r\n                <div className=\"menupfp\">\r\n                    <label htmlFor=\"pfpuploader\"><img className=\"pfpimg menu\" src=\"./loading.gif\"/></label>\r\n                </div>\r\n                <input type=\"file\" id=\"pfpuploader\" onChange={()=>pfpinput()}/>\r\n                <b>{this.props.userid}</b>\r\n                <div>\r\n                    <small id=\"settingbtn\" onClick={()=>openSetting()}>Setting </small>|<small id=\"logoutbtn\" onClick={logout}> Logout</small>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport class Uploadnotify extends React.Component {\r\n    render() {\r\n        var cont\r\n        if(this.props.size == \"\" || this.props.size== null) {\r\n            cont = this.props.name\r\n        }else {\r\n            cont=this.props.name + \" | \"+ this.props.size\r\n        }\r\n        var progress\r\n        if(this.props.act != \"pfp\") {\r\n            progress = <progress id={this.props.progid} value=\"0\" max=\"100\" className=\"progrezz\"><div></div></progress>\r\n        }\r\n        return (\r\n            <div className=\"uploadnotify show\">\r\n            <div className=\"percetage\">\r\n                <div id=\"plabelarea\">\r\n                    <p className=\"uploaderlabel\">{cont}</p>\r\n                    {progress}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport class Lmenuact extends React.Component {\r\n    render() {\r\n        var aa = this.props.html\r\n        return(\r\n            {aa}\r\n        );\r\n    }\r\n}\r\nexport class Overlayarr extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"overlayarea hide\" onClick={()=>hideoverlaycont()}></div>\r\n        )\r\n    }\r\n}\r\nexport class Mobilenew extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {act: \"\", act2: \"\"}\r\n    }\r\n    clickedbtn() {\r\n        if(this.state.act == \"\") {\r\n            this.setState({act: \" focused\", act2: \" focused\"})\r\n        }else {\r\n            this.setState({act: \"\", act2: \"\"})\r\n        }\r\n\r\n    }\r\n    render() {\r\n        if(this.props.propp == \"bsc\") {\r\n            var cont = <><div className={\"mobile-uploadbtn\"+this.state.act} onClick={()=>this.clickedbtn()}>＋</div><div className={\"mobile-upload-options\"+ this.state.act2}>\r\n            <label htmlFor=\"fileinput\" className=\"mobile-upload-options-label\">\r\n            <svg id=\"mobile-option-btn\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\" >\r\n            <path id=\"default-black-svg-path\" d=\"M286.8,244.8h-85.9c-9.9,0-19.4,3.7-26.2,10.3c-7,6.6-10.9,15.7-10.9,25.2v284.1c0,9.5,3.9,18.4,10.9,25.2\r\n\tc7,6.6,16.5,10.3,26.2,10.3h198.2c9.9,0,19.4-3.7,26.2-10.3c7-6.6,10.9-15.7,10.9-25.2V362.1c0-9.5-3.9-18.4-10.9-25.2l-112.1-81.8\r\n\tC306.2,248.5,296.7,244.8,286.8,244.8L286.8,244.8z\"/>\r\n            </svg>\r\n            </label>\r\n            <div className=\"mobile-upload-options-label\" onClick={()=>createfolder()}>\r\n            <svg id=\"mobile-option-btn\"  className=\"st0\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 720 720\" >\r\n            <path id=\"default-black-svg-path\" d=\"M454,314.9H284.8c-10.1-24.9-34.6-42.6-63-42.6h-47.7c-37.3,0-67.9,30.6-67.9,67.9\r\n            v24.7v23v159.4c0,27.5,22.5,50,50,50H454c27.5,0,50-22.5,50-50V364.9C504,337.4,481.5,314.9,454,314.9z\"/></svg>\r\n            </div>\r\n            </div>\r\n            </>\r\n        }else if(this.props.propp == \"upchk\") {\r\n            var cont = <div className=\"mobile-uploadbtn uploading\"><p className=\"uploaderlabel\">{this.props.name + \" | \"+ this.props.size}</p>\r\n            <progress id={this.props.id} value=\"0\" max=\"100\" className=\"progrezz\"><div></div></progress></div>\r\n        }else if(this.props.propp == \"preup\") {\r\n            var cont = <div className=\"mobile-uploadbtn uploading\"><p className=\"uploaderlabel\">Preparing..</p></div>\r\n        }else if(this.props.propp == \"changepfp\") {\r\n            var cont = <div className=\"mobile-uploadbtn uploading\"><p className=\"uploaderlabel\">Changing Profile Picture..</p></div>\r\n        }\r\n        return(\r\n            <>\r\n            {cont}\r\n            </>\r\n        )\r\n    }\r\n}","C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\main.js",["104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],"//(c) 2021 xdwhat\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {eclickdetector} from './index'\r\nimport {processpfp} from './pfphandler'\r\nimport {mobilenew} from './index'\r\nimport {Filecont, Overlay, Arrangebar, Dir, Alignicon, Mobilemenubtn, Group, Button, Searchico, Pfp, Lpfpmenu, SharedArrangebar, SharedFileCont} from './comp'\r\nimport { encode, decode } from 'base64-arraybuffer';\r\nimport localforage from 'localforage';\r\nimport {uploadworker} from './uploadhandler.js'\r\nimport timeZoneConverter from 'time-zone-converter'\r\n\r\nfunction convert_timezone(time) {\r\n    var offset = new Date().getTimezoneOffset();\r\n    var f = timeZoneConverter(time, offset/60, -2, 'YYYY/MM/DD HH:mm')\r\n    return f\r\n}\r\nexport function pfpmenu() {\r\n    document.querySelector('.lpfpmenu').classList.toggle('active');\r\n}\r\nif(!(localStorage.getItem('arrange') == 1)) {\r\n    localStorage.setItem('arrange', 0)\r\n}\r\nlocalStorage.removeItem(\"tk\")\r\n\r\nexport function rclick(e) {\r\n    e.stopPropagation();\r\n    var main = document.querySelectorAll('.filecont');\r\n    if(window.innerWidth < 760) {\r\n        document.querySelector('.rclickmenu').classList.remove('hidden');\r\n        eclickdetector()\r\n        ReactDOM.render(\r\n            <Overlay show={true}/>,\r\n            document.querySelector('#olay')\r\n        )\r\n        main.forEach(element => {\r\n        var clickelem = element.contains(e.target);\r\n        if(clickelem) {\r\n            eclickdetector(true, element.id)\r\n            if(document.querySelector(\".leftclicked\") != undefined) {\r\n                for(var i=0;i<document.querySelectorAll(\".leftclicked\").length;i++) {\r\n                    document.querySelectorAll(\".leftclicked\")[i].classList.remove(\"leftclicked\")\r\n                }\r\n            }\r\n            element.classList.add(\"leftclicked\")\r\n        }else if(clickelem === false) {\r\n            document.querySelector('.rclickmenu').style=\"\";\r\n            if(document.querySelector(\".leftclicked\") != undefined) {\r\n                for(var i=0;i<document.querySelectorAll(\".leftclicked\").length;i++) {\r\n                    document.querySelectorAll(\".leftclicked\")[i].classList.remove(\"leftclicked\")\r\n                }\r\n            }\r\n        }\r\n        });\r\n    }else if(window.innerWidth > 760){\r\n        eclickdetector()\r\n        main.forEach(element => {\r\n        var clickelem = element.contains(e.target);\r\n        if(clickelem) {\r\n            eclickdetector(true, element.id)\r\n            if(document.querySelector(\".leftclicked\") != undefined) {\r\n                for(var i=0;i<document.querySelectorAll(\".leftclicked\").length;i++) {\r\n                    document.querySelectorAll(\".leftclicked\")[i].classList.remove(\"leftclicked\")\r\n                }\r\n            }\r\n            element.classList.add(\"leftclicked\")\r\n        }\r\n\r\n        })\r\n        if(e.pageX+ 155 > cont.offsetWidth) {\r\n            document.querySelector('.rclickmenu').style='top:'+e.pageY+'px;left:'+(cont.offsetWidth-165)+'px;';\r\n            document.querySelector('.rclickmenu').classList.remove('hidden');\r\n        }\r\n        if(e.pageY-45 > cont.scrollHeight) {\r\n            document.querySelector('.rclickmenu').style='top:'+(cont.scrollHeight+45)+'px;left:'+e.pageX+'px;';\r\n            document.querySelector('.rclickmenu').classList.remove('hidden');\r\n        }\r\n        if(e.pageY-45 > cont.scrollHeight && e.pageX+ 100 > cont.offsetWidth) {\r\n            document.querySelector('.rclickmenu').style='top:'+(cont.scrollHeight+45)+'px;left:'+(cont.offsetWidth-165)+'px;';\r\n            document.querySelector('.rclickmenu').classList.remove('hidden');\r\n        }\r\n        else if(e.pageX+ 155 < cont.offsetWidth && e.pageY-45 < cont.scrollHeight) {\r\n            document.querySelector('.rclickmenu').style='top:'+e.pageY+'px;left:'+e.pageX+'px;';\r\n            document.querySelector('.rclickmenu').classList.remove('hidden');\r\n        }\r\n    }\r\n}\r\nexport function showfilelabel() {\r\n    document.querySelector('.fileoptions-pc').classList.toggle('hide');\r\n}\r\nexport function hideoverlaycont() {\r\n        document.querySelector('.overlayarea').classList.add('hide')\r\n    \r\n}\r\n\r\nexport function calcsize(length) {\r\n    var fs\r\n    if(typeof length == \"number\") {\r\n        if(1024 >= length) {\r\n            fs = Math.round(length) + \"B\"\r\n    \r\n        }else if(length > 1024 && length < 1024*1024) {\r\n            fs = Math.round(length/1024) + \"KB\"\r\n    \r\n        }else if(length >= 1024*1024 && length < 1024*1024*1024) {\r\n            fs = Math.round(length/(1024*1024)) + \"MB\"\r\n    \r\n        }else if(length >= 1024*1024*1024 && length < 1024*1024*1024*1024) {\r\n            fs = Math.round(length/(1024*1024*1024)) + \"GB\"\r\n            \r\n        }\r\n    }else {\r\n        fs = \"Unknown\"\r\n    }\r\n    return fs\r\n}\r\n\r\n//fix pls pls\r\nexport function openleftbar() {\r\n    document.querySelector('.leftmenubar').classList.remove('act');\r\n    document.querySelector('.leftmenubar').classList.toggle('opened');\r\n    document.querySelector('#folderico').classList.toggle('show');\r\n    document.querySelector('#trashico').classList.toggle('show');\r\n    document.querySelector('#share').classList.toggle('show');\r\n    document.querySelector('#gico').classList.toggle('show');\r\n}\r\n\r\nexport function arrange() {\r\n\r\n    ReactDOM.render (\r\n        <Alignicon />,\r\n        document.querySelector(\".aligniconArea\")\r\n    )\r\n    var state;\r\n    var elem2=[]\r\n    if(localStorage.getItem(\"arrange\") == 1) {\r\n        localStorage.setItem(\"arrange\", 0);\r\n        state=\"\"\r\n    }else if(localStorage.getItem(\"arrange\") == 0) {\r\n        localStorage.setItem(\"arrange\", 1);\r\n        state = \"row\"\r\n        elem2.unshift(<Arrangebar />)\r\n    }\r\n    var target = curdir\r\n    for(var i=0;i<elem.length;i++) {\r\n        var ea2 = elem[i]\r\n        elem[i].state = state\r\n        if(ea2.dir == target) {\r\n            elem2.push(<Filecont name={ifempty(ea2.name)} size={ifempty(calcsize(ea2.size))} mime={ifempty(ea2.mime)} date={ea2.date} id={ea2.id} state={state} typ={ea2.typ} src={ea2.src}/>)\r\n        }\r\n    }\r\n    ReactDOM.render(\r\n        elem2,\r\n        document.querySelector(\".mainarea\")\r\n    )\r\n    \r\n}\r\n\r\n    \r\n    export async function getud() {\r\n        var storedToken = await localforage.getItem(\"tk\")\r\n        if(storedToken == null) {\r\n            document.location.href=\"https://petadrop.com/\";\r\n        }else {\r\n            var resp = await fetch(\"https://petadrop.com/api/udfetch\", {method: 'POST', headers:{'Authorization': storedToken.slice(0, 200), 'X-XWC-act': 'ludf'}})\r\n            if(!resp.ok) {\r\n                console.error(resp.status)\r\n            }\r\n            var json = await resp.json()\r\n            callback(json);\r\n        }\r\n\r\n    }\r\n    \r\n    var curdir = \"/ 0\"\r\n    \r\n    export {curdir}\r\n    \r\n    getud()\r\n    \r\n    var curtime\r\n    function sortResults(prop, asc) {\r\n        elem.sort(function(a, b) {\r\n            if (asc) {\r\n                return (a[prop] > b[prop]) ? 1 : ((a[prop] < b[prop]) ? -1 : 0);\r\n            } else {\r\n                return (b[prop] > a[prop]) ? 1 : ((b[prop] < a[prop]) ? -1 : 0);\r\n            }\r\n        });\r\n    }\r\n    \r\n    export function alignby(a, b) {\r\n        sortResults(a, b)\r\n        rerender()\r\n    }\r\n    export function ifempty(string) {\r\n        if(string.length == 0) {\r\n            return \"unknown\"\r\n        }else {\r\n            return string\r\n        }\r\n    }\r\n    var cont = document.querySelector('body');\r\n    cont.addEventListener('contextmenu', e => {\r\n        e.preventDefault();\r\n    });\r\n    var area = document.querySelector('.mainarea');\r\n    area.addEventListener('contextmenu', e => {\r\n        e.preventDefault();\r\n        rclick(e);\r\n    });\r\n    [document.querySelector(\".mainarea\"), document.querySelector(\".mainheader\")].forEach(itm =>{\r\n        itm.addEventListener(\"click\",function(){\r\n            for(var i=0;i<document.querySelectorAll(\".leftclicked\").length;i++) {\r\n                document.querySelectorAll(\".leftclicked\")[i].classList.remove(\"leftclicked\")\r\n            }\r\n        \r\n        \r\n            document.querySelector('.rclickmenu').classList.add('hidden');\r\n        });\r\n    })\r\n    window.addEventListener(\"resize\", function(){\r\n        document.querySelector('.rclickmenu').classList.add('hidden');\r\n        document.querySelector('.rclickmenu').style=\"\";\r\n    });\r\n\r\n    var elem = []\r\n    var state;\r\n\r\n    //pw: string, iv: arraybuffer, salt: arraybuffer, data: arraybuffer\r\n    export async function decryptFromPw(pw, iv, salt, data) {\r\n        var encodedpw = new TextEncoder().encode(pw)\r\n        var importedKey = await crypto.subtle.importKey(\"raw\", encodedpw, \"PBKDF2\", false, [\"deriveKey\", \"deriveBits\"])\r\n        var derivedKey = await crypto.subtle.deriveKey({\"name\": \"PBKDF2\", salt: salt, \"iterations\": 100000, \"hash\": \"SHA-256\"}, importedKey, { \"name\": \"AES-GCM\", \"length\": 256}, false, [ \"encrypt\", \"decrypt\" ])\r\n        try {\r\n            var decData = await crypto.subtle.decrypt({name: 'AES-GCM', iv: iv}, derivedKey, data)\r\n            return decData\r\n        }\r\n        catch(decryptionErr) {\r\n            console.error(decryptionErr)\r\n        }\r\n    }\r\n\r\n    async function callback(dta) {\r\n        var storedToken = await localforage.getItem(\"tk\")\r\n        var percentage\r\n        if(window.localStorage.getItem(\"arrange\") == 1) {\r\n            state = \"row\";\r\n            document.querySelector('#grid').classList.toggle('transparent');\r\n            document.querySelector('#row').classList.toggle('transparent');\r\n        }\r\n        else {\r\n            state = \"\";\r\n        }\r\n            elem = []\r\n            var res = dta;\r\n            if (res.hasOwnProperty(\"Pfp\")) {\r\n            var val = res.Pfp.toString();\r\n            if(val == \"\") {\r\n                var l = document.querySelectorAll('.pfpimg');\r\n                for(var i=0;i<l.length;i++) {\r\n                l[i].src = \"https://cdn.xdwhat.tech/pfp.png\"\r\n                }\r\n            }else {\r\n                var sarray = val.split(\"|\");\r\n                processpfp(sarray[0], sarray[1], sarray[2]);\r\n            }\r\n            if(res.Username == \"\") {\r\n                console.error(\"no username\")\r\n            }\r\n            ReactDOM.render(\r\n                <>\r\n                    <>\r\n                    <div className=\"headerleft\">\r\n                    <div className=\"fileoptions-pc\">\r\n                        <label htmlFor=\"fileinput\" className=\"fileoptbutton\">Upload file</label>\r\n                        <input id=\"fileinput\" type=\"file\" onChange={() => uploadworker()} multiple/>\r\n                        <div className=\"fileoptbutton\">Upload folder</div>\r\n                        <div className=\"fileoptbutton\"onClick={createfolder}>Create folder</div >\r\n                    </div>\r\n                    <Mobilemenubtn />\r\n                    <Group />\r\n                    <Button />\r\n                    <Searchico />\r\n                    </div>\r\n                    </>\r\n                    <div className=\"headerright\">\r\n                    <Pfp/>\r\n                    </div>\r\n                <Lpfpmenu userid={res.Username.split(\"@\")[0]}/>\r\n                </>,\r\n                document.querySelector('.header')\r\n            )\r\n            curtime = res.Timestamp\r\n            if(res.Folder != null) {\r\n                var pww = storedToken.slice(200)\r\n                decfolder(0)\r\n                async function decfolder(nth) {\r\n                    var folders = JSON.parse(res.Folder[nth])\r\n                    var encryptedname = decode(folders.Name)\r\n                    var salt = new Uint8Array(encryptedname.slice(0, 16))\r\n                    var iv = new Uint8Array(encryptedname.slice(16, 28))\r\n                    var realdata2 = new Uint8Array(encryptedname.slice(28))\r\n                    try {\r\n                        var decdata = await decryptFromPw(pww, iv, salt, realdata2)\r\n                        var dec = new TextDecoder();\r\n                        elem.push({name : dec.decode(decdata), size : folders.Size, mime : \"N/A\", date : convert_timezone(folders.Date), id : folders.Fid + \" \" +folders.Index.split(\" \")[1], state : state, typ: \"folder\", dir : folders.Index}) \r\n                        if(res.File != null) {\r\n                            percentage = elem.length/(res.File.length + res.Folder.length)\r\n                        }else {\r\n                            percentage = elem.length/(res.Folder.length)\r\n                        }\r\n                        document.querySelector(\".loadinglabel\").innerText = \"Decrypting, \"+Math.round(percentage*100)+\"% Done\"\r\n                        document.querySelector(\"#loadwrapperloading\").style=\"stroke-dashoffset:\"+(1850 - (1850*(percentage)))+\";fill:none;\"\r\n                        if(nth < res.Folder.length -1) {\r\n                            decfolder(nth+1)\r\n                        }else {\r\n                            if(res.File == null) {\r\n                                rerender()\r\n                                mobilenew(\"bsc\")\r\n                                document.querySelector(\".loadwrapper\").classList.add(\"loadwrapperhide\")\r\n                            }\r\n                        }\r\n                    }\r\n                    catch(decryptionErr) {\r\n                        console.error(decryptionErr)\r\n                    } \r\n    \r\n                }\r\n            }\r\n            if(res.File != null) {\r\n                var tk = await localforage.getItem(\"tk\")\r\n                    var xhr = new XMLHttpRequest();\r\n                    xhr.open(\"POST\", \"https://petadrop.com/api/thumbhandle/\")\r\n                    xhr.setRequestHeader(\"Authorization\", tk.slice(0, 200))           \r\n                    xhr.setRequestHeader(\"x-xwc-act\", \"get\") \r\n                    xhr.onreadystatechange = function() {\r\n                        if (xhr.readyState === xhr.DONE) {\r\n                            if (xhr.status === 200) {\r\n                                    if(JSON.parse(xhr.response).Finaldta != null) {\r\n                                        tmbloop(0)\r\n                                        async function tmbloop(i) {\r\n                                            var fid = JSON.parse(JSON.parse(xhr.response).Finaldta[i]).Id\r\n                                            var raw = decode(JSON.parse(JSON.parse(xhr.response).Finaldta[i]).Thumb)\r\n                                            var iv=raw.slice(0, 12);\r\n                                            var salt=raw.slice(12, 28);\r\n                                            var storedToken = await localforage.getItem(\"tk\")\r\n                                            var fle = raw.slice(28)\r\n                                            var decrypted = await decryptFromPw(storedToken.slice(200), iv, salt, fle)\r\n                                            var url = URL.createObjectURL(new Blob([decrypted], {type: \"image/jpeg\"}))\r\n                                            var v = elem.findIndex(function(item) {return item.id === fid})\r\n                                            if (v != -1 ) {\r\n                                                elem[v].src= url\r\n                                            }\r\n                                            if(i == (JSON.parse(xhr.response).Finaldta).length -1) {\r\n                                                rerender()\r\n                                            }else {\r\n                                                tmbloop(i+1)\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                \r\n                            }\r\n                        }\r\n                    }\r\n                    xhr.send()\r\n                var enc = new TextEncoder();\r\n                var decer = new TextDecoder();\r\n                decdata(0)\r\n                async function decdata(datadecnth) {\r\n                    var finalfiledata = JSON.parse(res.File[datadecnth])\r\n                    var fnbuffer = decode(finalfiledata.Name)\r\n                    var salt = fnbuffer.slice(0,16);\r\n                    var iv = fnbuffer.slice(16,28);\r\n                    var realname = fnbuffer.slice(28);\r\n                    var impk = await crypto.subtle.importKey(\"raw\", enc.encode(storedToken.slice(200)), \"PBKDF2\", false, [\"deriveKey\", \"deriveBits\"])\r\n                    var derivedkey = await crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt,\"iterations\": 100000, \"hash\": \"SHA-256\"}, impk, { name: \"AES-GCM\", length: 256},false,[ \"encrypt\", \"decrypt\" ])\r\n                    var dec = await crypto.subtle.decrypt({name: 'AES-GCM',iv: iv}, derivedkey, realname)\r\n                    elem.push({name : decer.decode(dec), size : finalfiledata.Size, mime : finalfiledata.Mime, date : convert_timezone(finalfiledata.Date), id : finalfiledata.Id, state : state, dir : finalfiledata.Dir, src: \"\"})\r\n                    if(res.Folder != null) {\r\n                        percentage = elem.length/(res.File.length + res.Folder.length)\r\n                    }else {\r\n                        percentage = elem.length/(res.File.length)\r\n                    }\r\n                    document.querySelector(\".loadinglabel\").innerText = \"Decrypting, \"+Math.round(percentage*100)+\"% Done\"\r\n                    document.querySelector(\"#loadwrapperloading\").style=\"stroke-dashoffset:\"+(1850 - (1850*(percentage)))+\";fill:none;\"\r\n                    if(datadecnth < res.File.length -1) {\r\n                        decdata(datadecnth+1)\r\n                    }else {\r\n                        mobilenew(\"bsc\")\r\n                        document.querySelector(\".loadwrapper\").classList.add(\"loadwrapperhide\")\r\n                        rerender()\r\n                    }\r\n                }\r\n            }\r\n            if(res.File == null && res.Folder == null) {\r\n                mobilenew(\"bsc\")\r\n                document.querySelector(\".loadwrapper\").classList.add(\"loadwrapperhide\")\r\n                ReactDOM.render(\r\n                    <div class='filenotfound'>Nothing Here ..Yet</div>,\r\n                    document.querySelector(\".mainarea\")\r\n                )\r\n            }\r\n        }else {\r\n            document.querySelector(\".loadinglabel\").innerText = res.Rcode.toString();\r\n        }\r\n    \r\n    }\r\n    \r\n    export function logout() {\r\n        localforage.getItem(\"tk\").then(function(storedToken) {\r\n            if(storedToken == null) {\r\n                console.log(\"ur not even logged in bruh\")\r\n            }else {\r\n                localforage.removeItem(\"tk\");\r\n            }\r\n            document.location.href=\"https://petadrop.com/\";\r\n        })\r\n    }\r\n    var list1= []\r\n    export async function getShared() {\r\n        ReactDOM.render (\r\n            <p className=\"dirbold\"><b>Shared Files</b></p>,\r\n            document.querySelector('.dirArea')\r\n          )\r\n          ReactDOM.render (\r\n            <></>,\r\n            document.querySelector('.aligniconArea')\r\n          )\r\n        ReactDOM.render(\r\n            <div className=\"loading\"><img src=\"https://cdn.xdcs.me/static/main/loading.gif\" width=\"25px\"></img></div>,\r\n            document.querySelector(\".mainarea\")\r\n        )\r\n        var storedToken = await localforage.getItem(\"tk\")\r\n        let resp = await fetch(\"https://petadrop.com/api/udfetch\",{method: 'POST', headers:{'Authorization': storedToken.slice(0,200), 'x-xwc-act': 'getshared'}})\r\n        var json = await resp.json()\r\n        var fl=[]\r\n        if(localStorage.getItem(\"arrange\") == 1) {\r\n            fl.push(<SharedArrangebar />)\r\n        }else if(localStorage.getItem(\"arrange\") == 0) {\r\n            fl.unshift(<SharedArrangebar />)\r\n        }\r\n        for(var i=0;i<json[\"Links\"].length; i++) {\r\n            var nthJson = JSON.parse(json[\"Links\"][i])\r\n            const itemToFind = elem.find(function(item) {return item.id === nthJson.Id})\r\n            var index = elem.indexOf(itemToFind);\r\n            if (index > -1) {\r\n                var ea2 = elem[index]\r\n                fl.push(<SharedFileCont name={ifempty(ea2.name)} size={ifempty(calcsize(ea2.size))} mime={ifempty(ea2.mime)} date={ea2.date} id={ea2.id} state=\"row\" typ={ea2.typ} src={ea2.src}/>)\r\n            }\r\n        }\r\n        ReactDOM.unmountComponentAtNode(document.querySelector('.mainheader'))\r\n        ReactDOM.render(\r\n            fl,\r\n            document.querySelector(\".mainarea\")\r\n        )\r\n    }\r\n\r\n    export async function mainMenu() {\r\n        rerender()\r\n        ReactDOM.render (\r\n            <Alignicon />,\r\n            document.querySelector(\".aligniconArea\")\r\n          )\r\n        ReactDOM.render (\r\n            [<Dir a={list1}/>],\r\n            document.querySelector('.dirArea')\r\n          )\r\n    }\r\n    var list1 = []\r\n    export function gotofolder(target, name) {\r\n        for(var i=0;i<document.querySelectorAll(\".leftclicked\").length;i++) {\r\n            document.querySelectorAll(\".leftclicked\")[i].classList.remove(\"leftclicked\")\r\n        }\r\n        if(target.split(\" \")[1] != 0) {\r\n            list1[target.split(\" \")[1]] = (<b id={target} onClick={()=>gotofolder(target, name)}>&gt;{name}</b>)\r\n        }else {\r\n            list1 = []\r\n        }\r\n        if(list1.length>target.split(\" \")[1]) {\r\n            var i = list1.length - target.split(\" \")[1]\r\n            while(i > 1) {\r\n                i = i-1\r\n                list1.pop()\r\n            }\r\n        }\r\n        ReactDOM.render(\r\n            [<Dir a={list1}/>],\r\n            document.querySelector(\".dirArea\")\r\n        )\r\n        var elem2 = []\r\n            var target2 = target.split(\" \")[0] +\" \"+ (parseInt(target.split(\" \")[1]))\r\n        \r\n            var state;\r\n            if(localStorage.getItem(\"arrange\") == 1) {\r\n                state = \"row\"\r\n            }else {\r\n                state = \"\"\r\n            }\r\n\r\n        curdir = target2\r\n        for(var i=0;i<elem.length;i++) {\r\n            var ea2 = elem[i]\r\n            if(ea2.dir == target2) {\r\n                elem2.push(<Filecont name={ifempty(ea2.name)} size={ifempty(calcsize(ea2.size))} mime={ifempty(ea2.mime)} date={ea2.date} id={ea2.id} state={state} typ={ea2.typ} src={ea2.src}/>)\r\n            }\r\n            \r\n        }\r\n        if(window.localStorage.getItem(\"arrange\") == 1) {\r\n            elem2.unshift(<Arrangebar />)\r\n        }\r\n        \r\n        ReactDOM.render(\r\n            elem2,\r\n            document.querySelector(\".mainarea\")\r\n        )\r\n    }\r\n    export async function delfile(id) {\r\n        var storedToken = await localforage.getItem(\"tk\")\r\n            var form = new FormData();\r\n            form.append(\"fid\", id)\r\n            try {\r\n                let resp = await fetch(\"https://petadrop.com/api/udfetch\",{method: 'DELETE',body: form,headers:{'Authorization': storedToken.slice(0,200)}})\r\n                var json = await resp.json()\r\n                if(json.Rcode == \"Success\") {\r\n                    const itemToFind = elem.find(function(item) {return item.id === id})\r\n                    var index = elem.indexOf(itemToFind);\r\n                    if (index > -1) {\r\n                        elem.splice(index, 1);\r\n                        rerender()\r\n                    }\r\n                }\r\n            }\r\n            catch(e) {\r\n                console.error(e)\r\n            }\r\n\r\n    }\r\n    export function openSetting() {\r\n\r\n    }\r\n    export function createfolder() {\r\n        function del() {\r\n            ReactDOM.unmountComponentAtNode(document.querySelector(\"#sharearea\"))\r\n        }\r\n        ReactDOM.render(\r\n            <div class=\"sharebackground\">\r\n                    <div className=\"createfolder\">\r\n                <div className=\"folderheader\">Create a folder</div>\r\n                <div className=\"folderbody\">\r\n                    <input type=\"text\" id=\"folder_name_cont\" placeholder=\"Folder Name\">\r\n    \r\n                </input>\r\n                <div className=\"btnarea\">\r\n                    <div className=\"btn\" onClick={send}>\r\n                            Create\r\n                    </div>\r\n                    <div className=\"btn\" onClick={del}>\r\n                        Cancel\r\n                    </div>\r\n                </div>\r\n                </div>\r\n    \r\n            </div>\r\n            </div>,\r\n            document.querySelector(\"#sharearea\")\r\n        )\r\n        async function send() {\r\n            var name = document.querySelector(\"#folder_name_cont\").value\r\n            if(name.length > 0) {\r\n            var salt = crypto.getRandomValues(new Uint8Array(16))\r\n            var iv = crypto.getRandomValues(new Uint8Array(12))\r\n            let storedToken = await localforage.getItem(\"tk\")\r\n            var pww = storedToken.slice(200);\r\n            var enc = new TextEncoder()\r\n            try {\r\n                var impk = await crypto.subtle.importKey(\"raw\",enc.encode(pww),\"PBKDF2\",false,[\"deriveKey\", \"deriveBits\"])\r\n                var derivedkey = await crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt, \"iterations\": 100000, \"hash\": \"SHA-256\" }, impk, {\"name\": \"AES-GCM\", \"length\": 256 }, false, [ \"encrypt\", \"decrypt\" ])\r\n                var encryptedfn = await crypto.subtle.encrypt({ name: 'AES-GCM',iv: iv }, derivedkey, enc.encode(name))\r\n\r\n                encryptedfn = new Uint8Array(encryptedfn)\r\n                var finbuf = new Uint8Array(encryptedfn.length + 28)\r\n                finbuf.set(salt, 0)\r\n                finbuf.set(iv, 16)\r\n                finbuf.set(encryptedfn, 28)\r\n                var form = new FormData();\r\n                form.append(\"curentdirindex\", curdir.split(\" \")[0] +\" \"+ ( parseInt(curdir.split(\" \")[1])))\r\n                form.append(\"name\", encode(finbuf))\r\n                form.append(\"action\", \"create\")\r\n                try {\r\n                    var resp = await fetch(\"https://petadrop.com/api/folderhandle\", {method: 'POST', body: form, headers:{'Authorization': storedToken.slice(0, 200)}})\r\n                    var json = await resp.json()\r\n                    if(json.Message == \"success\") {\r\n                        updatedata()\r\n                        del()\r\n                    }else {\r\n                        console.error(\"error\")\r\n                    }\r\n                }\r\n                catch(fetchErr) {\r\n                    console.error(fetchErr)\r\n                }\r\n            }\r\n            catch(decryptionErr) {\r\n                console.error(decryptionErr)\r\n            }\r\n        }\r\n    }}\r\n\r\n    export async function singlefile(fid, link) {\r\n        var form = new FormData()\r\n        form.append(\"dir\", new TextDecoder().decode(fid))\r\n        var storedToken = await localforage.getItem(\"tk\")\r\n        try {\r\n            var response = await fetch('https://petadrop.com/api/udfetch', {method: 'POST', body: form, headers:{'X-XWC-act': 'of', 'Authorization': storedToken.slice(0, 200)}})\r\n            let rJson = await response.json()\r\n            let originAb = decode(rJson.Name)\r\n            var encryptedData = new Uint8Array(originAb.slice(28))\r\n            var salt = new Uint8Array(originAb.slice(0, 16))\r\n            var iv = new Uint8Array(originAb.slice(16, 28))\r\n            var state;\r\n            if(localStorage.getItem(\"arrange\") == 1) {\r\n                state = \"row\"\r\n            }else {\r\n                state = \"\"\r\n            }\r\n            try {\r\n                var decData = await decryptFromPw(storedToken.slice(200), iv, salt, encryptedData)\r\n                var dec = new TextDecoder();\r\n                elem.push({name : dec.decode(decData), size : rJson.Size, mime : rJson.Mime, date : convert_timezone(rJson.Date), id : rJson.Id, state : state, dir : rJson.Dir, src : link})\r\n                rerender()\r\n            }\r\n            catch(decryptionErr) {\r\n                console.error(decryptionErr)\r\n            }\r\n        }\r\n        catch(fetchErr) {\r\n            console.error(fetchErr)\r\n        }\r\n    }\r\n\r\n\r\n    export async function updatedata(link) {\r\n        var insertedTmb\r\n        if (link != null) {\r\n            insertedTmb = link\r\n        }else if (link == null) {\r\n            insertedTmb = \"\"\r\n        }\r\n        var form = new FormData();\r\n        form.append(\"lt\", curtime)\r\n        var storedToken = await localforage.getItem(\"tk\")\r\n        var resp = await fetch('https://petadrop.com/api/udfetch', {method: 'POST', body: form, headers:{'X-XWC-act': 'nf', 'Authorization': storedToken.slice(0, 200)}})\r\n        if(!resp.ok) {\r\n            console.error(resp.status)\r\n        }\r\n        var json = await resp.json()\r\n        if(json.File != null || json.Folder != null || json.Deletedfile != null) {\r\n            curtime = json.Timestamp\r\n        }\r\n        var state;\r\n        if(json.Folder != null || json.File != null) {\r\n            if(window.localStorage.getItem(\"arrange\") == 1) {\r\n                state = \"row\";\r\n            }\r\n            else {\r\n                state = \"\";\r\n            }\r\n            if(json.Folder != null) {\r\n                    decfolder(0)\r\n                    async function decfolder(nth) {\r\n                        var folders = JSON.parse(json.Folder[nth])\r\n                        var encryptedname = decode(folders.Name)\r\n                        var salt = new Uint8Array(encryptedname.slice(0, 16))\r\n                        var iv = new Uint8Array(encryptedname.slice(16, 28))\r\n                        var realdata2 = new Uint8Array(encryptedname.slice(28))\r\n                        var decdata = await decryptFromPw(storedToken.slice(200), iv, salt, realdata2)\r\n                        var dec = new TextDecoder();\r\n                        elem.push({name : dec.decode(decdata), size : folders.Size, mime : \"N/A\", date : convert_timezone(folders.Date), id : folders.Fid + \" \" +folders.Index.split(\" \")[1], state : state, typ: \"folder\", dir : folders.Index}) \r\n                        if(nth < json.Folder.length -1) {\r\n                            decfolder(nth+1)\r\n                        }else {\r\n                            rerender()\r\n                        }\r\n                    }\r\n                \r\n\r\n            }\r\n            if(json.File != null) {\r\n                var decer = new TextDecoder();\r\n                decdata(0)\r\n                async function decdata(datadecnth) {\r\n                    var finalfiledata = JSON.parse(json.File[datadecnth])\r\n                    var fnbuffer = decode(finalfiledata.Name)\r\n                    var salt = fnbuffer.slice(0,16);\r\n                    var iv = fnbuffer.slice(16,28);\r\n                    var realname = fnbuffer.slice(28);\r\n                    var dec = await decryptFromPw(storedToken.slice(200), iv, salt, realname)\r\n                    elem.push({name : decer.decode(dec), size : finalfiledata.Size, mime : finalfiledata.Mime, date : convert_timezone(finalfiledata.Date), id : finalfiledata.Id, state : state, dir : finalfiledata.Dir, src : insertedTmb})\r\n                    if(datadecnth < json.File.length -1) {\r\n                        decdata(datadecnth+1)\r\n                    }else {\r\n                        rerender()\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        if(json.Deletedfile != null) {\r\n            for(var i=0;i<json.Deletedfile.length;i++) {\r\n                const itemToFind = elem.find(function(item) {return item.id === JSON.parse(json.Deletedfile[i]).Id})\r\n                var index = elem.indexOf(itemToFind);\r\n                if (index > -1) {\r\n                    elem.splice(index, 1);\r\n                    rerender()\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function rerender() {\r\n        var elem2 = []\r\n        for(var i=0;i<elem.length;i++) {\r\n            var ea2 = elem[i]\r\n            if(ea2.dir == curdir) {\r\n                elem2.push(<Filecont name={ifempty(ea2.name)} size={ifempty(calcsize(ea2.size))} mime={ifempty(ea2.mime)} date={ea2.date} id={ea2.id} state={ea2.state} typ={ea2.typ} src={ea2.src}/>)\r\n            }\r\n        }\r\n        if(window.localStorage.getItem(\"arrange\") == 1) {\r\n            elem2.unshift(<Arrangebar />)\r\n        }\r\n    ReactDOM.render(\r\n        elem2,\r\n        document.querySelector(\".mainarea\")\r\n    )\r\n    elem2=[]\r\n    }\r\n    export {elem as originalelem};","C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\pfphandler.js",["136","137","138"],"import { readAndCompressImage } from 'browser-image-resizer';\r\nimport { encode,decode } from 'base64-arraybuffer';\r\nimport {mobilenew} from './index.js'\r\nimport localforage from 'localforage';\r\nimport {Uploadnotify} from './comp'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n  export function pfpinput() {\r\n    const imgs = ['jpg', 'jpeg', 'png'];\r\n      var file = document.querySelector('#pfpuploader').files[0]\r\n      var filen = file.name.split('.')\r\n      if(imgs.indexOf(filen[filen.length - 1].toLowerCase()) !== -1) {\r\n\r\n        const config = {\r\n          quality: 0.5,\r\n          maxWidth: 500,\r\n          maxHeight: 500,\r\n          autoRotate: false,\r\n          debug: false\r\n        }\r\n        readAndCompressImage(file, config).then(function(resizedpfp) {\r\n          localforage.getItem(\"tk\").then(function(storedToken) {\r\n            var xhr = new XMLHttpRequest;\r\n            xhr.open('POST', 'https://petadrop.com/api/pfph');\r\n            xhr.onreadystatechange = function() {\r\n                if (xhr.readyState === xhr.DONE) {\r\n                    if (xhr.status === 200) {\r\n                        var form = new FormData();\r\n                        fetch('https://petadrop.com/api/udfetch', {method: 'POST', body: form, headers:{'X-XWC-act': 'pfpf', 'Authorization': storedToken.slice(0, 200)}}).then(function(resp) {\r\n                          if(resp.ok) {\r\n                            return resp.json()\r\n                          }\r\n                        }).then(function(json) {\r\n                          console.log(json)\r\n                          var pfpb64 = json.Pfp;\r\n                          var sarray = pfpb64.split(\"|\");\r\n                          processpfp(sarray[0], sarray[1], sarray[2]);\r\n                          mobilenew(\"bsc\").then(function() {\r\n                            if(window.innerWidth > 760) {\r\n                              document.querySelector('.uploadnotify').classList.remove('show');\r\n                              ReactDOM.render(\r\n                                <></>,\r\n                                document.querySelector(\"#ules\")\r\n                            )\r\n                            }else {\r\n                                document.querySelector('.mobile-uploadbtn').classList.remove('uploading');\r\n                            }\r\n                          })\r\n                        })\r\n                    }\r\n                }\r\n            };\r\n            const reader = new FileReader()\r\n            reader.onloadend = function() {\r\n              var buffer = reader.result;\r\n              var iv = crypto.getRandomValues(new Uint8Array(12));\r\n              var salt = crypto.getRandomValues(new Uint8Array(16))\r\n    \r\n                  var pww = storedToken.slice(200);\r\n                  let enc = new TextEncoder();\r\n                  crypto.subtle.importKey(\r\n    \r\n                      \"raw\",\r\n                      enc.encode(pww), \r\n                      {name: \"PBKDF2\"},\r\n                      false,\r\n                      [\"deriveBits\", \"deriveKey\"]\r\n    \r\n                  ).then(function(impk) {\r\n                    crypto.subtle.deriveKey({\r\n    \r\n                      \"name\": \"PBKDF2\",\r\n                      salt: salt,\r\n                      \"iterations\": 100000,\r\n                      \"hash\": \"SHA-256\"   \r\n                      }, \r\n    \r\n                      impk,\r\n                      { \"name\": \"AES-GCM\", \"length\": 256},\r\n                      false,\r\n                      [ \"encrypt\", \"decrypt\" ]\r\n    \r\n                        ).then(function(key) {\r\n                        crypto.subtle.encrypt({ \r\n                          'name': 'AES-GCM',\r\n                            iv \r\n                          }, key, buffer).then(function(encrypted) {\r\n                            mobilenew(\"upchk\").then(function() {\r\n                              if(window.innerWidth > 760) {\r\n                            ReactDOM.render(\r\n                                <Uploadnotify name={\"Updating Profile Picture..\"} size={\"\"} progid={\"\"} act={\"pfp\"} />,\r\n                                document.querySelector(\"#ules\")\r\n                            )\r\n                            document.querySelector('.uploadnotify').classList.add('show');\r\n                            }else {\r\n                                document.querySelector('.mobile-uploadbtn').classList.add('uploading');\r\n                        \r\n                            }\r\n                          })\r\n                            var tk = storedToken.slice(0,200);\r\n                            var form = new FormData();\r\n                            form.append('pfp', encode(encrypted)+\"|\"+encode(iv)+\"|\"+encode(salt));\r\n                            xhr.setRequestHeader(\"Authorization\", tk)\r\n                            xhr.send(form);\r\n                          })\r\n                        })\r\n                  })\r\n              }\r\n              reader.readAsArrayBuffer(resizedpfp);\r\n          })\r\n        })\r\n      }else {\r\n        console.log(\"unallowed file type\")\r\n      }\r\n  }\r\n  export function processpfp(value, iv, salt) {\r\n    var iv=decode(iv);\r\n    var salt=decode(salt);\r\n\r\n    var f = decode(value)\r\n    localforage.getItem(\"tk\").then(function(storedToken) {\r\n      var pww = storedToken.slice(200);\r\n      let enc = new TextEncoder();\r\n      crypto.subtle.importKey(\r\n        \r\n        \"raw\",\r\n        enc.encode(pww), \r\n        {name: \"PBKDF2\"},\r\n        false,\r\n        [\"deriveBits\", \"deriveKey\"]\r\n  \r\n    ).then(function(impk) {\r\n      crypto.subtle.deriveKey({\r\n  \r\n        \"name\": \"PBKDF2\",\r\n        salt: salt,\r\n        \"iterations\": 100000,\r\n        \"hash\": \"SHA-256\"   \r\n        }, \r\n  \r\n        impk,\r\n        { \"name\": \"AES-GCM\", \"length\": 256},\r\n        false,\r\n        [ \"encrypt\", \"decrypt\" ]\r\n  \r\n         ).then(function(key) {\r\n          crypto.subtle.decrypt({ \r\n            name: 'AES-GCM',\r\n             iv: iv \r\n            }, key, f).then(function(decrypted) {\r\n              \r\n              encode(decrypted);\r\n              var l = document.querySelectorAll('.pfpimg');\r\n              for(var i=0;i<l.length;i++) {\r\n                l[i].src = URL.createObjectURL(new Blob([decrypted], {type: \"image/jpeg\"}))\r\n              }\r\n            })\r\n         })\r\n      })\r\n    })\r\n}\r\n","C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\createlink.js",["139","140"],"\r\nimport { encode,decode } from 'base64-arraybuffer';\r\nimport {encode as urlencode, trim} from 'url-safe-base64';\r\nimport {Sharearea} from './comp'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport localforage from 'localforage';\r\n\r\n\r\n    export default function share(fileid) {\r\n        localforage.getItem(\"tk\").then(function(storedToken) {\r\n            ReactDOM.render(\r\n                <Sharearea link={\"aa\"} loading={true}/>, \r\n                document.querySelector('#sharearea')\r\n            )\r\n            var form = new FormData();\r\n            form.append(\"id\", fileid)\r\n            fetch('https://petadrop.com/api/udfetch', {method: 'POST', body: form, headers: {'X-XWC-act' : 'fel'}}).then(function(resp) {\r\n                if(resp.ok) {\r\n                    return resp.json()\r\n                }\r\n            }).then(function(json) {\r\n                if(json.Status == \"Success\") {\r\n                    var enclinkab = decode(json.Link)\r\n                    var salt = enclinkab.slice(0, 16)\r\n                    var enclinkiv = enclinkab.slice(16, 28)\r\n                    var realencdata = enclinkab.slice(28)\r\n                    var enc = new TextEncoder();\r\n                    crypto.subtle.importKey(\"raw\",enc.encode(storedToken.slice(200)),\"PBKDF2\",false,[\"deriveKey\", \"deriveBits\"]).then(function(impkey) {\r\n                        crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt,\"iterations\": 100000,\"hash\": \"SHA-256\"}, impkey,{ name: \"AES-GCM\", length: 256},false,[ \"encrypt\", \"decrypt\" ]).then(function(derivedkey) {\r\n                            crypto.subtle.decrypt({name: 'AES-GCM', iv: enclinkiv}, derivedkey, realencdata).then(function(declink) {\r\n                                var dec = new TextDecoder();\r\n                                ReactDOM.render(\r\n                                    <Sharearea link={dec.decode(declink)} loading={false} id={fileid}/>, \r\n                                    document.querySelector('#sharearea')\r\n                                )\r\n                            })\r\n                        })\r\n                    })\r\n                }else {\r\n                    var form = new FormData();\r\n                    form.append(\"dir\", fileid)\r\n                    fetch('https://petadrop.com/api/udfetch', {method: 'POST', body: form, headers: {'X-XWC-act' : 'vfi', 'Authorization' : storedToken.slice(0, 200)}}).then(function(resp) {\r\n                        if(resp.ok) {\r\n                            return resp.json()\r\n                        }\r\n                    }).then(function(json) {\r\n                        var encryptedfilekey = decode(json.Filekey)\r\n                        var encryptedname = decode(json.Name)\r\n                \r\n                        var salt = encryptedname.slice(0,16);\r\n                        var nameiv = encryptedname.slice(16,28);\r\n                        var realname = encryptedname.slice(28);\r\n                        var keyiv = encryptedfilekey.slice(16,28);\r\n                        var realkey = encryptedfilekey.slice(28);\r\n                \r\n                        var enc = new TextEncoder();\r\n                        crypto.subtle.importKey(\"raw\",enc.encode(storedToken.slice(200)),\"PBKDF2\",false,[\"deriveKey\", \"deriveBits\"]).then(function(impkey) {\r\n                            crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt,\"iterations\": 100000,\"hash\": \"SHA-256\"}, impkey,{ name: \"AES-GCM\", length: 256},false,[ \"encrypt\", \"decrypt\" ]).then(function(derivedkey) {\r\n                                crypto.subtle.decrypt({name: 'AES-GCM', iv: keyiv}, derivedkey, realkey).then(function(decryptedfilekey) {\r\n                                    crypto.subtle.decrypt({name: 'AES-GCM', iv: nameiv}, derivedkey, realname).then(function(decryptedfilename) {\r\n                                        crypto.subtle.generateKey({name: \"AES-GCM\", length: 128}, true, [\"encrypt\", \"decrypt\"]).then(function(sharekey){\r\n                                            crypto.subtle.exportKey(\"raw\", sharekey).then(function(sharekeyab) {\r\n                                                var b64key = trim(urlencode(encode(sharekeyab)))\r\n                                                var sharekeyiv = crypto.getRandomValues(new Uint8Array(12));\r\n                                                var sharefilenameiv = crypto.getRandomValues(new Uint8Array(12));\r\n                                                crypto.subtle.encrypt({name: \"AES-GCM\",iv: sharekeyiv},sharekey, decryptedfilekey).then(function(sharepreparedkey) {\r\n                                                    crypto.subtle.encrypt({name: \"AES-GCM\",iv: sharefilenameiv},sharekey, decryptedfilename).then(function(sharepreparedfilename) {\r\n                                                        var shareform = new FormData()\r\n                                                        shareform.append('id', fileid)\r\n                                                        sharepreparedfilename = new Uint8Array(sharepreparedfilename)\r\n                                                        sharepreparedkey = new Uint8Array(sharepreparedkey)\r\n                                                        var realsharepreparedfilename = new Uint8Array(sharepreparedfilename.length + 12)\r\n                                                        realsharepreparedfilename.set(sharefilenameiv, 0)\r\n                                                        realsharepreparedfilename.set(sharepreparedfilename, 12)\r\n                                                        var realsharepreparedkey = new Uint8Array(sharepreparedkey.length + 12)\r\n                                                        realsharepreparedkey.set(sharekeyiv, 0)\r\n                                                        realsharepreparedkey.set(sharepreparedkey, 12)\r\n                                                        var textenc = new TextEncoder();\r\n                                                        var encodedlink = textenc.encode(\"https://petadrop.com/share/\"+fileid+\"/\"+b64key)\r\n                                                        var linkiv = crypto.getRandomValues(new Uint8Array(12))\r\n                                                        var newsalt = crypto.getRandomValues(new Uint8Array(16))\r\n                                                        crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: newsalt,\"iterations\": 100000,\"hash\": \"SHA-256\"}, impkey,{ name: \"AES-GCM\", length: 256},false,[ \"encrypt\", \"decrypt\" ]).then(function(derivedkey) {\r\n                                                            crypto.subtle.encrypt({name: \"AES-GCM\",iv: linkiv},derivedkey, encodedlink).then(function(encryptedlink) {\r\n                                                                var finallinkab = new Uint8Array(new Uint8Array(encryptedlink).length + 28)\r\n                                                                finallinkab.set(newsalt, 0)\r\n                                                                finallinkab.set(linkiv, 16)\r\n                                                                finallinkab.set(new Uint8Array(encryptedlink), 28)\r\n                                                                var encryptedbase64link = encode(finallinkab)\r\n                                                                shareform.append('name', encode(realsharepreparedfilename))\r\n                                                                shareform.append('key', encode(realsharepreparedkey))\r\n                                                                shareform.append('link', encryptedbase64link)\r\n                                                                fetch('https://petadrop.com/api/goshare', {method: 'POST', body: shareform, headers:{'Authorization' : storedToken.slice(0, 200)}}).then(function(resp) {\r\n                                                                    if(resp.ok) {\r\n                                                                        return resp.json()\r\n                                                                    }\r\n                                                                }).then(function(json){\r\n                                                                    if(json.Status == \"Success\") {\r\n                                                                        ReactDOM.render(\r\n                                                                            <Sharearea link={\"https://petadrop.com/share/\"+fileid+\"/\"+b64key} loading={false} id={fileid}/>, \r\n                                                                            document.querySelector('#sharearea')\r\n                                                                        )\r\n                                                                    }\r\n                                                                })\r\n                                                            })\r\n                                                        }).catch(function(err) {\r\n                                                            console.log(err)\r\n                                                        })\r\n                                                    })\r\n                                                })\r\n                                            })\r\n                                        })\r\n                                    })\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n    export function revokeURL(id) {\r\n\r\n    }","C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\uploadhandler.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157"],"import {mobilenew} from './index.js'\r\nimport { readAndCompressImage } from 'browser-image-resizer';\r\nimport { encode,decode } from 'base64-arraybuffer';\r\nimport {updatedata, curdir, singlefile} from './main.js';\r\nimport {Uploadnotify} from './comp'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport localforage from 'localforage';\r\nconst vars = require('./vars.json')\r\n\r\nfunction size(s) {\r\n    var fs\r\n    if(1024 >= s) {\r\n        fs = Math.round(s) + \"B\"\r\n\r\n    }else if(s > 1024 && s < 1024*1024) {\r\n        fs = Math.round(s/1024) + \"KB\"\r\n\r\n    }else if(s >= 1024*1024 && s < 1024*1024*1024) {\r\n        fs = Math.round(s/(1024*1024)) + \"MB\"\r\n\r\n    }else if(s >= 1024*1024*1024 && s < 1024*1024*1024*1024) {\r\n        fs = Math.round(s/(1024*1024*1024)) + \"GB\"    \r\n    }\r\n    return fs\r\n}\r\n\r\nfunction filedetail(file, id) {\r\n    if(file == undefined || file == null || file == '') {\r\n    }else {\r\n        if(file === null) {\r\n        }\r\n        var fs= size(file.size)\r\n        ReactDOM.render(\r\n            <Uploadnotify name={file.name} size={fs} progid={id} act={\"\"}/>,\r\n            document.querySelector(\"#ules\")\r\n        )\r\n    }\r\n}\r\n\r\nasync function encthumbnail(fdata, id) {\r\n    var iv = crypto.getRandomValues(new Uint8Array(12));\r\n    var salt = crypto.getRandomValues(new Uint8Array(16));\r\n    var fd = fdata\r\n    var storedToken = await localforage.getItem(\"tk\")\r\n    var pww = storedToken.slice(200);\r\n    let enc = new TextEncoder();\r\n    var impk = await crypto.subtle.importKey(\"raw\",enc.encode(pww), {name: \"PBKDF2\"},false,[\"deriveBits\", \"deriveKey\"])\r\n    var key = await crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt,\"iterations\": 100000,\"hash\": \"SHA-256\"   }, impk,{ \"name\": \"AES-GCM\", \"length\": 256},false,[ \"encrypt\", \"decrypt\" ])\r\n    var encrypted = await crypto.subtle.encrypt({'name': 'AES-GCM',iv }, key, fd)\r\n\r\n    encrypted = new Uint8Array(encrypted)\r\n    var fab = new Uint8Array(new Uint8Array(encrypted).length + 28)\r\n    fab.set(iv, 0)\r\n    fab.set(salt, 12)\r\n    fab.set(encrypted, 28)\r\n    var finblob = new Blob([fab])\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", \"https://petadrop.com/api/thumbhandle/\", true)\r\n    var tk = storedToken.slice(0,200);\r\n    xhr.setRequestHeader(\"Authorization\", tk)           \r\n    xhr.setRequestHeader(\"x-xwc-act\", \"up\")            \r\n    var form = new FormData();\r\n    form.append(\"thumb\", finblob)\r\n    form.append(\"tn\", id)\r\n    if (xhr.readyState === xhr.DONE) {\r\n        if (xhr.status === 200) {\r\n            console.log(\"ok\")\r\n        }\r\n    }\r\n    xhr.send(form)\r\n}\r\n\r\nexport function uploadworker() {\r\n    var fl = document.querySelector('#fileinput').files\r\n    var state;\r\n    if(fl.length >1) {\r\n        state=1\r\n    }else {\r\n        state=0\r\n    }\r\n    onetime(0)\r\n}\r\nvar pfplink\r\n\r\nfunction updateProg(offset) {\r\n    if(document.querySelectorAll(\".progrezz\")[0].value < offset || offset == 0) {\r\n        document.querySelectorAll(\".progrezz\")[0].value = offset\r\n        document.querySelectorAll(\".progrezz\")[1].value = offset\r\n    }\r\n}\r\n\r\nexport async function hash(algo, data) {\r\n    var digest = await window.crypto.subtle.digest(algo, data)\r\n    return Array.from(new Uint8Array(digest)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n}\r\nvar filehashes = []\r\nasync function onetime(i) {\r\n\r\n    var file = document.querySelector('#fileinput').files[i];\r\n\r\n    if(file == undefined || file == null || file == '') {\r\n\r\n    }else {\r\n    mobilenew(\"preup\")   \r\n    if(window.innerWidth > 760) {\r\n        ReactDOM.render(\r\n            <Uploadnotify name={\"Preparing..\"} size={\"\"} progid={\"\"} act={\"\"}/>,\r\n            document.querySelector(\"#ules\")\r\n        )\r\n    }\r\n        var storedToken = await localforage.getItem(\"tk\")\r\n        var salt = crypto.getRandomValues(new Uint8Array(16))\r\n        var iv = crypto.getRandomValues(new Uint8Array(12))\r\n        var pww = storedToken.slice(200);\r\n        let enc = new TextEncoder();\r\n        var fkey = await crypto.subtle.generateKey({name: \"AES-GCM\",length: 256},true,[\"encrypt\", \"decrypt\"])\r\n        var keybuff = await crypto.subtle.exportKey(\"raw\", fkey)\r\n        var impk = await crypto.subtle.importKey(\"raw\",enc.encode(pww),\"PBKDF2\",false,[\"deriveKey\", \"deriveBits\"])\r\n        var derivedkey = await crypto.subtle.deriveKey({\"name\": \"PBKDF2\",salt: salt, \"iterations\": 100000, \"hash\": \"SHA-256\" }, impk, {\"name\": \"AES-GCM\", \"length\": 256 }, false, [ \"encrypt\", \"decrypt\" ])\r\n        var encryptedfn = await crypto.subtle.encrypt({ name: 'AES-GCM',iv: iv }, derivedkey, enc.encode(file.name))\r\n\r\n            var keyiv = crypto.getRandomValues(new Uint8Array(12))\r\n            crypto.subtle.encrypt(\r\n                {name: 'AES-GCM',\r\n                iv: keyiv \r\n            }, derivedkey, keybuff).then(function(enc) {\r\n\r\n                var xhr = new XMLHttpRequest;\r\n                xhr.open('POST', \"https://petadrop.com/api/preupload\", true)\r\n                var form = new FormData();\r\n                xhr.setRequestHeader(\"Authorization\", storedToken.slice(0,200))\r\n                var enc = new Uint8Array(enc)\r\n                var findata = new Uint8Array(new Uint8Array(enc).length+28)\r\n                findata.set(salt, 0);\r\n                findata.set(keyiv, 16);\r\n                findata.set(enc, 28);\r\n\r\n                var enf = new Uint8Array(encryptedfn)\r\n                var fnfd = new Uint8Array(new Uint8Array(enf).length+28)\r\n                fnfd.set(salt, 0);\r\n                fnfd.set(iv, 16);\r\n                fnfd.set(enf, 28);\r\n\r\n\r\n                var string = encode(findata);\r\n                form.append(\"key\", string)\r\n                form.append(\"fname\", encode(fnfd))\r\n                form.append(\"type\", file.type)\r\n                form.append(\"size\", file.size)\r\n                form.append(\"curdir\", curdir)\r\n\r\n                xhr.send(form);\r\n                xhr.onreadystatechange = function() {\r\n                    if (xhr.readyState === xhr.DONE) {\r\n                        if (xhr.status === 200) {\r\n                            callback(xhr.response);\r\n                            //filetype & thumbnail\r\n                            var fileId = JSON.parse(xhr.response).Id\r\n                            var filetype = file.name.split('.');\r\n                            if(vars.imagefile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1) {\r\n                                var config = {\r\n                                    quality: 1,\r\n                                    maxWidth: 100,\r\n                                    maxHeight: 100,\r\n                                    autoRotate: false,\r\n                                    debug: false\r\n                                }\r\n                                readAndCompressImage(file, config).then(function(resizedpfp) {\r\n                                    const reader = new FileReader()\r\n                                    reader.onloadend = function(e) {\r\n                                        encthumbnail(e.target.result, fileId)\r\n                                        pfplink = URL.createObjectURL(new Blob([e.target.result]))\r\n                                    }\r\n                                    reader.readAsArrayBuffer(resizedpfp)\r\n                                })\r\n                            }\r\n                            else if(vars.codefile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1) {\r\n                                var read = new FileReader()\r\n                                read.onload = function(e) {\r\n                                    var finstringArr =  e.target.result.split(\"\\n\");\r\n                                    var canvas = document.createElement(\"canvas\");\r\n                                    canvas.width = \"100\"\r\n                                    canvas.height = \"100\"\r\n                                    var ctx = canvas.getContext(\"2d\");\r\n                                    ctx.fillStyle = \"white\";\r\n                                    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n                                    ctx.font = \"7px Arial\"\r\n                                    ctx.fillStyle = \"black\"\r\n                                    for(var i=0;i<20;i++) {\r\n                                        if(!(i == undefined || finstringArr[i] == undefined)) {\r\n                                            ctx.fillText(finstringArr[i].slice(0, 30), 5, 6*(i+1))\r\n                                        }\r\n                                        \r\n                                    }\r\n                                    canvas.toBlob(function(blob) {\r\n                                        var reader = new FileReader()\r\n                                        reader.onloadend = function(e) {\r\n                                            encthumbnail(e.target.result, fileId)\r\n                                            pfplink = URL.createObjectURL(new Blob([e.target.result]))\r\n                                        }\r\n                                        reader.readAsArrayBuffer(blob)\r\n                                    })\r\n                                }\r\n                                read.readAsText(file)\r\n                                \r\n                            }else {\r\n                                pfplink = \"\"\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n                function callback(resp) {\r\n                    var res = JSON.parse(resp);\r\n                    var val = res.Id.toString();\r\n                    var enc = new TextEncoder()\r\n                    \r\n                    val = enc.encode(val)\r\n                    fileadded(0, 1, val, fkey)\r\n                \r\n                    mobilenew(\"upchk\", size(file.size), res.Id.toString(), file.name).then(function() {\r\n                        filedetail(file, res.Id.toString())\r\n                    })\r\n                }\r\n            })\r\n    }\r\n    \r\n    function calchunk(filelength) {\r\n        var chunkcount\r\n        chunkcount = parseInt(filelength / ((1024 * 1024)*5));\r\n        if((filelength%((1024 * 1024)*5))>0) {\r\n            chunkcount = chunkcount + 1;\r\n        }\r\n        return chunkcount;\r\n    }\r\n    var currentupload = 0;\r\n    var now = 0;\r\n    function fileadded(start, nth, identify, key) {\r\n        var slice_size = (1024 * 1024)*5;\r\n        var fread = new FileReader();\r\n        var next_slice = start + slice_size + 1;\r\n        var blob = file.slice( start, next_slice );\r\n        \r\n        fread.onloadend = async function(e) {\r\n                if ( e.target.readyState !== FileReader.DONE ) {\r\n                    return;\r\n                }\r\n                var buffer = new Uint8Array(e.target.result);\r\n                hash('SHA-256', buffer).then(function(h) {\r\n                    filehashes.push(h)\r\n                })\r\n                        var iv = crypto.getRandomValues(new Uint8Array(12));\r\n                        crypto.subtle.encrypt({ \r\n                            'name': 'AES-GCM',\r\n                                iv \r\n                            }, key, buffer) \r\n\r\n                        .then(encrypted => {\r\n                                var encrypted2 = new Uint8Array(encrypted)\r\n                                var findata = new Uint8Array(encrypted2.length+28)\r\n                                findata.set(iv, 0);\r\n                                findata.set(identify, 12);\r\n                                findata.set(encrypted2, 28);\r\n                                var fffd = new Blob([findata])\r\n                                hash('SHA-512', findata).then(function(digest) {\r\n                                        \r\n                                        findata = null\r\n                                        encrypted2 = null\r\n                                        buffer = null\r\n\r\n                                        var xhr = new XMLHttpRequest;\r\n                                        xhr.open(\"POST\", \"https://storage.petadrop.com/upload?idnf=\"+digest+\"&chnum=\"+nth+\"&ttlch=\"+calchunk(file.size), true);\r\n\r\n                                        var form = new FormData();\r\n\r\n                                        form.append(\"file\", fffd)\r\n                                        var RanFunc = false\r\n                                        xhr.upload.onprogress = function(e) {\r\n                                            currentupload = e.loaded\r\n                                            updateProg(((now + e.loaded)/file.size)*100)\r\n                                            if(RanFunc == false && (e.loaded/5242925)*100 > 65 && nth+1 <= calchunk(file.size)) {\r\n                                                fileadded( next_slice, nth+1 ,identify, key)\r\n                                                RanFunc = true\r\n                                            }\r\n                                        }\r\n                                        xhr.upload.onloadend =function() {\r\n                                            now = currentupload + now\r\n                                        }\r\n                                        xhr.onreadystatechange = function() {\r\n                                            if (xhr.readyState === xhr.DONE) {\r\n                                                    if(xhr.status == 200) {\r\n                                                        if(JSON.parse(xhr.response).Statusmsg !== \"Success\") {\r\n                                                            ReactDOM.render(\r\n                                                                <Uploadnotify name={\"Failed\"}/>,\r\n                                                                document.querySelector(\"#ules\")\r\n                                                            )\r\n                                                        }else {\r\n                                                            \r\n                                                            if ( next_slice < file.size ) {\r\n                                                            } else {\r\n                                                                singlefile(identify, pfplink)\r\n                                                                updateProg(0)\r\n                                                                if(i == document.querySelector('#fileinput').files.length -1) {\r\n                                                                    var tx = new TextEncoder()\r\n                                                                    var encoded_addedhash = tx.encode(filehashes.join(''))\r\n                                                                    \r\n                                                                    window.crypto.subtle.digest('SHA-256', encoded_addedhash).then(function(final_filehash) {\r\n                                                                        final_filehash = Array.from(new Uint8Array(final_filehash)).map(b => b.toString(16).padStart(2, '0')).join('');\r\n                                                                        console.log(final_filehash)\r\n                                                                        filehashes = []\r\n                                                                    })\r\n                                                                    ReactDOM.unmountComponentAtNode(document.querySelector(\"#ules\"))\r\n                                                                    try {\r\n                                                                        mobilenew(\"bsc\")\r\n                                                                    }\r\n                                                                    catch(e){\r\n                                                                    }\r\n                                                                }else {\r\n                                                                    onetime(i+1)\r\n                                                                }\r\n                                                            }   \r\n                                                        }\r\n                                                    }else {\r\n                                                        ReactDOM.render(\r\n                                                            <Uploadnotify name={\"Failed \"+\"(\"+xhr.status+\")\"}/>,\r\n                                                            document.querySelector(\"#ules\")\r\n                                                        )\r\n                                                    }\r\n                                            }\r\n                                        };\r\n                                        xhr.send(form);  \r\n                                    })\r\n\r\n                        })                              \r\n    \r\n    }\r\n        fread.readAsArrayBuffer(blob)\r\n    }\r\n}","C:\\Users\\starw\\OneDrive\\문서\\react\\app\\src\\newviewfile.js",["158","159","160","161","162","163","164","165","166","167","168","169"],"import {Fileviewarea, Defaultxhrloading, Overlay} from './comp';\r\nimport React from 'react';\r\nimport {decryptFromPw} from './main'\r\nimport ReactDOM from 'react-dom';\r\nimport { decode } from 'base64-arraybuffer';\r\nimport localforage from 'localforage';\r\nimport {hash} from './uploadhandler'\r\nconst vars = require('./vars.json')\r\n\r\nlet finaldecryptedfd\r\nvar finishlist = []\r\nvar currentlyrendered = []\r\nasync function defaultlp(element, range) {\r\n    var storedToken = await localforage.getItem(\"tk\")\r\n    var prexhr = new XMLHttpRequest();\r\n    prexhr.open(\"POST\", \"https://petadrop.com/api/udfetch\", true);\r\n    var preform = new FormData();\r\n    prexhr.setRequestHeader(\"Authorization\", storedToken.slice(0,200))\r\n    preform.append('dir', element);\r\n    prexhr.setRequestHeader(\"X-XWC-act\", \"vfi\")\r\n    prexhr.onreadystatechange = function() {\r\n        if (prexhr.readyState === prexhr.DONE) {\r\n            if (prexhr.status === 200) {\r\n                precallback(prexhr.response, element, range);\r\n            }\r\n        }\r\n    };\r\n    prexhr.send(preform)\r\n}\r\nexport function OnlyDownload(element) {\r\n    defaultlp(element, \"0:5242925\")\r\n}\r\n\r\nexport function rvf(element, range) {\r\n    ReactDOM.render(\r\n        <Overlay show ={false} />,\r\n        document.querySelector('#olay')\r\n        )\r\n    document.querySelector(\".fileviewer\").classList.add(\"show\")\r\n    ReactDOM.render(\r\n        <Defaultxhrloading />, \r\n        document.querySelector(\".fileviewer\")\r\n        )\r\n    if(currentlyrendered.length > 0) {\r\n        var idlist = [],\r\n            namelist = [],\r\n            srclist = [],\r\n            typelist = [],\r\n            mimelist = [];\r\n        for(var i = 0;i<currentlyrendered.length;i++) {\r\n            var renderdta = JSON.parse(currentlyrendered[i])\r\n            idlist.push(renderdta.id)\r\n            namelist.push(renderdta.name)\r\n            srclist.push(renderdta.blob)\r\n            typelist.push(renderdta.ext)\r\n            mimelist.push(renderdta.mime)\r\n        }\r\n            if(idlist.indexOf(element) != -1) {\r\n                document.querySelector(\".dark\").classList.add(\"show\")\r\n                document.querySelector(\"body\").classList.add(\"ovx\")\r\n                document.querySelector(\".fileviewer\").classList.remove(\"show\")\r\n                var n = idlist.indexOf(element)\r\n                ReactDOM.render (\r\n                    <Fileviewarea name={namelist[n]} ft={typelist[n]} src={srclist[n]} mime={mimelist[n]}/>,\r\n                    document.querySelector(\".dark\")\r\n                )\r\n            }else {\r\n                defaultlp(element, range)\r\n            }\r\n    }else {\r\n        defaultlp(element, range)\r\n    }\r\n}\r\nvar stopped = ''\r\nexport function stopdownload(id, action) {\r\n    stopped = id\r\n    if(action == 1) {\r\n        document.getElementById('fileloadingtxt').innerText = \"Stopping..\"\r\n    }\r\n}\r\nasync function precallback(data, element) {\r\n    var storedToken = await localforage.getItem(\"tk\")\r\n    data = JSON.parse(data)\r\n    var decer = new TextDecoder();\r\n    var fnbuffer = decode(data.Name)\r\n    var salt = fnbuffer.slice(0,16);\r\n    var iv = fnbuffer.slice(16,28);\r\n    var realname = fnbuffer.slice(28);\r\n    var dec1 = await decryptFromPw(storedToken.slice(200), iv, salt, realname)\r\n\r\n    var encryptedfileheader = decode(data.Filekey);\r\n\r\n    var salt = encryptedfileheader.slice(0, 16)\r\n    var iv = encryptedfileheader.slice(16, 28)\r\n    var encryptedfilekey = encryptedfileheader.slice(28)\r\n    var dec = await decryptFromPw(storedToken.slice(200), iv, salt, encryptedfilekey)\r\n\r\n    var importedkey = await crypto.subtle.importKey(\"raw\", dec,{name: 'AES-GCM'},false,[\"encrypt\", \"decrypt\"])\r\n    var filetype = decer.decode(dec1).split('.');\r\n    var fileextension\r\n    if(vars.imagefile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1) {\r\n        fileextension = \"img\"\r\n    }\r\n    else if(vars.vidfile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1) {\r\n        fileextension = \"vid\"\r\n\r\n    }else if(vars.audiofile.indexOf(filetype[filetype.length - 1].toLowerCase()) !== -1){\r\n        fileextension = \"audio\"\r\n\r\n    }else {\r\n        fileextension = \"idk\"\r\n    }\r\n    document.querySelector(\".fileviewer\").classList.add(\"show\")\r\n    ReactDOM.render(\r\n        <Defaultxhrloading />, \r\n        document.querySelector(\".fileviewer\")\r\n    )\r\n        if(stopped.length == 0) {\r\n            document.querySelector(\"#fileloadingtxt\").innerText= \"Preparing..\"\r\n        }\r\n        var nth = 0\r\n        viewfile(element, (((1024 * 1024)*5) + 45)*(nth)+\":\"+(((1024 * 1024)*5) + 45)*(nth+1), importedkey, decer.decode(dec1), data.Mime, nth, fileextension, true, data.Size)\r\n}\r\nfunction calchunk(filelength) {\r\n    var chunkcount\r\n    chunkcount = parseInt(filelength / ((1024 * 1024)*5));\r\n    if((filelength%((1024 * 1024)*5))>0) {\r\n        chunkcount = chunkcount + 1;\r\n    }\r\n    return chunkcount;\r\n}\r\nvar currentupload = 0;\r\nvar now = 0;\r\nvar finalblob = new Blob([])\r\nvar bloblist = []\r\nvar hashlist = []\r\nasync function viewfile(element, range, deckey, filename, filemime, nth, extension, instantsave, originalfilesize) {\r\n    var storedToken = await localforage.getItem(\"tk\")\r\n\r\n    async function processfile(data) {\r\n    var file = data\r\n    var aB = new Uint8Array(file)\r\n    var fileiv = aB.slice(0, 12)\r\n    var encfile = aB.slice(28)\r\n    var decryptedfiledata = await crypto.subtle.decrypt({name: 'AES-GCM', iv: fileiv}, deckey, encfile)\r\n    finishlist.push(nth)\r\n        if(instantsave == false) {\r\n            finaldecryptedfd.set(new Uint8Array(decryptedfiledata), parseInt(((1024 * 1024)*5)+1)*(nth))\r\n            if(finishlist.length == calchunk(originalfilesize)) {\r\n                var fileblob = URL.createObjectURL(new Blob([finaldecryptedfd], {type: filemime}))\r\n                finaldecryptedfd = new Uint8Array(0)\r\n                finishlist = []\r\n                currentlyrendered.push(JSON.stringify({id : element, blob :fileblob, name : filename, ext : extension, mime : filemime}))\r\n                document.querySelector(\".fileviewer\").classList.remove(\"show\")\r\n                document.querySelector(\".dark\").classList.add(\"show\")\r\n                ReactDOM.render (\r\n                    <Fileviewarea name={filename} ft={extension} src={fileblob} mime={filemime}/>,\r\n                    document.querySelector(\".dark\")\r\n                )\r\n                now = 0;\r\n                currentupload = 0;\r\n            }\r\n        }else if(instantsave == true) {\r\n            var newu8 = new Uint8Array(decryptedfiledata)\r\n            var chunkhash = await hash(\"SHA-256\", newu8)\r\n            hashlist.push(chunkhash)\r\n            var preblob = new Blob([newu8])\r\n            bloblist[nth] = preblob\r\n            finalblob = new Blob(bloblist)\r\n            if(finalblob.size == originalfilesize) {\r\n                console.log(await hash(\"SHA-256\", new TextEncoder().encode(hashlist.join(''))))\r\n                hashlist = []\r\n                var finurl = URL.createObjectURL(new Blob([finalblob], {type: filemime}))\r\n                document.querySelector(\".fileviewer\").classList.remove(\"show\")\r\n                currentlyrendered.push(JSON.stringify({id : element, blob :finurl, name : filename, ext : extension, mime : filemime}))\r\n                document.querySelector(\".dark\").classList.add(\"show\")\r\n                ReactDOM.render (\r\n                    <Fileviewarea name={filename} ft={extension} src={finurl} mime={filemime}/>,\r\n                    document.querySelector(\".dark\")\r\n                )\r\n                //init\r\n                InitProg()\r\n            }\r\n        }  \r\n    }\r\n    function InitProg() {\r\n        finalblob = new Blob([])\r\n        bloblist = []\r\n        currentupload = 0;\r\n        now = 0;\r\n    }\r\n    var token = storedToken.slice(0, 200);\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", \"https://storage.petadrop.com/vf/\"+element+\"/\"+range, true)\r\n    xhr.setRequestHeader(\"X-XWC-act\", \"ahf\")\r\n    xhr.responseType = \"arraybuffer\";\r\n    var form = new FormData();\r\n    form.append('dir', element +\"|\"+ token +\"|\"+ range);\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState === xhr.DONE) {\r\n            if (xhr.status === 200) {\r\n                processfile(xhr.response);\r\n            }else if (xhr.status == 0){\r\n                document.querySelector(\"#fileloadingtxt\").innerText= \" \";\r\n                document.querySelector(\".fileviewer\").classList.remove(\"show\")\r\n            }else {\r\n                document.querySelector(\"#fileloadingtxt\").innerText=\"oopsie i found an error: \"+xhr.status;\r\n            }\r\n        } \r\n            \r\n    };\r\n    var RanFunc = false\r\n    xhr.onprogress = function(e) {\r\n        if(stopped.length == 0) {\r\n            currentupload = e.loaded\r\n            document.querySelector(\"#fileloadingtxt\").innerText=  \"Downloaded \" + Math.round(((now+currentupload)/originalfilesize)*100) + \"%\"\r\n            if(RanFunc == false && (e.loaded/5242925)*100 > 10) {\r\n                viewfile(element, (((1024 * 1024)*5) + 45)*(nth+1)+\":\"+(((1024 * 1024)*5) + 45)*(nth+2), deckey, filename, filemime, nth+1, extension, instantsave, originalfilesize)\r\n                RanFunc = true\r\n            }\r\n        }else {\r\n            xhr.abort()\r\n            stopped =''\r\n            InitProg()\r\n        }\r\n        \r\n    }\r\n    xhr.onloadend = function() {\r\n        now = currentupload + now\r\n    }\r\n\r\n    xhr.send(form);\r\n}",{"ruleId":"170","severity":1,"message":"171","line":22,"column":12,"nodeType":"172","messageId":"173","endLine":22,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":25,"column":18,"nodeType":"172","messageId":"173","endLine":25,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":27,"column":18,"nodeType":"172","messageId":"173","endLine":27,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":29,"column":18,"nodeType":"172","messageId":"173","endLine":29,"endColumn":20},{"ruleId":"174","severity":1,"message":"175","line":138,"column":9,"nodeType":"176","messageId":"177","endLine":138,"endColumn":18},{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"170","severity":1,"message":"171","line":37,"column":34,"nodeType":"172","messageId":"173","endLine":37,"endColumn":36},{"ruleId":"170","severity":1,"message":"171","line":45,"column":29,"nodeType":"172","messageId":"173","endLine":45,"endColumn":31},{"ruleId":"170","severity":1,"message":"182","line":59,"column":41,"nodeType":"172","messageId":"173","endLine":59,"endColumn":43},{"ruleId":"170","severity":1,"message":"182","line":61,"column":48,"nodeType":"172","messageId":"173","endLine":61,"endColumn":50},{"ruleId":"170","severity":1,"message":"182","line":63,"column":47,"nodeType":"172","messageId":"173","endLine":63,"endColumn":49},{"ruleId":"170","severity":1,"message":"182","line":65,"column":46,"nodeType":"172","messageId":"173","endLine":65,"endColumn":48},{"ruleId":"170","severity":1,"message":"182","line":67,"column":48,"nodeType":"172","messageId":"173","endLine":67,"endColumn":50},{"ruleId":"170","severity":1,"message":"171","line":75,"column":29,"nodeType":"172","messageId":"173","endLine":75,"endColumn":31},{"ruleId":"170","severity":1,"message":"171","line":77,"column":35,"nodeType":"172","messageId":"173","endLine":77,"endColumn":37},{"ruleId":"170","severity":1,"message":"182","line":79,"column":31,"nodeType":"172","messageId":"173","endLine":79,"endColumn":33},{"ruleId":"170","severity":1,"message":"171","line":83,"column":27,"nodeType":"172","messageId":"173","endLine":83,"endColumn":29},{"ruleId":"183","severity":1,"message":"184","line":121,"column":21,"nodeType":"185","endLine":121,"endColumn":147},{"ruleId":"170","severity":1,"message":"171","line":149,"column":39,"nodeType":"172","messageId":"173","endLine":149,"endColumn":41},{"ruleId":"170","severity":1,"message":"182","line":165,"column":41,"nodeType":"172","messageId":"173","endLine":165,"endColumn":43},{"ruleId":"170","severity":1,"message":"182","line":167,"column":48,"nodeType":"172","messageId":"173","endLine":167,"endColumn":50},{"ruleId":"170","severity":1,"message":"182","line":169,"column":47,"nodeType":"172","messageId":"173","endLine":169,"endColumn":49},{"ruleId":"170","severity":1,"message":"182","line":171,"column":46,"nodeType":"172","messageId":"173","endLine":171,"endColumn":48},{"ruleId":"170","severity":1,"message":"182","line":173,"column":48,"nodeType":"172","messageId":"173","endLine":173,"endColumn":50},{"ruleId":"170","severity":1,"message":"171","line":181,"column":29,"nodeType":"172","messageId":"173","endLine":181,"endColumn":31},{"ruleId":"170","severity":1,"message":"171","line":183,"column":35,"nodeType":"172","messageId":"173","endLine":183,"endColumn":37},{"ruleId":"170","severity":1,"message":"182","line":185,"column":31,"nodeType":"172","messageId":"173","endLine":185,"endColumn":33},{"ruleId":"170","severity":1,"message":"171","line":189,"column":27,"nodeType":"172","messageId":"173","endLine":189,"endColumn":29},{"ruleId":"183","severity":1,"message":"184","line":227,"column":21,"nodeType":"185","endLine":227,"endColumn":147},{"ruleId":"170","severity":1,"message":"171","line":261,"column":18,"nodeType":"172","messageId":"173","endLine":261,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":263,"column":24,"nodeType":"172","messageId":"173","endLine":263,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":265,"column":24,"nodeType":"172","messageId":"173","endLine":265,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":267,"column":24,"nodeType":"172","messageId":"173","endLine":267,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":304,"column":18,"nodeType":"172","messageId":"173","endLine":304,"endColumn":20},{"ruleId":"170","severity":1,"message":"171","line":306,"column":24,"nodeType":"172","messageId":"173","endLine":306,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":308,"column":24,"nodeType":"172","messageId":"173","endLine":308,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":310,"column":24,"nodeType":"172","messageId":"173","endLine":310,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":312,"column":24,"nodeType":"172","messageId":"173","endLine":312,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":366,"column":36,"nodeType":"172","messageId":"173","endLine":366,"endColumn":38},{"ruleId":"170","severity":1,"message":"171","line":374,"column":31,"nodeType":"172","messageId":"173","endLine":374,"endColumn":33},{"ruleId":"170","severity":1,"message":"171","line":424,"column":56,"nodeType":"172","messageId":"173","endLine":424,"endColumn":58},{"ruleId":"170","severity":1,"message":"182","line":454,"column":30,"nodeType":"172","messageId":"173","endLine":454,"endColumn":32},{"ruleId":"170","severity":1,"message":"171","line":463,"column":30,"nodeType":"172","messageId":"173","endLine":463,"endColumn":32},{"ruleId":"183","severity":1,"message":"184","line":464,"column":24,"nodeType":"185","endLine":464,"endColumn":158},{"ruleId":"170","severity":1,"message":"171","line":465,"column":36,"nodeType":"172","messageId":"173","endLine":465,"endColumn":38},{"ruleId":"170","severity":1,"message":"171","line":467,"column":37,"nodeType":"172","messageId":"173","endLine":467,"endColumn":39},{"ruleId":"170","severity":1,"message":"171","line":529,"column":14,"nodeType":"172","messageId":"173","endLine":529,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":531,"column":20,"nodeType":"172","messageId":"173","endLine":531,"endColumn":22},{"ruleId":"170","severity":1,"message":"171","line":552,"column":29,"nodeType":"172","messageId":"173","endLine":552,"endColumn":31},{"ruleId":"170","severity":1,"message":"171","line":560,"column":14,"nodeType":"172","messageId":"173","endLine":560,"endColumn":16},{"ruleId":"170","severity":1,"message":"171","line":562,"column":20,"nodeType":"172","messageId":"173","endLine":562,"endColumn":22},{"ruleId":"170","severity":1,"message":"171","line":568,"column":29,"nodeType":"172","messageId":"173","endLine":568,"endColumn":31},{"ruleId":"170","severity":1,"message":"171","line":582,"column":46,"nodeType":"172","messageId":"173","endLine":582,"endColumn":48},{"ruleId":"183","severity":1,"message":"184","line":703,"column":17,"nodeType":"185","endLine":703,"endColumn":63},{"ruleId":"183","severity":1,"message":"184","line":713,"column":50,"nodeType":"185","endLine":713,"endColumn":100},{"ruleId":"170","severity":1,"message":"171","line":728,"column":28,"nodeType":"172","messageId":"173","endLine":728,"endColumn":30},{"ruleId":"170","severity":1,"message":"182","line":734,"column":27,"nodeType":"172","messageId":"173","endLine":734,"endColumn":29},{"ruleId":"170","severity":1,"message":"171","line":770,"column":27,"nodeType":"172","messageId":"173","endLine":770,"endColumn":29},{"ruleId":"170","severity":1,"message":"171","line":778,"column":29,"nodeType":"172","messageId":"173","endLine":778,"endColumn":31},{"ruleId":"170","severity":1,"message":"171","line":794,"column":35,"nodeType":"172","messageId":"173","endLine":794,"endColumn":37},{"ruleId":"174","severity":1,"message":"186","line":795,"column":17,"nodeType":"176","messageId":"177","endLine":795,"endColumn":21},{"ruleId":"170","severity":1,"message":"171","line":797,"column":35,"nodeType":"172","messageId":"173","endLine":797,"endColumn":37},{"ruleId":"174","severity":1,"message":"186","line":798,"column":17,"nodeType":"176","messageId":"177","endLine":798,"endColumn":21},{"ruleId":"170","severity":1,"message":"171","line":799,"column":35,"nodeType":"172","messageId":"173","endLine":799,"endColumn":37},{"ruleId":"174","severity":1,"message":"186","line":800,"column":17,"nodeType":"176","messageId":"177","endLine":800,"endColumn":21},{"ruleId":"170","severity":1,"message":"171","line":21,"column":38,"nodeType":"172","messageId":"173","endLine":21,"endColumn":40},{"ruleId":"170","severity":1,"message":"182","line":40,"column":55,"nodeType":"172","messageId":"173","endLine":40,"endColumn":57},{"ruleId":"170","severity":1,"message":"182","line":48,"column":55,"nodeType":"172","messageId":"173","endLine":48,"endColumn":57},{"ruleId":"174","severity":1,"message":"187","line":49,"column":25,"nodeType":"176","messageId":"177","endLine":49,"endColumn":26},{"ruleId":"170","severity":1,"message":"182","line":61,"column":55,"nodeType":"172","messageId":"173","endLine":61,"endColumn":57},{"ruleId":"170","severity":1,"message":"171","line":136,"column":40,"nodeType":"172","messageId":"173","endLine":136,"endColumn":42},{"ruleId":"170","severity":1,"message":"171","line":139,"column":46,"nodeType":"172","messageId":"173","endLine":139,"endColumn":48},{"ruleId":"170","severity":1,"message":"171","line":148,"column":20,"nodeType":"172","messageId":"173","endLine":148,"endColumn":22},{"ruleId":"170","severity":1,"message":"171","line":197,"column":26,"nodeType":"172","messageId":"173","endLine":197,"endColumn":28},{"ruleId":"170","severity":1,"message":"171","line":247,"column":51,"nodeType":"172","messageId":"173","endLine":247,"endColumn":53},{"ruleId":"170","severity":1,"message":"171","line":259,"column":20,"nodeType":"172","messageId":"173","endLine":259,"endColumn":22},{"ruleId":"170","severity":1,"message":"171","line":268,"column":29,"nodeType":"172","messageId":"173","endLine":268,"endColumn":31},{"ruleId":"170","severity":1,"message":"182","line":352,"column":51,"nodeType":"172","messageId":"173","endLine":352,"endColumn":53},{"ruleId":"170","severity":1,"message":"171","line":355,"column":50,"nodeType":"172","messageId":"173","endLine":355,"endColumn":52},{"ruleId":"183","severity":1,"message":"184","line":431,"column":38,"nodeType":"185","endLine":431,"endColumn":106},{"ruleId":"170","severity":1,"message":"171","line":438,"column":44,"nodeType":"172","messageId":"173","endLine":438,"endColumn":46},{"ruleId":"170","severity":1,"message":"171","line":440,"column":50,"nodeType":"172","messageId":"173","endLine":440,"endColumn":52},{"ruleId":"188","severity":1,"message":"189","line":445,"column":42,"nodeType":"190","messageId":"191","endLine":445,"endColumn":88},{"ruleId":"174","severity":1,"message":"192","line":470,"column":9,"nodeType":"176","messageId":"177","endLine":470,"endColumn":14},{"ruleId":"170","severity":1,"message":"182","line":475,"column":33,"nodeType":"172","messageId":"173","endLine":475,"endColumn":35},{"ruleId":"174","severity":1,"message":"187","line":481,"column":17,"nodeType":"176","messageId":"177","endLine":481,"endColumn":18},{"ruleId":"170","severity":1,"message":"171","line":495,"column":48,"nodeType":"172","messageId":"173","endLine":495,"endColumn":50},{"ruleId":"174","severity":1,"message":"187","line":502,"column":17,"nodeType":"176","messageId":"177","endLine":502,"endColumn":18},{"ruleId":"170","severity":1,"message":"171","line":504,"column":24,"nodeType":"172","messageId":"173","endLine":504,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":509,"column":51,"nodeType":"172","messageId":"173","endLine":509,"endColumn":53},{"ruleId":"170","severity":1,"message":"171","line":525,"column":31,"nodeType":"172","messageId":"173","endLine":525,"endColumn":33},{"ruleId":"170","severity":1,"message":"171","line":593,"column":37,"nodeType":"172","messageId":"173","endLine":593,"endColumn":39},{"ruleId":"170","severity":1,"message":"171","line":622,"column":48,"nodeType":"172","messageId":"173","endLine":622,"endColumn":50},{"ruleId":"170","severity":1,"message":"171","line":663,"column":55,"nodeType":"172","messageId":"173","endLine":663,"endColumn":57},{"ruleId":"188","severity":1,"message":"193","line":711,"column":46,"nodeType":"190","messageId":"191","endLine":711,"endColumn":116},{"ruleId":"170","severity":1,"message":"171","line":724,"column":24,"nodeType":"172","messageId":"173","endLine":724,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":728,"column":51,"nodeType":"172","messageId":"173","endLine":728,"endColumn":53},{"ruleId":"194","severity":1,"message":"195","line":24,"column":23,"nodeType":"196","messageId":"197","endLine":24,"endColumn":41,"fix":"198"},{"ruleId":"174","severity":1,"message":"199","line":118,"column":9,"nodeType":"176","messageId":"177","endLine":118,"endColumn":11},{"ruleId":"174","severity":1,"message":"200","line":119,"column":9,"nodeType":"176","messageId":"177","endLine":119,"endColumn":13},{"ruleId":"170","severity":1,"message":"171","line":23,"column":32,"nodeType":"172","messageId":"173","endLine":23,"endColumn":34},{"ruleId":"170","severity":1,"message":"171","line":98,"column":84,"nodeType":"172","messageId":"173","endLine":98,"endColumn":86},{"ruleId":"201","severity":1,"message":"202","line":3,"column":17,"nodeType":"176","messageId":"203","endLine":3,"endColumn":23},{"ruleId":"201","severity":1,"message":"204","line":4,"column":9,"nodeType":"176","messageId":"203","endLine":4,"endColumn":19},{"ruleId":"170","severity":1,"message":"171","line":29,"column":13,"nodeType":"172","messageId":"173","endLine":29,"endColumn":15},{"ruleId":"170","severity":1,"message":"171","line":29,"column":50,"nodeType":"172","messageId":"173","endLine":29,"endColumn":52},{"ruleId":"201","severity":1,"message":"205","line":80,"column":9,"nodeType":"176","messageId":"203","endLine":80,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":87,"column":75,"nodeType":"172","messageId":"173","endLine":87,"endColumn":77},{"ruleId":"170","severity":1,"message":"171","line":102,"column":13,"nodeType":"172","messageId":"173","endLine":102,"endColumn":15},{"ruleId":"170","severity":1,"message":"171","line":102,"column":50,"nodeType":"172","messageId":"173","endLine":102,"endColumn":52},{"ruleId":"194","severity":1,"message":"195","line":129,"column":27,"nodeType":"196","messageId":"197","endLine":129,"endColumn":45,"fix":"206"},{"ruleId":"174","severity":1,"message":"207","line":133,"column":21,"nodeType":"176","messageId":"177","endLine":133,"endColumn":24},{"ruleId":"170","severity":1,"message":"171","line":191,"column":48,"nodeType":"172","messageId":"173","endLine":191,"endColumn":50},{"ruleId":"170","severity":1,"message":"171","line":191,"column":80,"nodeType":"172","messageId":"173","endLine":191,"endColumn":82},{"ruleId":"194","severity":1,"message":"195","line":271,"column":51,"nodeType":"196","messageId":"197","endLine":271,"endColumn":69,"fix":"208"},{"ruleId":"170","severity":1,"message":"171","line":281,"column":56,"nodeType":"172","messageId":"173","endLine":281,"endColumn":58},{"ruleId":"170","severity":1,"message":"171","line":291,"column":67,"nodeType":"172","messageId":"173","endLine":291,"endColumn":69},{"ruleId":"170","severity":1,"message":"171","line":303,"column":70,"nodeType":"172","messageId":"173","endLine":303,"endColumn":72},{"ruleId":"209","severity":1,"message":"210","line":325,"column":90,"nodeType":"172","messageId":"211","endLine":325,"endColumn":91},{"ruleId":"170","severity":1,"message":"182","line":58,"column":40,"nodeType":"172","messageId":"173","endLine":58,"endColumn":42},{"ruleId":"170","severity":1,"message":"171","line":77,"column":15,"nodeType":"172","messageId":"173","endLine":77,"endColumn":17},{"ruleId":"174","severity":1,"message":"200","line":93,"column":9,"nodeType":"176","messageId":"177","endLine":93,"endColumn":13},{"ruleId":"174","severity":1,"message":"199","line":94,"column":9,"nodeType":"176","messageId":"177","endLine":94,"endColumn":11},{"ruleId":"170","severity":1,"message":"171","line":118,"column":27,"nodeType":"172","messageId":"173","endLine":118,"endColumn":29},{"ruleId":"170","severity":1,"message":"171","line":147,"column":24,"nodeType":"172","messageId":"173","endLine":147,"endColumn":26},{"ruleId":"170","severity":1,"message":"171","line":149,"column":34,"nodeType":"172","messageId":"173","endLine":149,"endColumn":36},{"ruleId":"170","severity":1,"message":"171","line":163,"column":30,"nodeType":"172","messageId":"173","endLine":163,"endColumn":32},{"ruleId":"170","severity":1,"message":"171","line":170,"column":31,"nodeType":"172","messageId":"173","endLine":170,"endColumn":33},{"ruleId":"170","severity":1,"message":"171","line":203,"column":34,"nodeType":"172","messageId":"173","endLine":203,"endColumn":36},{"ruleId":"170","severity":1,"message":"171","line":214,"column":27,"nodeType":"172","messageId":"173","endLine":214,"endColumn":29},{"ruleId":"170","severity":1,"message":"171","line":217,"column":24,"nodeType":"172","messageId":"173","endLine":217,"endColumn":26},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'instances' is already defined.","Identifier","redeclared","no-native-reassign",["212"],"no-negated-in-lhs",["213"],"Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'cont' is already defined.","'i' is already defined.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'nthJson'.","FunctionExpression","unsafeRefs","'list1' is already defined.","Function declared in a loop contains unsafe references to variable(s) 'i'.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"214","text":"215"},"'iv' is already defined.","'salt' is already defined.","no-unused-vars","'decode' is defined but never used.","unusedVar","'updatedata' is defined but never used.","'state' is assigned a value but never used.",{"range":"216","text":"215"},"'enc' is already defined.",{"range":"217","text":"215"},"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation",[897,897],"()",[4855,4855],[11955,11955]]